

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Jun 14 22:03:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    17                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 12/10/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0004                     fsr             equ	4
    85     0004                     fsr0            equ	4
    86     0000                     indf            equ	0
    87     0000                     indf0           equ	0
    88     0002                     pc              equ	2
    89     0002                     pcl             equ	2
    90     000A                     pclath          equ	10
    91     0003                     status          equ	3
    92     0000                     INDF            equ	0	;# 
    93     0001                     TMR0            equ	1	;# 
    94     0002                     PCL             equ	2	;# 
    95     0003                     STATUS          equ	3	;# 
    96     0004                     FSR             equ	4	;# 
    97     0005                     PORTA           equ	5	;# 
    98     0006                     PORTB           equ	6	;# 
    99     0007                     PORTC           equ	7	;# 
   100     0008                     PORTD           equ	8	;# 
   101     0009                     PORTE           equ	9	;# 
   102     000A                     PCLATH          equ	10	;# 
   103     000B                     INTCON          equ	11	;# 
   104     000C                     PIR1            equ	12	;# 
   105     000D                     PIR2            equ	13	;# 
   106     000E                     TMR1            equ	14	;# 
   107     000E                     TMR1L           equ	14	;# 
   108     000F                     TMR1H           equ	15	;# 
   109     0010                     T1CON           equ	16	;# 
   110     0011                     TMR2            equ	17	;# 
   111     0012                     T2CON           equ	18	;# 
   112     0013                     SSPBUF          equ	19	;# 
   113     0014                     SSPCON          equ	20	;# 
   114     0015                     CCPR1           equ	21	;# 
   115     0015                     CCPR1L          equ	21	;# 
   116     0016                     CCPR1H          equ	22	;# 
   117     0017                     CCP1CON         equ	23	;# 
   118     0018                     RCSTA           equ	24	;# 
   119     0019                     TXREG           equ	25	;# 
   120     001A                     RCREG           equ	26	;# 
   121     001B                     CCPR2           equ	27	;# 
   122     001B                     CCPR2L          equ	27	;# 
   123     001C                     CCPR2H          equ	28	;# 
   124     001D                     CCP2CON         equ	29	;# 
   125     001E                     ADRESH          equ	30	;# 
   126     001F                     ADCON0          equ	31	;# 
   127     0081                     OPTION_REG      equ	129	;# 
   128     0085                     TRISA           equ	133	;# 
   129     0086                     TRISB           equ	134	;# 
   130     0087                     TRISC           equ	135	;# 
   131     0088                     TRISD           equ	136	;# 
   132     0089                     TRISE           equ	137	;# 
   133     008C                     PIE1            equ	140	;# 
   134     008D                     PIE2            equ	141	;# 
   135     008E                     PCON            equ	142	;# 
   136     0091                     SSPCON2         equ	145	;# 
   137     0092                     PR2             equ	146	;# 
   138     0093                     SSPADD          equ	147	;# 
   139     0094                     SSPSTAT         equ	148	;# 
   140     0098                     TXSTA           equ	152	;# 
   141     0099                     SPBRG           equ	153	;# 
   142     009C                     CMCON           equ	156	;# 
   143     009D                     CVRCON          equ	157	;# 
   144     009E                     ADRESL          equ	158	;# 
   145     009F                     ADCON1          equ	159	;# 
   146     010C                     EEDATA          equ	268	;# 
   147     010D                     EEADR           equ	269	;# 
   148     010E                     EEDATH          equ	270	;# 
   149     010F                     EEADRH          equ	271	;# 
   150     018C                     EECON1          equ	396	;# 
   151     018D                     EECON2          equ	397	;# 
   152     0000                     INDF            equ	0	;# 
   153     0001                     TMR0            equ	1	;# 
   154     0002                     PCL             equ	2	;# 
   155     0003                     STATUS          equ	3	;# 
   156     0004                     FSR             equ	4	;# 
   157     0005                     PORTA           equ	5	;# 
   158     0006                     PORTB           equ	6	;# 
   159     0007                     PORTC           equ	7	;# 
   160     0008                     PORTD           equ	8	;# 
   161     0009                     PORTE           equ	9	;# 
   162     000A                     PCLATH          equ	10	;# 
   163     000B                     INTCON          equ	11	;# 
   164     000C                     PIR1            equ	12	;# 
   165     000D                     PIR2            equ	13	;# 
   166     000E                     TMR1            equ	14	;# 
   167     000E                     TMR1L           equ	14	;# 
   168     000F                     TMR1H           equ	15	;# 
   169     0010                     T1CON           equ	16	;# 
   170     0011                     TMR2            equ	17	;# 
   171     0012                     T2CON           equ	18	;# 
   172     0013                     SSPBUF          equ	19	;# 
   173     0014                     SSPCON          equ	20	;# 
   174     0015                     CCPR1           equ	21	;# 
   175     0015                     CCPR1L          equ	21	;# 
   176     0016                     CCPR1H          equ	22	;# 
   177     0017                     CCP1CON         equ	23	;# 
   178     0018                     RCSTA           equ	24	;# 
   179     0019                     TXREG           equ	25	;# 
   180     001A                     RCREG           equ	26	;# 
   181     001B                     CCPR2           equ	27	;# 
   182     001B                     CCPR2L          equ	27	;# 
   183     001C                     CCPR2H          equ	28	;# 
   184     001D                     CCP2CON         equ	29	;# 
   185     001E                     ADRESH          equ	30	;# 
   186     001F                     ADCON0          equ	31	;# 
   187     0081                     OPTION_REG      equ	129	;# 
   188     0085                     TRISA           equ	133	;# 
   189     0086                     TRISB           equ	134	;# 
   190     0087                     TRISC           equ	135	;# 
   191     0088                     TRISD           equ	136	;# 
   192     0089                     TRISE           equ	137	;# 
   193     008C                     PIE1            equ	140	;# 
   194     008D                     PIE2            equ	141	;# 
   195     008E                     PCON            equ	142	;# 
   196     0091                     SSPCON2         equ	145	;# 
   197     0092                     PR2             equ	146	;# 
   198     0093                     SSPADD          equ	147	;# 
   199     0094                     SSPSTAT         equ	148	;# 
   200     0098                     TXSTA           equ	152	;# 
   201     0099                     SPBRG           equ	153	;# 
   202     009C                     CMCON           equ	156	;# 
   203     009D                     CVRCON          equ	157	;# 
   204     009E                     ADRESL          equ	158	;# 
   205     009F                     ADCON1          equ	159	;# 
   206     010C                     EEDATA          equ	268	;# 
   207     010D                     EEADR           equ	269	;# 
   208     010E                     EEDATH          equ	270	;# 
   209     010F                     EEADRH          equ	271	;# 
   210     018C                     EECON1          equ	396	;# 
   211     018D                     EECON2          equ	397	;# 
   212                           
   213                           	psect	idataBANK1
   214     0D98                     __pidataBANK1:
   215                           
   216                           ;initializer for _keypad
   217     0D98  3437               	retlw	55
   218     0D99  3438               	retlw	56
   219     0D9A  3439               	retlw	57
   220     0D9B  342F               	retlw	47
   221     0D9C  3434               	retlw	52
   222     0D9D  3435               	retlw	53
   223     0D9E  3436               	retlw	54
   224     0D9F  342A               	retlw	42
   225     0DA0  3431               	retlw	49
   226     0DA1  3432               	retlw	50
   227     0DA2  3433               	retlw	51
   228     0DA3  342D               	retlw	45
   229     0DA4  3443               	retlw	67
   230     0DA5  3430               	retlw	48
   231     0DA6  343D               	retlw	61
   232     0DA7  342B               	retlw	43
   233     0008                     _PORTD          set	8
   234     0006                     _PORTB          set	6
   235     0006                     _PORTBbits      set	6
   236     0088                     _TRISD          set	136
   237     0086                     _TRISB          set	134
   238                           
   239                           	psect	strings
   240     0800                     __pstrings:
   241     0800                     stringtab:
   242     0800                     __stringtab:
   243     0800                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246     0800                     stringdir:
   247     0800  3008               	movlw	high stringdir
   248     0801  008A               	movwf	10
   249     0802  0804               	movf	4,w
   250     0803  0A84               	incf	4,f
   251     0804  0782               	addwf	2,f
   252     0805                     __stringbase:
   253     0805  3400               	retlw	0
   254     0806                     __end_of__stringtab:
   255     0806                     STR_1:
   256     0806  3425               	retlw	37	;'%'
   257     0807  3464               	retlw	100	;'d'
   258     0808  3400               	retlw	0
   259                           
   260                           	psect	cinit
   261     07DB                     start_initialization:	
   262                           ; #config settings
   263                           
   264     07DB                     __initialization:
   265                           
   266                           ; Initialize objects allocated to BANK1
   267     07DB  1383               	bcf	3,7	;select IRP bank0
   268     07DC  30D4               	movlw	low (__pdataBANK1+16)
   269     07DD  00FD               	movwf	btemp+-1
   270     07DE  300D               	movlw	high __pidataBANK1
   271     07DF  00FE               	movwf	btemp
   272     07E0  3098               	movlw	low __pidataBANK1
   273     07E1  00FF               	movwf	btemp+1
   274     07E2  30C4               	movlw	low __pdataBANK1
   275     07E3  0084               	movwf	4
   276     07E4  120A  158A  25E3  120A  118A  	fcall	init_ram0
   277                           
   278                           ; Clear objects allocated to BANK2
   279     07E9  1783               	bsf	3,7	;select IRP bank2
   280     07EA  3010               	movlw	low __pbssBANK2
   281     07EB  0084               	movwf	4
   282     07EC  3030               	movlw	low (__pbssBANK2+32)
   283     07ED  120A  158A  2579  120A  118A  	fcall	clear_ram0
   284                           
   285                           ; Clear objects allocated to BANK1
   286     07F2  1383               	bcf	3,7	;select IRP bank0
   287     07F3  30A0               	movlw	low __pbssBANK1
   288     07F4  0084               	movwf	4
   289     07F5  30C4               	movlw	low (__pbssBANK1+36)
   290     07F6  120A  158A  2579  120A  118A  	fcall	clear_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293     07FB  01EE               	clrf	__pbssBANK0& (0+127)
   294     07FC                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297     07FC                     __end_of__initialization:
   298     07FC  0183               	clrf	3
   299     07FD  120A  118A  2E70   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bssBANK0
   302     006E                     __pbssBANK0:
   303     006E                     _flags:
   304     006E                     	ds	1
   305                           
   306                           	psect	bssBANK1
   307     00A0                     __pbssBANK1:
   308     00A0                     _dbuf:
   309     00A0                     	ds	32
   310     00C0                     _width:
   311     00C0                     	ds	2
   312     00C2                     _prec:
   313     00C2                     	ds	2
   314                           
   315                           	psect	dataBANK1
   316     00C4                     __pdataBANK1:
   317     00C4                     _keypad:
   318     00C4                     	ds	16
   319                           
   320                           	psect	bssBANK2
   321     0110                     __pbssBANK2:
   322     0110                     main@F1556:
   323     0110                     	ds	32
   324                           
   325                           	psect	inittext
   326     0DDF                     init_fetch0:	
   327                           ;	Called with low address in FSR and high address in W
   328                           
   329     0DDF  087E               	movf	btemp,w
   330     0DE0  008A               	movwf	10
   331     0DE1  087F               	movf	btemp+1,w
   332     0DE2  0082               	movwf	2
   333     0DE3                     init_ram0:	
   334                           ;Called with:
   335                           ;	high address of idata address in btemp 
   336                           ;	low address of idata address in btemp+1 
   337                           ;	low address of data in FSR
   338                           ;	high address + 1 of data in btemp-1
   339                           
   340     0DE3  120A  158A  25DF  120A  158A  	fcall	init_fetch0
   341     0DE8  0080               	movwf	0
   342     0DE9  0A84               	incf	4,f
   343     0DEA  0804               	movf	4,w
   344     0DEB  067D               	xorwf	btemp+-1,w
   345     0DEC  1903               	btfsc	3,2
   346     0DED  3400               	retlw	0
   347     0DEE  0AFF               	incf	btemp+1,f
   348     0DEF  1903               	btfsc	3,2
   349     0DF0  0AFE               	incf	btemp,f
   350     0DF1  2DE3               	goto	init_ram0
   351                           
   352                           	psect	clrtext
   353     0D79                     clear_ram0:	
   354                           ;	Called with FSR containing the base address, and
   355                           ;	W with the last address+1
   356                           
   357     0D79  0064               	clrwdt	;clear the watchdog before getting into this loop
   358     0D7A                     clrloop0:
   359     0D7A  0180               	clrf	0	;clear RAM location pointed to by FSR
   360     0D7B  0A84               	incf	4,f	;increment pointer
   361     0D7C  0604               	xorwf	4,w	;XOR with final address
   362     0D7D  1903               	btfsc	3,2	;have we reached the end yet?
   363     0D7E  3400               	retlw	0	;all done for this memory range, return
   364     0D7F  0604               	xorwf	4,w	;XOR again to restore value
   365     0D80  2D7A               	goto	clrloop0	;do the next byte
   366                           
   367                           	psect	cstackBANK3
   368     0190                     __pcstackBANK3:
   369     0190                     main@postfix:
   370                           
   371                           ; 32 bytes @ 0x0
   372     0190                     	ds	32
   373     01B0                     main@mem:
   374                           
   375                           ; 32 bytes @ 0x20
   376     01B0                     	ds	32
   377     01D0                     main@result_str:
   378                           
   379                           ; 10 bytes @ 0x40
   380     01D0                     	ds	10
   381     01DA                     main@result:
   382                           
   383                           ; 2 bytes @ 0x4A
   384     01DA                     	ds	2
   385     01DC                     main@index:
   386                           
   387                           ; 2 bytes @ 0x4C
   388     01DC                     	ds	2
   389     01DE                     main@row:
   390                           
   391                           ; 2 bytes @ 0x4E
   392     01DE                     	ds	2
   393     01E0                     main@key:
   394                           
   395                           ; 1 bytes @ 0x50
   396     01E0                     	ds	1
   397     01E1                     main@col:
   398                           
   399                           ; 2 bytes @ 0x51
   400     01E1                     	ds	2
   401                           
   402                           	psect	cstackCOMMON
   403     0070                     __pcstackCOMMON:
   404     0070                     ?_memset:
   405     0070                     ?_putch:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_stack_init:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?_stack_push:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ?_stack_peek:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ?_int_stack_init:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ?_lcd_nibble:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_lcd_pulse:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_lcd_init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_lcd_write_char:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_fputc:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_stack_empty:	
   439                           ; 2 bytes @ 0x0
   440                           
   441     0070                     ?_int_stack_empty:	
   442                           ; 2 bytes @ 0x0
   443                           
   444     0070                     ?_precedence:	
   445                           ; 2 bytes @ 0x0
   446                           
   447     0070                     ?___wmul:	
   448                           ; 2 bytes @ 0x0
   449                           
   450     0070                     ?___awdiv:	
   451                           ; 2 bytes @ 0x0
   452                           
   453     0070                     ?___awmod:	
   454                           ; 2 bytes @ 0x0
   455                           
   456     0070                     memset@dest:	
   457                           ; 2 bytes @ 0x0
   458                           
   459     0070                     putch@c:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     stack_init@s:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     stack_empty@s:	
   466                           ; 2 bytes @ 0x0
   467                           
   468     0070                     stack_push@s:	
   469                           ; 2 bytes @ 0x0
   470                           
   471     0070                     stack_peek@s:	
   472                           ; 2 bytes @ 0x0
   473                           
   474     0070                     int_stack_init@s:	
   475                           ; 2 bytes @ 0x0
   476                           
   477     0070                     int_stack_empty@s:	
   478                           ; 2 bytes @ 0x0
   479                           
   480     0070                     ___wmul@multiplier:	
   481                           ; 2 bytes @ 0x0
   482                           
   483     0070                     ___awdiv@divisor:	
   484                           ; 2 bytes @ 0x0
   485                           
   486     0070                     ___awmod@divisor:	
   487                           ; 2 bytes @ 0x0
   488                           
   489     0070                     fputc@c:	
   490                           ; 2 bytes @ 0x0
   491                           
   492     0070                     ??_putch:	
   493                           ; 2 bytes @ 0x0
   494                           
   495     0070                     ??_lcd_nibble:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ??_lcd_pulse:	
   499                           ; 1 bytes @ 0x0
   500                           
   501                           
   502                           ; 1 bytes @ 0x0
   503     0070                     	ds	1
   504     0071                     memset@c:
   505                           
   506                           ; 2 bytes @ 0x1
   507     0071                     	ds	1
   508     0072                     stack_push@c:
   509     0072                     precedence@c:	
   510                           ; 1 bytes @ 0x2
   511                           
   512     0072                     lcd_nibble@nibble:	
   513                           ; 1 bytes @ 0x2
   514                           
   515     0072                     ___wmul@multiplicand:	
   516                           ; 1 bytes @ 0x2
   517                           
   518     0072                     ___awdiv@dividend:	
   519                           ; 2 bytes @ 0x2
   520                           
   521     0072                     ___awmod@dividend:	
   522                           ; 2 bytes @ 0x2
   523                           
   524     0072                     fputc@fp:	
   525                           ; 2 bytes @ 0x2
   526                           
   527     0072                     ??_stack_init:	
   528                           ; 2 bytes @ 0x2
   529                           
   530     0072                     ??_stack_empty:	
   531                           ; 1 bytes @ 0x2
   532                           
   533     0072                     ??_stack_peek:	
   534                           ; 1 bytes @ 0x2
   535                           
   536     0072                     ??_int_stack_init:	
   537                           ; 1 bytes @ 0x2
   538                           
   539     0072                     ??_int_stack_empty:	
   540                           ; 1 bytes @ 0x2
   541                           
   542     0072                     ??_precedence:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 1 bytes @ 0x2
   547     0072                     	ds	1
   548     0073                     ?_lcd_byte:
   549     0073                     lcd_byte@mode:	
   550                           ; 1 bytes @ 0x3
   551                           
   552     0073                     memset@n:	
   553                           ; 1 bytes @ 0x3
   554                           
   555     0073                     ??_stack_push:	
   556                           ; 2 bytes @ 0x3
   557                           
   558                           
   559                           ; 1 bytes @ 0x3
   560     0073                     	ds	1
   561     0074                     ___awdiv@counter:
   562     0074                     ___awmod@counter:	
   563                           ; 1 bytes @ 0x4
   564                           
   565     0074                     ___wmul@product:	
   566                           ; 1 bytes @ 0x4
   567                           
   568     0074                     ??_fputc:	
   569                           ; 2 bytes @ 0x4
   570                           
   571     0074                     ??_lcd_byte:	
   572                           ; 1 bytes @ 0x4
   573                           
   574     0074                     ??___wmul:	
   575                           ; 1 bytes @ 0x4
   576                           
   577     0074                     ??___awdiv:	
   578                           ; 1 bytes @ 0x4
   579                           
   580     0074                     ??___awmod:	
   581                           ; 1 bytes @ 0x4
   582                           
   583                           
   584                           ; 1 bytes @ 0x4
   585     0074                     	ds	1
   586     0075                     lcd_byte@byte:
   587     0075                     ___awdiv@sign:	
   588                           ; 1 bytes @ 0x5
   589                           
   590     0075                     ___awmod@sign:	
   591                           ; 1 bytes @ 0x5
   592                           
   593     0075                     memset@p:	
   594                           ; 1 bytes @ 0x5
   595                           
   596     0075                     ??_memset:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 1 bytes @ 0x5
   601     0075                     	ds	1
   602     0076                     ?_atoi:
   603     0076                     ?_abs:	
   604                           ; 2 bytes @ 0x6
   605                           
   606     0076                     ?_infix_compare:	
   607                           ; 2 bytes @ 0x6
   608                           
   609     0076                     infix_compare@c2:	
   610                           ; 2 bytes @ 0x6
   611                           
   612     0076                     lcd_write_char@c:	
   613                           ; 1 bytes @ 0x6
   614                           
   615     0076                     atoi@s:	
   616                           ; 1 bytes @ 0x6
   617                           
   618     0076                     ___awdiv@quotient:	
   619                           ; 1 bytes @ 0x6
   620                           
   621     0076                     abs@a:	
   622                           ; 2 bytes @ 0x6
   623                           
   624     0076                     ??_lcd_init:	
   625                           ; 2 bytes @ 0x6
   626                           
   627     0076                     ??_lcd_write_char:	
   628                           ; 1 bytes @ 0x6
   629                           
   630                           
   631                           ; 1 bytes @ 0x6
   632     0076                     	ds	1
   633     0077                     ?_lcd_write_string:
   634     0077                     lcd_write_string@s:	
   635                           ; 1 bytes @ 0x7
   636                           
   637                           
   638                           ; 1 bytes @ 0x7
   639     0077                     	ds	1
   640     0078                     ?_stack_pop:
   641     0078                     ?_int_stack_pop:	
   642                           ; 1 bytes @ 0x8
   643                           
   644     0078                     stack_pop@s:	
   645                           ; 2 bytes @ 0x8
   646                           
   647     0078                     int_stack_pop@s:	
   648                           ; 2 bytes @ 0x8
   649                           
   650     0078                     ??_atoi:	
   651                           ; 2 bytes @ 0x8
   652                           
   653     0078                     ??_abs:	
   654                           ; 1 bytes @ 0x8
   655                           
   656     0078                     ??_infix_compare:	
   657                           ; 1 bytes @ 0x8
   658                           
   659     0078                     ??_lcd_write_string:	
   660                           ; 1 bytes @ 0x8
   661                           
   662                           
   663                           ; 1 bytes @ 0x8
   664     0078                     	ds	2
   665     007A                     atoi@neg:
   666     007A                     _stack_pop$95:	
   667                           ; 1 bytes @ 0xA
   668                           
   669                           
   670                           ; 2 bytes @ 0xA
   671     007A                     	ds	1
   672     007B                     atoi@n:
   673                           
   674                           ; 2 bytes @ 0xB
   675     007B                     	ds	2
   676     007D                     infix_compare@c1:
   677     007D                     vfprintf@cfmt:	
   678                           ; 1 bytes @ 0xD
   679                           
   680     007D                     ??_vfprintf:	
   681                           ; 1 bytes @ 0xD
   682                           
   683     007D                     ??_postfix_cal:	
   684                           ; 1 bytes @ 0xD
   685                           
   686                           
   687                           ; 1 bytes @ 0xD
   688     007D                     	ds	1
   689                           
   690                           	psect	cstackBANK0
   691     0020                     __pcstackBANK0:
   692     0020                     ?_int_stack_push:
   693     0020                     ?_vfpfcnvrt:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0020                     int_stack_push@s:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0020                     vfpfcnvrt@fp:	
   700                           ; 2 bytes @ 0x0
   701                           
   702     0020                     ??_stack_pop:	
   703                           ; 2 bytes @ 0x0
   704                           
   705     0020                     ??_int_stack_pop:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 1 bytes @ 0x0
   710     0020                     	ds	2
   711     0022                     vfpfcnvrt@fmt:
   712     0022                     int_stack_push@val:	
   713                           ; 1 bytes @ 0x2
   714                           
   715                           
   716                           ; 2 bytes @ 0x2
   717     0022                     	ds	1
   718     0023                     vfpfcnvrt@ap:
   719                           
   720                           ; 1 bytes @ 0x3
   721     0023                     	ds	1
   722     0024                     ??_int_stack_push:
   723     0024                     ??_vfpfcnvrt:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 1 bytes @ 0x4
   728     0024                     	ds	2
   729     0026                     vfpfcnvrt@done:
   730                           
   731                           ; 1 bytes @ 0x6
   732     0026                     	ds	1
   733     0027                     vfpfcnvrt@cp:
   734                           
   735                           ; 1 bytes @ 0x7
   736     0027                     	ds	1
   737     0028                     vfpfcnvrt@convarg:
   738                           
   739                           ; 4 bytes @ 0x8
   740     0028                     	ds	1
   741     0029                     ?_infix_to_postfix:
   742     0029                     infix_to_postfix@infix:	
   743                           ; 1 bytes @ 0x9
   744                           
   745                           
   746                           ; 1 bytes @ 0x9
   747     0029                     	ds	1
   748     002A                     infix_to_postfix@postfix:
   749                           
   750                           ; 1 bytes @ 0xA
   751     002A                     	ds	1
   752     002B                     ?_postfix_cal:
   753     002B                     postfix_cal@postfix:	
   754                           ; 2 bytes @ 0xB
   755                           
   756     002B                     ??_infix_to_postfix:	
   757                           ; 1 bytes @ 0xB
   758                           
   759                           
   760                           ; 1 bytes @ 0xB
   761     002B                     	ds	1
   762     002C                     vfpfcnvrt@c:
   763                           
   764                           ; 1 bytes @ 0xC
   765     002C                     	ds	1
   766     002D                     ?_vfprintf:
   767     002D                     infix_to_postfix@j:	
   768                           ; 2 bytes @ 0xD
   769                           
   770     002D                     vfprintf@fp:	
   771                           ; 2 bytes @ 0xD
   772                           
   773     002D                     postfix_cal@token:	
   774                           ; 2 bytes @ 0xD
   775                           
   776                           
   777                           ; 10 bytes @ 0xD
   778     002D                     	ds	2
   779     002F                     vfprintf@fmt:
   780     002F                     infix_to_postfix@s:	
   781                           ; 1 bytes @ 0xF
   782                           
   783                           
   784                           ; 22 bytes @ 0xF
   785     002F                     	ds	1
   786     0030                     vfprintf@ap:
   787                           
   788                           ; 1 bytes @ 0x10
   789     0030                     	ds	1
   790     0031                     ?_sprintf:
   791     0031                     sprintf@s:	
   792                           ; 2 bytes @ 0x11
   793                           
   794                           
   795                           ; 1 bytes @ 0x11
   796     0031                     	ds	1
   797     0032                     sprintf@fmt:
   798                           
   799                           ; 1 bytes @ 0x12
   800     0032                     	ds	3
   801     0035                     ??_sprintf:
   802                           
   803                           ; 1 bytes @ 0x15
   804     0035                     	ds	1
   805     0036                     sprintf@ap:
   806                           
   807                           ; 1 bytes @ 0x16
   808     0036                     	ds	1
   809     0037                     postfix_cal@result:
   810     0037                     sprintf@f:	
   811                           ; 2 bytes @ 0x17
   812                           
   813                           
   814                           ; 11 bytes @ 0x17
   815     0037                     	ds	2
   816     0039                     postfix_cal@token_index:
   817                           
   818                           ; 2 bytes @ 0x19
   819     0039                     	ds	2
   820     003B                     postfix_cal@a:
   821                           
   822                           ; 2 bytes @ 0x1B
   823     003B                     	ds	2
   824     003D                     postfix_cal@b:
   825                           
   826                           ; 2 bytes @ 0x1D
   827     003D                     	ds	2
   828     003F                     postfix_cal@s:
   829                           
   830                           ; 42 bytes @ 0x1F
   831     003F                     	ds	6
   832     0045                     infix_to_postfix@i:
   833                           
   834                           ; 2 bytes @ 0x25
   835     0045                     	ds	36
   836     0069                     postfix_cal@i:
   837                           
   838                           ; 2 bytes @ 0x49
   839     0069                     	ds	2
   840     006B                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x4B
   843     006B                     	ds	3
   844                           
   845                           	psect	maintext
   846     0670                     __pmaintext:	
   847 ;;
   848 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   849 ;;
   850 ;; *************** function _main *****************
   851 ;; Defined at:
   852 ;;		line 164 in file "newmain.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  postfix        32    0[BANK3 ] unsigned char [32]
   857 ;;  result_str     10   64[BANK3 ] unsigned char [10]
   858 ;;  result          2   74[BANK3 ] int 
   859 ;;  key             1   80[BANK3 ] unsigned char 
   860 ;;  col             2   81[BANK3 ] int 
   861 ;;  row             2   78[BANK3 ] int 
   862 ;;  mem            32   32[BANK3 ] unsigned char [32]
   863 ;;  index           2   76[BANK3 ] int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : B00/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0      83       0
   875 ;;      Temps:          0       3       0       0       0
   876 ;;      Totals:         0       3       0      83       0
   877 ;;Total ram usage:       86 bytes
   878 ;; Hardware stack levels required when called: 5
   879 ;; This function calls:
   880 ;;		_infix_to_postfix
   881 ;;		_lcd_byte
   882 ;;		_lcd_init
   883 ;;		_lcd_write_char
   884 ;;		_lcd_write_string
   885 ;;		_memset
   886 ;;		_postfix_cal
   887 ;;		_sprintf
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     0670                     _main:	
   894                           ;psect for function _main
   895                           
   896     0670                     l1860:	
   897                           ;incstack = 0
   898                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   899                           
   900                           
   901                           ;newmain.c: 166:                 if (!(PORTD & (1 << col))) {
   902     0670  1683               	bsf	3,5	;RP0=1, select bank1
   903     0671  1303               	bcf	3,6	;RP1=0, select bank1
   904     0672  0186               	clrf	6	;volatile
   905     0673                     l1862:
   906                           
   907                           ;newmain.c: 167:                     char key = keypad[row][col];
   908     0673  120A  118A  217D  120A  118A  	fcall	_lcd_init
   909     0678                     l1864:
   910                           
   911                           ;newmain.c: 170: 
   912     0678  300F               	movlw	15
   913     0679  1683               	bsf	3,5	;RP0=1, select bank1
   914     067A  1303               	bcf	3,6	;RP1=0, select bank1
   915     067B  0088               	movwf	8	;volatile
   916     067C                     l1866:
   917                           
   918                           ;newmain.c: 171:                     if (key == '=') {
   919     067C  30F0               	movlw	240
   920     067D  1283               	bcf	3,5	;RP0=0, select bank0
   921     067E  1303               	bcf	3,6	;RP1=0, select bank0
   922     067F  0088               	movwf	8	;volatile
   923     0680                     l1868:
   924                           
   925                           ;newmain.c: 173:                         char postfix[32];
   926     0680  30B0               	movlw	main@mem& (0+255)
   927     0681  0084               	movwf	4
   928     0682  3020               	movlw	32
   929     0683  00FF               	movwf	btemp+1
   930     0684                     u1900:
   931     0684  1783               	bsf	3,7	;select IRP bank3
   932     0685  0180               	clrf	0
   933     0686  0A84               	incf	4,f
   934     0687  0BFF               	decfsz	btemp+1,f
   935     0688  2E84               	goto	u1900
   936     0689                     l1870:
   937                           
   938                           ;newmain.c: 174:                         infix_to_postfix(mem, postfix);
   939     0689  1683               	bsf	3,5	;RP0=1, select bank3
   940     068A  1703               	bsf	3,6	;RP1=1, select bank3
   941     068B  01DC               	clrf	main@index^(0+384)
   942     068C  01DD               	clrf	(main@index+1)^(0+384)
   943     068D                     l1872:
   944                           
   945                           ;newmain.c: 177:                         char result_str[10];
   946     068D  1683               	bsf	3,5	;RP0=1, select bank3
   947     068E  1703               	bsf	3,6	;RP1=1, select bank3
   948     068F  01DE               	clrf	main@row^(0+384)
   949     0690  01DF               	clrf	(main@row+1)^(0+384)
   950     0691                     l149:
   951                           
   952                           ;newmain.c: 178:                         sprintf(result_str, "%d", result);
   953     0691  30F0               	movlw	240
   954     0692  1283               	bcf	3,5	;RP0=0, select bank0
   955     0693  1303               	bcf	3,6	;RP1=0, select bank0
   956     0694  0088               	movwf	8	;volatile
   957     0695                     l1878:
   958                           
   959                           ;newmain.c: 179:                         lcd_write_string(result_str);
   960     0695  3001               	movlw	1
   961     0696  00EB               	movwf	??_main
   962     0697  1683               	bsf	3,5	;RP0=1, select bank3
   963     0698  1703               	bsf	3,6	;RP1=1, select bank3
   964     0699  085E               	movf	main@row^(0+384),w
   965     069A  3E04               	addlw	4
   966     069B  3E01               	addlw	1
   967     069C  1283               	bcf	3,5	;RP0=0, select bank0
   968     069D  1303               	bcf	3,6	;RP1=0, select bank0
   969     069E  2EA1               	goto	u1914
   970     069F                     u1915:
   971     069F  1003               	clrc
   972     06A0  0DEB               	rlf	??_main,f
   973     06A1                     u1914:
   974     06A1  3EFF               	addlw	-1
   975     06A2  1D03               	skipz
   976     06A3  2E9F               	goto	u1915
   977     06A4  086B               	movf	??_main,w
   978     06A5  3AFF               	xorlw	255
   979     06A6  0588               	andwf	8,f	;volatile
   980     06A7                     l1880:
   981                           
   982                           ;newmain.c: 180:                         index = 0;
   983     06A7  300D               	movlw	13
   984     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   985     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   986     06AA  00EC               	movwf	??_main+1
   987     06AB  30FB               	movlw	251
   988     06AC  00EB               	movwf	??_main
   989     06AD                     u2017:
   990     06AD  0BEB               	decfsz	??_main,f
   991     06AE  2EAD               	goto	u2017
   992     06AF  0BEC               	decfsz	??_main+1,f
   993     06B0  2EAD               	goto	u2017
   994     06B1                     l1882:
   995                           
   996                           ;newmain.c: 182:                     }
   997     06B1  1683               	bsf	3,5	;RP0=1, select bank3
   998     06B2  1703               	bsf	3,6	;RP1=1, select bank3
   999     06B3  01E1               	clrf	main@col^(0+384)
  1000     06B4  01E2               	clrf	(main@col+1)^(0+384)
  1001     06B5                     l1888:
  1002                           
  1003                           ;newmain.c: 183:                     if (key == 'C') {
  1004     06B5  3001               	movlw	1
  1005     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1006     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1007     06B8  00EB               	movwf	??_main
  1008     06B9  1683               	bsf	3,5	;RP0=1, select bank3
  1009     06BA  1703               	bsf	3,6	;RP1=1, select bank3
  1010     06BB  0A61               	incf	main@col^(0+384),w
  1011     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1012     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1013     06BE  2EC1               	goto	u1924
  1014     06BF                     u1925:
  1015     06BF  1003               	clrc
  1016     06C0  0DEB               	rlf	??_main,f
  1017     06C1                     u1924:
  1018     06C1  3EFF               	addlw	-1
  1019     06C2  1D03               	skipz
  1020     06C3  2EBF               	goto	u1925
  1021     06C4  086B               	movf	??_main,w
  1022     06C5  0508               	andwf	8,w	;volatile
  1023     06C6  1D03               	btfss	3,2
  1024     06C7  2EC9               	goto	u1931
  1025     06C8  2ECA               	goto	u1930
  1026     06C9                     u1931:
  1027     06C9  2FAD               	goto	l153
  1028     06CA                     u1930:
  1029     06CA                     l1890:
  1030                           
  1031                           ;newmain.c: 184:                         lcd_byte(0x01, 0);
  1032     06CA  1683               	bsf	3,5	;RP0=1, select bank3
  1033     06CB  1703               	bsf	3,6	;RP1=1, select bank3
  1034     06CC  085E               	movf	main@row^(0+384),w
  1035     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1036     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1037     06CF  00EB               	movwf	??_main
  1038     06D0  3002               	movlw	2
  1039     06D1                     u1945:
  1040     06D1  1003               	clrc
  1041     06D2  0DEB               	rlf	??_main,f
  1042     06D3  3EFF               	addlw	-1
  1043     06D4  1D03               	skipz
  1044     06D5  2ED1               	goto	u1945
  1045     06D6  30C4               	movlw	(low (_keypad| 0))& (0+255)
  1046     06D7  076B               	addwf	??_main,w
  1047     06D8  00EC               	movwf	??_main+1
  1048     06D9  1683               	bsf	3,5	;RP0=1, select bank3
  1049     06DA  1703               	bsf	3,6	;RP1=1, select bank3
  1050     06DB  0861               	movf	main@col^(0+384),w
  1051     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1052     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1053     06DE  076C               	addwf	??_main+1,w
  1054     06DF  00ED               	movwf	??_main+2
  1055     06E0  086D               	movf	??_main+2,w
  1056     06E1  0084               	movwf	4
  1057     06E2  1383               	bcf	3,7	;select IRP bank1
  1058     06E3  0800               	movf	0,w
  1059     06E4  1683               	bsf	3,5	;RP0=1, select bank3
  1060     06E5  1703               	bsf	3,6	;RP1=1, select bank3
  1061     06E6  00E0               	movwf	main@key^(0+384)
  1062     06E7                     l1892:
  1063                           
  1064                           ;newmain.c: 185:                         index = 0;
  1065     06E7  0860               	movf	main@key^(0+384),w
  1066     06E8  120A  158A  2581  120A  118A  	fcall	_lcd_write_char
  1067     06ED                     l1894:
  1068                           
  1069                           ;newmain.c: 186:                         memset(mem, 0, sizeof(mem));
  1070     06ED  1683               	bsf	3,5	;RP0=1, select bank3
  1071     06EE  1703               	bsf	3,6	;RP1=1, select bank3
  1072     06EF  085C               	movf	main@index^(0+384),w
  1073     06F0  3EB0               	addlw	(low (main@mem| (0+256)))& (0+255)
  1074     06F1  0084               	movwf	4
  1075     06F2  0860               	movf	main@key^(0+384),w
  1076     06F3  1783               	bsf	3,7	;select IRP bank3
  1077     06F4  0080               	movwf	0
  1078     06F5                     l1896:
  1079     06F5  3001               	movlw	1
  1080     06F6  07DC               	addwf	main@index^(0+384),f
  1081     06F7  1803               	skipnc
  1082     06F8  0ADD               	incf	(main@index+1)^(0+384),f
  1083     06F9  3000               	movlw	0
  1084     06FA  07DD               	addwf	(main@index+1)^(0+384),f
  1085     06FB                     l1898:
  1086                           
  1087                           ;newmain.c: 188: 
  1088     06FB  303D               	movlw	61
  1089     06FC  0660               	xorwf	main@key^(0+384),w
  1090     06FD  1D03               	btfss	3,2
  1091     06FE  2F00               	goto	u1951
  1092     06FF  2F01               	goto	u1950
  1093     0700                     u1951:
  1094     0700  2F68               	goto	l1918
  1095     0701                     u1950:
  1096     0701                     l1900:
  1097                           
  1098                           ;newmain.c: 189:                     while (!(PORTD & (1 << col)));
  1099     0701  085C               	movf	main@index^(0+384),w
  1100     0702  3EFF               	addlw	255
  1101     0703  3EB0               	addlw	(low (main@mem| (0+256)))& (0+255)
  1102     0704  0084               	movwf	4
  1103     0705  0180               	clrf	0
  1104     0706                     l1902:
  1105                           
  1106                           ;newmain.c: 190:                     _delay((unsigned long)((200)*(8000000/4000.0)));;ne
      +                          wmain.c: 191:                 }
  1107     0706  30B0               	movlw	(low (main@mem| (0+256)))& (0+255)
  1108     0707  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0708  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0709  00A9               	movwf	infix_to_postfix@infix
  1111     070A  3090               	movlw	(low (main@postfix| (0+256)))& (0+255)
  1112     070B  00AA               	movwf	infix_to_postfix@postfix
  1113     070C  120A  118A  2523  120A  118A  	fcall	_infix_to_postfix
  1114     0711                     l1904:
  1115                           
  1116                           ;newmain.c: 192:             }
  1117     0711  3090               	movlw	(low (main@postfix| (0+256)))& (0+255)
  1118     0712  1283               	bcf	3,5	;RP0=0, select bank0
  1119     0713  1303               	bcf	3,6	;RP1=0, select bank0
  1120     0714  00AB               	movwf	postfix_cal@postfix
  1121     0715  120A  118A  23DC  120A  118A  	fcall	_postfix_cal
  1122     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1123     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1124     071C  082C               	movf	?_postfix_cal+1,w
  1125     071D  1683               	bsf	3,5	;RP0=1, select bank3
  1126     071E  1703               	bsf	3,6	;RP1=1, select bank3
  1127     071F  00DB               	movwf	(main@result+1)^(0+384)
  1128     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0722  082B               	movf	?_postfix_cal,w
  1131     0723  1683               	bsf	3,5	;RP0=1, select bank3
  1132     0724  1703               	bsf	3,6	;RP1=1, select bank3
  1133     0725  00DA               	movwf	main@result^(0+384)
  1134     0726                     l1906:
  1135                           
  1136                           ;newmain.c: 193:         }
  1137     0726  01F3               	clrf	lcd_byte@mode
  1138     0727  3001               	movlw	1
  1139     0728  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  1140     072D                     l1908:
  1141     072D  3006               	movlw	6
  1142     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1143     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1144     0730  00EC               	movwf	??_main+1
  1145     0731  302F               	movlw	47
  1146     0732  00EB               	movwf	??_main
  1147     0733                     u2027:
  1148     0733  0BEB               	decfsz	??_main,f
  1149     0734  2F33               	goto	u2027
  1150     0735  0BEC               	decfsz	??_main+1,f
  1151     0736  2F33               	goto	u2027
  1152     0737  2F38               	nop2
  1153     0738                     l1910:
  1154                           
  1155                           ;newmain.c: 194:     };newmain.c: 195: }
  1156     0738  30D0               	movlw	(low (main@result_str| (0+256)))& (0+255)
  1157     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1158     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1159     073B  00B1               	movwf	sprintf@s
  1160     073C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1161     073D  00B2               	movwf	sprintf@fmt
  1162     073E  1683               	bsf	3,5	;RP0=1, select bank3
  1163     073F  1703               	bsf	3,6	;RP1=1, select bank3
  1164     0740  085B               	movf	(main@result+1)^(0+384),w
  1165     0741  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0742  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0743  00B4               	movwf	?_sprintf+3
  1168     0744  1683               	bsf	3,5	;RP0=1, select bank3
  1169     0745  1703               	bsf	3,6	;RP1=1, select bank3
  1170     0746  085A               	movf	main@result^(0+384),w
  1171     0747  1283               	bcf	3,5	;RP0=0, select bank0
  1172     0748  1303               	bcf	3,6	;RP1=0, select bank0
  1173     0749  00B3               	movwf	?_sprintf+2
  1174     074A  120A  158A  2680  120A  118A  	fcall	_sprintf
  1175     074F                     l1912:
  1176     074F  30D0               	movlw	(low (main@result_str| (0+256)))& (0+255)
  1177     0750  00F7               	movwf	lcd_write_string@s
  1178     0751  120A  158A  25F2  120A  118A  	fcall	_lcd_write_string
  1179     0756                     l1914:
  1180     0756  1683               	bsf	3,5	;RP0=1, select bank3
  1181     0757  1703               	bsf	3,6	;RP1=1, select bank3
  1182     0758  01DC               	clrf	main@index^(0+384)
  1183     0759  01DD               	clrf	(main@index+1)^(0+384)
  1184     075A                     l1916:
  1185     075A  30B0               	movlw	(low (main@mem| (0+256)))& (0+255)
  1186     075B  00F0               	movwf	memset@dest
  1187     075C  3000               	movlw	0
  1188     075D  00F1               	movwf	memset@c
  1189     075E  00F2               	movwf	memset@c+1
  1190     075F  3020               	movlw	32
  1191     0760  00F3               	movwf	memset@n
  1192     0761  3000               	movlw	0
  1193     0762  00F4               	movwf	memset@n+1
  1194     0763  120A  158A  2606  120A  118A  	fcall	_memset
  1195     0768                     l1918:
  1196     0768  3043               	movlw	67
  1197     0769  1683               	bsf	3,5	;RP0=1, select bank3
  1198     076A  1703               	bsf	3,6	;RP1=1, select bank3
  1199     076B  0660               	xorwf	main@key^(0+384),w
  1200     076C  1D03               	btfss	3,2
  1201     076D  2F6F               	goto	u1961
  1202     076E  2F70               	goto	u1960
  1203     076F                     u1961:
  1204     076F  2F89               	goto	l1926
  1205     0770                     u1960:
  1206     0770                     l1920:
  1207     0770  01F3               	clrf	lcd_byte@mode
  1208     0771  3001               	movlw	1
  1209     0772  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  1210     0777                     l1922:
  1211     0777  1683               	bsf	3,5	;RP0=1, select bank3
  1212     0778  1703               	bsf	3,6	;RP1=1, select bank3
  1213     0779  01DC               	clrf	main@index^(0+384)
  1214     077A  01DD               	clrf	(main@index+1)^(0+384)
  1215     077B                     l1924:
  1216     077B  30B0               	movlw	(low (main@mem| (0+256)))& (0+255)
  1217     077C  00F0               	movwf	memset@dest
  1218     077D  3000               	movlw	0
  1219     077E  00F1               	movwf	memset@c
  1220     077F  00F2               	movwf	memset@c+1
  1221     0780  3020               	movlw	32
  1222     0781  00F3               	movwf	memset@n
  1223     0782  3000               	movlw	0
  1224     0783  00F4               	movwf	memset@n+1
  1225     0784  120A  158A  2606  120A  118A  	fcall	_memset
  1226     0789                     l1926:
  1227     0789  3001               	movlw	1
  1228     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1229     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1230     078C  00EB               	movwf	??_main
  1231     078D  1683               	bsf	3,5	;RP0=1, select bank3
  1232     078E  1703               	bsf	3,6	;RP1=1, select bank3
  1233     078F  0A61               	incf	main@col^(0+384),w
  1234     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1236     0792  2F95               	goto	u1974
  1237     0793                     u1975:
  1238     0793  1003               	clrc
  1239     0794  0DEB               	rlf	??_main,f
  1240     0795                     u1974:
  1241     0795  3EFF               	addlw	-1
  1242     0796  1D03               	skipz
  1243     0797  2F93               	goto	u1975
  1244     0798  086B               	movf	??_main,w
  1245     0799  0508               	andwf	8,w	;volatile
  1246     079A  1903               	btfsc	3,2
  1247     079B  2F9D               	goto	u1981
  1248     079C  2F9E               	goto	u1980
  1249     079D                     u1981:
  1250     079D  2F89               	goto	l1926
  1251     079E                     u1980:
  1252     079E                     l1928:
  1253     079E  3003               	movlw	3
  1254     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1255     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1256     07A1  00ED               	movwf	??_main+2
  1257     07A2  3008               	movlw	8
  1258     07A3  00EC               	movwf	??_main+1
  1259     07A4  3076               	movlw	118
  1260     07A5  00EB               	movwf	??_main
  1261     07A6                     u2037:
  1262     07A6  0BEB               	decfsz	??_main,f
  1263     07A7  2FA6               	goto	u2037
  1264     07A8  0BEC               	decfsz	??_main+1,f
  1265     07A9  2FA6               	goto	u2037
  1266     07AA  0BED               	decfsz	??_main+2,f
  1267     07AB  2FA6               	goto	u2037
  1268     07AC  0000               	nop
  1269     07AD                     l153:
  1270     07AD  3001               	movlw	1
  1271     07AE  1683               	bsf	3,5	;RP0=1, select bank3
  1272     07AF  1703               	bsf	3,6	;RP1=1, select bank3
  1273     07B0  07E1               	addwf	main@col^(0+384),f
  1274     07B1  1803               	skipnc
  1275     07B2  0AE2               	incf	(main@col+1)^(0+384),f
  1276     07B3  3000               	movlw	0
  1277     07B4  07E2               	addwf	(main@col+1)^(0+384),f
  1278     07B5                     l1930:
  1279     07B5  0862               	movf	(main@col+1)^(0+384),w
  1280     07B6  3A80               	xorlw	128
  1281     07B7  00FF               	movwf	btemp+1
  1282     07B8  3080               	movlw	128
  1283     07B9  027F               	subwf	btemp+1,w
  1284     07BA  1D03               	skipz
  1285     07BB  2FBE               	goto	u1995
  1286     07BC  3004               	movlw	4
  1287     07BD  0261               	subwf	main@col^(0+384),w
  1288     07BE                     u1995:
  1289     07BE  1C03               	skipc
  1290     07BF  2FC1               	goto	u1991
  1291     07C0  2FC2               	goto	u1990
  1292     07C1                     u1991:
  1293     07C1  2EB5               	goto	l1888
  1294     07C2                     u1990:
  1295     07C2                     l1932:
  1296     07C2  3001               	movlw	1
  1297     07C3  1683               	bsf	3,5	;RP0=1, select bank3
  1298     07C4  1703               	bsf	3,6	;RP1=1, select bank3
  1299     07C5  07DE               	addwf	main@row^(0+384),f
  1300     07C6  1803               	skipnc
  1301     07C7  0ADF               	incf	(main@row+1)^(0+384),f
  1302     07C8  3000               	movlw	0
  1303     07C9  07DF               	addwf	(main@row+1)^(0+384),f
  1304     07CA                     l1934:
  1305     07CA  085F               	movf	(main@row+1)^(0+384),w
  1306     07CB  3A80               	xorlw	128
  1307     07CC  00FF               	movwf	btemp+1
  1308     07CD  3080               	movlw	128
  1309     07CE  027F               	subwf	btemp+1,w
  1310     07CF  1D03               	skipz
  1311     07D0  2FD3               	goto	u2005
  1312     07D1  3004               	movlw	4
  1313     07D2  025E               	subwf	main@row^(0+384),w
  1314     07D3                     u2005:
  1315     07D3  1C03               	skipc
  1316     07D4  2FD6               	goto	u2001
  1317     07D5  2FD7               	goto	u2000
  1318     07D6                     u2001:
  1319     07D6  2E91               	goto	l149
  1320     07D7                     u2000:
  1321     07D7  2E8D               	goto	l1872
  1322     07D8  120A  118A  2800   	ljmp	start
  1323     07DB                     __end_of_main:
  1324                           
  1325                           	psect	text1
  1326     0E80                     __ptext1:	
  1327 ;; *************** function _sprintf *****************
  1328 ;; Defined at:
  1329 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  s               1   17[BANK0 ] PTR unsigned char 
  1332 ;;		 -> main@result_str(10), 
  1333 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1334 ;;		 -> STR_1(3), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  f              11   23[BANK0 ] struct _IO_FILE
  1337 ;;  ret             2    0        int 
  1338 ;;  ap              1   22[BANK0 ] PTR void [1]
  1339 ;;		 -> ?_sprintf(2), 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2   17[BANK0 ] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       4       0       0       0
  1350 ;;      Locals:         0      12       0       0       0
  1351 ;;      Temps:          0       1       0       0       0
  1352 ;;      Totals:         0      17       0       0       0
  1353 ;;Total ram usage:       17 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 4
  1356 ;; This function calls:
  1357 ;;		_vfprintf
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363     0E80                     _sprintf:	
  1364                           ;psect for function _sprintf
  1365                           
  1366     0E80                     l1838:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1369                           
  1370     0E80  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1371     0E81  1283               	bcf	3,5	;RP0=0, select bank0
  1372     0E82  1303               	bcf	3,6	;RP1=0, select bank0
  1373     0E83  00B6               	movwf	sprintf@ap
  1374     0E84                     l1840:
  1375     0E84  0831               	movf	sprintf@s,w
  1376     0E85  00B7               	movwf	sprintf@f
  1377     0E86  3001               	movlw	1
  1378     0E87  00B8               	movwf	sprintf@f+1
  1379     0E88                     l1842:
  1380     0E88  01B9               	clrf	sprintf@f+2
  1381     0E89  01BA               	clrf	sprintf@f+3
  1382     0E8A                     l1844:
  1383     0E8A  01C0               	clrf	sprintf@f+9
  1384     0E8B  01C1               	clrf	sprintf@f+10
  1385     0E8C                     l1846:
  1386     0E8C  3037               	movlw	low sprintf@f
  1387     0E8D  00AD               	movwf	vfprintf@fp
  1388     0E8E  3000               	movlw	high sprintf@f
  1389     0E8F  00AE               	movwf	vfprintf@fp+1
  1390     0E90  0832               	movf	sprintf@fmt,w
  1391     0E91  00AF               	movwf	vfprintf@fmt
  1392     0E92  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
  1393     0E93  00B0               	movwf	vfprintf@ap
  1394     0E94  120A  158A  26C8  120A  158A  	fcall	_vfprintf
  1395     0E99                     l1848:
  1396     0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1397     0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  1398     0E9B  0839               	movf	sprintf@f+2,w
  1399     0E9C  0731               	addwf	sprintf@s,w
  1400     0E9D  00B5               	movwf	??_sprintf
  1401     0E9E  0835               	movf	??_sprintf,w
  1402     0E9F  0084               	movwf	4
  1403     0EA0  1783               	bsf	3,7	;select IRP bank2
  1404     0EA1  0180               	clrf	0
  1405     0EA2                     l732:
  1406     0EA2  0008               	return
  1407     0EA3                     __end_of_sprintf:
  1408                           
  1409                           	psect	text2
  1410     0EC8                     __ptext2:	
  1411 ;; *************** function _vfprintf *****************
  1412 ;; Defined at:
  1413 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1416 ;;		 -> sprintf@f(11), 
  1417 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  1418 ;;		 -> STR_1(3), 
  1419 ;;  ap              1   16[BANK0 ] PTR PTR void 
  1420 ;;		 -> sprintf@ap(1), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1423 ;;		 -> STR_1(3), 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2   13[BANK0 ] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         0       4       0       0       0
  1434 ;;      Locals:         1       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0
  1436 ;;      Totals:         1       4       0       0       0
  1437 ;;Total ram usage:        5 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 3
  1440 ;; This function calls:
  1441 ;;		_vfpfcnvrt
  1442 ;; This function is called by:
  1443 ;;		_sprintf
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447     0EC8                     _vfprintf:	
  1448                           ;psect for function _vfprintf
  1449                           
  1450     0EC8                     l1658:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1453                           
  1454                           
  1455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1456     0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  1457     0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  1458     0ECA  082F               	movf	vfprintf@fmt,w
  1459     0ECB  00FD               	movwf	vfprintf@cfmt
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1462     0ECC  2EDC               	goto	l1662
  1463     0ECD                     l1660:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1466     0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  1467     0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  1468     0ECF  082D               	movf	vfprintf@fp,w
  1469     0ED0  00A0               	movwf	vfpfcnvrt@fp
  1470     0ED1  082E               	movf	vfprintf@fp+1,w
  1471     0ED2  00A1               	movwf	vfpfcnvrt@fp+1
  1472     0ED3  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1473     0ED4  00A2               	movwf	vfpfcnvrt@fmt
  1474     0ED5  0830               	movf	vfprintf@ap,w
  1475     0ED6  00A3               	movwf	vfpfcnvrt@ap
  1476     0ED7  120A  118A  22EE  120A  158A  	fcall	_vfpfcnvrt
  1477     0EDC                     l1662:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1480     0EDC  087D               	movf	vfprintf@cfmt,w
  1481     0EDD  0084               	movwf	4
  1482     0EDE  120A  158A  2000  120A  158A  	fcall	stringdir
  1483     0EE3  3A00               	xorlw	0
  1484     0EE4  1D03               	skipz
  1485     0EE5  2EE7               	goto	u1651
  1486     0EE6  2EE8               	goto	u1650
  1487     0EE7                     u1651:
  1488     0EE7  2ECD               	goto	l1660
  1489     0EE8                     u1650:
  1490     0EE8                     l1664:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1493     0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  1494     0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  1495     0EEA  01AD               	clrf	?_vfprintf
  1496     0EEB  01AE               	clrf	?_vfprintf+1
  1497     0EEC                     l776:
  1498     0EEC  0008               	return
  1499     0EED                     __end_of_vfprintf:
  1500                           
  1501                           	psect	text3
  1502     02EE                     __ptext3:	
  1503 ;; *************** function _vfpfcnvrt *****************
  1504 ;; Defined at:
  1505 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1508 ;;		 -> sprintf@f(11), 
  1509 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1510 ;;		 -> vfprintf@cfmt(1), 
  1511 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1512 ;;		 -> sprintf@ap(1), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  convarg         4    8[BANK0 ] struct .
  1515 ;;  c               1   12[BANK0 ] unsigned char 
  1516 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1517 ;;		 -> STR_1(3), 
  1518 ;;  done            1    6[BANK0 ] _Bool 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       4       0       0       0
  1529 ;;      Locals:         0       7       0       0       0
  1530 ;;      Temps:          0       2       0       0       0
  1531 ;;      Totals:         0      13       0       0       0
  1532 ;;Total ram usage:       13 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 2
  1535 ;; This function calls:
  1536 ;;		___awdiv
  1537 ;;		___awmod
  1538 ;;		_abs
  1539 ;;		_fputc
  1540 ;; This function is called by:
  1541 ;;		_vfprintf
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545     02EE                     _vfpfcnvrt:	
  1546                           ;psect for function _vfpfcnvrt
  1547                           
  1548     02EE                     l1534:	
  1549                           ;incstack = 0
  1550                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1551                           
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1554     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1555     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1556     02F0  0822               	movf	vfpfcnvrt@fmt,w
  1557     02F1  0084               	movwf	4
  1558     02F2  0800               	movf	0,w
  1559     02F3  0084               	movwf	4
  1560     02F4  120A  158A  2000  120A  118A  	fcall	stringdir
  1561     02F9  3A25               	xorlw	37
  1562     02FA  1D03               	skipz
  1563     02FB  2AFD               	goto	u1411
  1564     02FC  2AFE               	goto	u1410
  1565     02FD                     u1411:
  1566     02FD  2BC2               	goto	l1580
  1567     02FE                     u1410:
  1568     02FE                     l1536:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1571     02FE  0822               	movf	vfpfcnvrt@fmt,w
  1572     02FF  0084               	movwf	4
  1573     0300  3001               	movlw	1
  1574     0301  0780               	addwf	0,f
  1575     0302                     l1538:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1578     0302  1683               	bsf	3,5	;RP0=1, select bank1
  1579     0303  1303               	bcf	3,6	;RP1=0, select bank1
  1580     0304  01C0               	clrf	_width^(0+128)
  1581     0305  01C1               	clrf	(_width+1)^(0+128)
  1582     0306  3000               	movlw	0
  1583     0307  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0308  1303               	bcf	3,6	;RP1=0, select bank0
  1585     0309  00EE               	movwf	_flags
  1586     030A                     l1540:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1589     030A  30FF               	movlw	255
  1590     030B  1683               	bsf	3,5	;RP0=1, select bank1
  1591     030C  1303               	bcf	3,6	;RP1=0, select bank1
  1592     030D  00C2               	movwf	_prec^(0+128)
  1593     030E  30FF               	movlw	255
  1594     030F  00C3               	movwf	(_prec^(0+128)+1)
  1595     0310                     l1542:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1598     0310  1283               	bcf	3,5	;RP0=0, select bank0
  1599     0311  1303               	bcf	3,6	;RP1=0, select bank0
  1600     0312  0822               	movf	vfpfcnvrt@fmt,w
  1601     0313  0084               	movwf	4
  1602     0314  0800               	movf	0,w
  1603     0315  00A7               	movwf	vfpfcnvrt@cp
  1604     0316                     l1544:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1607     0316  0827               	movf	vfpfcnvrt@cp,w
  1608     0317  0084               	movwf	4
  1609     0318  120A  158A  2000  120A  118A  	fcall	stringdir
  1610     031D  3A64               	xorlw	100
  1611     031E  1903               	skipnz
  1612     031F  2B21               	goto	u1421
  1613     0320  2B22               	goto	u1420
  1614     0321                     u1421:
  1615     0321  2B2E               	goto	l1548
  1616     0322                     u1420:
  1617     0322                     l1546:
  1618     0322  0827               	movf	vfpfcnvrt@cp,w
  1619     0323  0084               	movwf	4
  1620     0324  120A  158A  2000  120A  118A  	fcall	stringdir
  1621     0329  3A69               	xorlw	105
  1622     032A  1D03               	skipz
  1623     032B  2B2D               	goto	u1431
  1624     032C  2B2E               	goto	u1430
  1625     032D                     u1431:
  1626     032D  2BBB               	goto	l1576
  1627     032E                     u1430:
  1628     032E                     l1548:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1631     032E  0823               	movf	vfpfcnvrt@ap,w
  1632     032F  0084               	movwf	4
  1633     0330  1383               	bcf	3,7	;select IRP bank0
  1634     0331  0800               	movf	0,w
  1635     0332  00FF               	movwf	btemp+1
  1636     0333  3002               	movlw	2
  1637     0334  0780               	addwf	0,f
  1638     0335  087F               	movf	btemp+1,w
  1639     0336  0084               	movwf	4
  1640     0337  0800               	movf	0,w
  1641     0338  00A8               	movwf	vfpfcnvrt@convarg
  1642     0339  0A84               	incf	4,f
  1643     033A  0800               	movf	0,w
  1644     033B  00A9               	movwf	vfpfcnvrt@convarg+1
  1645     033C                     l1550:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1648     033C  0822               	movf	vfpfcnvrt@fmt,w
  1649     033D  0084               	movwf	4
  1650     033E  0827               	movf	vfpfcnvrt@cp,w
  1651     033F  3E01               	addlw	1
  1652     0340  0080               	movwf	0
  1653     0341                     l1552:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1656     0341  3020               	movlw	32
  1657     0342  00AC               	movwf	vfpfcnvrt@c
  1658     0343                     l1554:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1661     0343  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1662     0344  2B46               	goto	u1441
  1663     0345  2B48               	goto	u1440
  1664     0346                     u1441:
  1665     0346  3001               	movlw	1
  1666     0347  2B49               	goto	u1450
  1667     0348                     u1440:
  1668     0348  3000               	movlw	0
  1669     0349                     u1450:
  1670     0349  00A6               	movwf	vfpfcnvrt@done
  1671     034A                     l1556:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1674     034A  3001               	movlw	1
  1675     034B  02AC               	subwf	vfpfcnvrt@c,f
  1676     034C  082C               	movf	vfpfcnvrt@c,w
  1677     034D  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1678     034E  0084               	movwf	4
  1679     034F  300A               	movlw	10
  1680     0350  00F0               	movwf	___awmod@divisor
  1681     0351  3000               	movlw	0
  1682     0352  00F1               	movwf	___awmod@divisor+1
  1683     0353  0829               	movf	vfpfcnvrt@convarg+1,w
  1684     0354  00F3               	movwf	___awmod@dividend+1
  1685     0355  0828               	movf	vfpfcnvrt@convarg,w
  1686     0356  00F2               	movwf	___awmod@dividend
  1687     0357  120A  118A  20C3  120A  118A  	fcall	___awmod
  1688     035C  0871               	movf	?___awmod+1,w
  1689     035D  00F7               	movwf	abs@a+1
  1690     035E  0870               	movf	?___awmod,w
  1691     035F  00F6               	movwf	abs@a
  1692     0360  120A  158A  25A8  120A  118A  	fcall	_abs
  1693     0365  0876               	movf	?_abs,w
  1694     0366  3E30               	addlw	48
  1695     0367  1383               	bcf	3,7	;select IRP bank1
  1696     0368  0080               	movwf	0
  1697     0369                     l1558:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1700     0369  300A               	movlw	10
  1701     036A  00F0               	movwf	___awdiv@divisor
  1702     036B  3000               	movlw	0
  1703     036C  00F1               	movwf	___awdiv@divisor+1
  1704     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1705     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1706     036F  0829               	movf	vfpfcnvrt@convarg+1,w
  1707     0370  00F3               	movwf	___awdiv@dividend+1
  1708     0371  0828               	movf	vfpfcnvrt@convarg,w
  1709     0372  00F2               	movwf	___awdiv@dividend
  1710     0373  120A  118A  211A  120A  118A  	fcall	___awdiv
  1711     0378  0871               	movf	?___awdiv+1,w
  1712     0379  1283               	bcf	3,5	;RP0=0, select bank0
  1713     037A  1303               	bcf	3,6	;RP1=0, select bank0
  1714     037B  00A9               	movwf	vfpfcnvrt@convarg+1
  1715     037C  0870               	movf	?___awdiv,w
  1716     037D  00A8               	movwf	vfpfcnvrt@convarg
  1717     037E                     l1560:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1720     037E  0828               	movf	vfpfcnvrt@convarg,w
  1721     037F  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1722     0380  1903               	btfsc	3,2
  1723     0381  2B83               	goto	u1461
  1724     0382  2B84               	goto	u1460
  1725     0383                     u1461:
  1726     0383  2B89               	goto	l1564
  1727     0384                     u1460:
  1728     0384                     l1562:
  1729     0384  082C               	movf	vfpfcnvrt@c,w
  1730     0385  1D03               	btfss	3,2
  1731     0386  2B88               	goto	u1471
  1732     0387  2B89               	goto	u1470
  1733     0388                     u1471:
  1734     0388  2B4A               	goto	l1556
  1735     0389                     u1470:
  1736     0389                     l1564:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1739     0389  082C               	movf	vfpfcnvrt@c,w
  1740     038A  1903               	btfsc	3,2
  1741     038B  2B8D               	goto	u1481
  1742     038C  2B8E               	goto	u1480
  1743     038D                     u1481:
  1744     038D  2BB4               	goto	l1574
  1745     038E                     u1480:
  1746     038E                     l1566:
  1747     038E  0826               	movf	vfpfcnvrt@done,w
  1748     038F  1903               	btfsc	3,2
  1749     0390  2B92               	goto	u1491
  1750     0391  2B93               	goto	u1490
  1751     0392                     u1491:
  1752     0392  2BB4               	goto	l1574
  1753     0393                     u1490:
  1754     0393                     l1568:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1757     0393  3001               	movlw	1
  1758     0394  02AC               	subwf	vfpfcnvrt@c,f
  1759     0395  082C               	movf	vfpfcnvrt@c,w
  1760     0396  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1761     0397  0084               	movwf	4
  1762     0398  302D               	movlw	45
  1763     0399  1383               	bcf	3,7	;select IRP bank1
  1764     039A  0080               	movwf	0
  1765     039B  2BB4               	goto	l1574
  1766     039C                     l1570:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1769     039C  082C               	movf	vfpfcnvrt@c,w
  1770     039D  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1771     039E  0084               	movwf	4
  1772     039F  1383               	bcf	3,7	;select IRP bank1
  1773     03A0  0800               	movf	0,w
  1774     03A1  00A4               	movwf	??_vfpfcnvrt
  1775     03A2  01A5               	clrf	??_vfpfcnvrt+1
  1776     03A3  0824               	movf	??_vfpfcnvrt,w
  1777     03A4  00F0               	movwf	fputc@c
  1778     03A5  0825               	movf	??_vfpfcnvrt+1,w
  1779     03A6  00F1               	movwf	fputc@c+1
  1780     03A7  0820               	movf	vfpfcnvrt@fp,w
  1781     03A8  00F2               	movwf	fputc@fp
  1782     03A9  0821               	movf	vfpfcnvrt@fp+1,w
  1783     03AA  00F3               	movwf	fputc@fp+1
  1784     03AB  120A  118A  2254  120A  118A  	fcall	_fputc
  1785     03B0                     l1572:
  1786     03B0  3001               	movlw	1
  1787     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1788     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1789     03B3  07AC               	addwf	vfpfcnvrt@c,f
  1790     03B4                     l1574:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1793     03B4  3020               	movlw	32
  1794     03B5  062C               	xorwf	vfpfcnvrt@c,w
  1795     03B6  1D03               	btfss	3,2
  1796     03B7  2BB9               	goto	u1501
  1797     03B8  2BBA               	goto	u1500
  1798     03B9                     u1501:
  1799     03B9  2B9C               	goto	l1570
  1800     03BA                     u1500:
  1801     03BA  2BDB               	goto	l770
  1802     03BB                     l1576:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1805     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1806     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1807     03BD  0822               	movf	vfpfcnvrt@fmt,w
  1808     03BE  0084               	movwf	4
  1809     03BF  3001               	movlw	1
  1810     03C0  0780               	addwf	0,f
  1811     03C1  2BDB               	goto	l770
  1812     03C2                     l1580:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1815     03C2  0822               	movf	vfpfcnvrt@fmt,w
  1816     03C3  0084               	movwf	4
  1817     03C4  0800               	movf	0,w
  1818     03C5  0084               	movwf	4
  1819     03C6  120A  158A  2000  120A  118A  	fcall	stringdir
  1820     03CB  00A4               	movwf	??_vfpfcnvrt
  1821     03CC  01A5               	clrf	??_vfpfcnvrt+1
  1822     03CD  0824               	movf	??_vfpfcnvrt,w
  1823     03CE  00F0               	movwf	fputc@c
  1824     03CF  0825               	movf	??_vfpfcnvrt+1,w
  1825     03D0  00F1               	movwf	fputc@c+1
  1826     03D1  0820               	movf	vfpfcnvrt@fp,w
  1827     03D2  00F2               	movwf	fputc@fp
  1828     03D3  0821               	movf	vfpfcnvrt@fp+1,w
  1829     03D4  00F3               	movwf	fputc@fp+1
  1830     03D5  120A  118A  2254  120A  118A  	fcall	_fputc
  1831     03DA  2BBB               	goto	l1576
  1832     03DB                     l770:
  1833     03DB  0008               	return
  1834     03DC                     __end_of_vfpfcnvrt:
  1835                           
  1836                           	psect	text4
  1837     0254                     __ptext4:	
  1838 ;; *************** function _fputc *****************
  1839 ;; Defined at:
  1840 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  c               2    0[COMMON] int 
  1843 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1844 ;;		 -> sprintf@f(11), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    0[COMMON] int 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         4       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          9       0       0       0       0
  1859 ;;      Totals:        13       0       0       0       0
  1860 ;;Total ram usage:       13 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 1
  1863 ;; This function calls:
  1864 ;;		_putch
  1865 ;; This function is called by:
  1866 ;;		_vfpfcnvrt
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870     0254                     _fputc:	
  1871                           ;psect for function _fputc
  1872                           
  1873     0254                     l1460:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1876                           
  1877     0254  0872               	movf	fputc@fp,w
  1878     0255  0473               	iorwf	fputc@fp+1,w
  1879     0256  1903               	btfsc	3,2
  1880     0257  2A59               	goto	u1221
  1881     0258  2A5A               	goto	u1220
  1882     0259                     u1221:
  1883     0259  2A60               	goto	l1464
  1884     025A                     u1220:
  1885     025A                     l1462:
  1886     025A  0872               	movf	fputc@fp,w
  1887     025B  0473               	iorwf	fputc@fp+1,w
  1888     025C  1D03               	btfss	3,2
  1889     025D  2A5F               	goto	u1231
  1890     025E  2A60               	goto	u1230
  1891     025F                     u1231:
  1892     025F  2A67               	goto	l1466
  1893     0260                     u1230:
  1894     0260                     l1464:
  1895     0260  0870               	movf	fputc@c,w
  1896     0261  120A  158A  2578  120A  118A  	fcall	_putch
  1897     0266  2AED               	goto	l795
  1898     0267                     l1466:
  1899     0267  0872               	movf	fputc@fp,w
  1900     0268  3E09               	addlw	9
  1901     0269  00F4               	movwf	??_fputc
  1902     026A  0873               	movf	fputc@fp+1,w
  1903     026B  1803               	skipnc
  1904     026C  3E01               	addlw	1
  1905     026D  3E00               	addlw	0
  1906     026E  00F5               	movwf	??_fputc+1
  1907     026F  0874               	movf	??_fputc,w
  1908     0270  0084               	movwf	4
  1909     0271  1783               	bsf	3,7
  1910     0272  1C75               	btfss	??_fputc+1,0
  1911     0273  1383               	bcf	3,7
  1912     0274  0800               	movf	0,w
  1913     0275  00F6               	movwf	??_fputc+2
  1914     0276  0A84               	incf	4,f
  1915     0277  0800               	movf	0,w
  1916     0278  00F7               	movwf	??_fputc+3
  1917     0279  0876               	movf	??_fputc+2,w
  1918     027A  0477               	iorwf	??_fputc+3,w
  1919     027B  1903               	btfsc	3,2
  1920     027C  2A7E               	goto	u1241
  1921     027D  2A7F               	goto	u1240
  1922     027E                     u1241:
  1923     027E  2AB1               	goto	l1470
  1924     027F                     u1240:
  1925     027F                     l1468:
  1926     027F  0872               	movf	fputc@fp,w
  1927     0280  3E09               	addlw	9
  1928     0281  00F4               	movwf	??_fputc
  1929     0282  0873               	movf	fputc@fp+1,w
  1930     0283  1803               	skipnc
  1931     0284  3E01               	addlw	1
  1932     0285  3E00               	addlw	0
  1933     0286  00F5               	movwf	??_fputc+1
  1934     0287  0874               	movf	??_fputc,w
  1935     0288  0084               	movwf	4
  1936     0289  1783               	bsf	3,7
  1937     028A  1C75               	btfss	??_fputc+1,0
  1938     028B  1383               	bcf	3,7
  1939     028C  0800               	movf	0,w
  1940     028D  00F6               	movwf	??_fputc+2
  1941     028E  0A84               	incf	4,f
  1942     028F  0800               	movf	0,w
  1943     0290  00F7               	movwf	??_fputc+3
  1944     0291  0872               	movf	fputc@fp,w
  1945     0292  3E02               	addlw	2
  1946     0293  00F8               	movwf	??_fputc+4
  1947     0294  0873               	movf	fputc@fp+1,w
  1948     0295  1803               	skipnc
  1949     0296  3E01               	addlw	1
  1950     0297  3E00               	addlw	0
  1951     0298  00F9               	movwf	??_fputc+5
  1952     0299  0878               	movf	??_fputc+4,w
  1953     029A  0084               	movwf	4
  1954     029B  1783               	bsf	3,7
  1955     029C  1C79               	btfss	??_fputc+5,0
  1956     029D  1383               	bcf	3,7
  1957     029E  0800               	movf	0,w
  1958     029F  00FA               	movwf	??_fputc+6
  1959     02A0  0A84               	incf	4,f
  1960     02A1  0800               	movf	0,w
  1961     02A2  00FB               	movwf	??_fputc+7
  1962     02A3  087B               	movf	??_fputc+7,w
  1963     02A4  3A80               	xorlw	128
  1964     02A5  00FC               	movwf	??_fputc+8
  1965     02A6  0877               	movf	??_fputc+3,w
  1966     02A7  3A80               	xorlw	128
  1967     02A8  027C               	subwf	??_fputc+8,w
  1968     02A9  1D03               	skipz
  1969     02AA  2AAD               	goto	u1255
  1970     02AB  0876               	movf	??_fputc+2,w
  1971     02AC  027A               	subwf	??_fputc+6,w
  1972     02AD                     u1255:
  1973     02AD  1803               	skipnc
  1974     02AE  2AB0               	goto	u1251
  1975     02AF  2AB1               	goto	u1250
  1976     02B0                     u1251:
  1977     02B0  2AED               	goto	l795
  1978     02B1                     u1250:
  1979     02B1                     l1470:
  1980     02B1  0872               	movf	fputc@fp,w
  1981     02B2  0084               	movwf	4
  1982     02B3  1783               	bsf	3,7
  1983     02B4  1C73               	btfss	fputc@fp+1,0
  1984     02B5  1383               	bcf	3,7
  1985     02B6  0800               	movf	0,w
  1986     02B7  00F4               	movwf	??_fputc
  1987     02B8  0A84               	incf	4,f
  1988     02B9  0800               	movf	0,w
  1989     02BA  00F5               	movwf	??_fputc+1
  1990     02BB  0872               	movf	fputc@fp,w
  1991     02BC  3E02               	addlw	2
  1992     02BD  00F6               	movwf	??_fputc+2
  1993     02BE  0873               	movf	fputc@fp+1,w
  1994     02BF  1803               	skipnc
  1995     02C0  3E01               	addlw	1
  1996     02C1  3E00               	addlw	0
  1997     02C2  00F7               	movwf	??_fputc+3
  1998     02C3  0876               	movf	??_fputc+2,w
  1999     02C4  0084               	movwf	4
  2000     02C5  1783               	bsf	3,7
  2001     02C6  1C77               	btfss	??_fputc+3,0
  2002     02C7  1383               	bcf	3,7
  2003     02C8  0800               	movf	0,w
  2004     02C9  0774               	addwf	??_fputc,w
  2005     02CA  00F9               	movwf	??_fputc+5
  2006     02CB  0875               	movf	??_fputc+1,w
  2007     02CC  00F8               	movwf	??_fputc+4
  2008     02CD  1803               	skipnc
  2009     02CE  0AF8               	incf	??_fputc+4,f
  2010     02CF  1F80               	btfss	0,7
  2011     02D0  2AD2               	goto	u1260
  2012     02D1  03F8               	decf	??_fputc+4,f
  2013     02D2                     u1260:
  2014     02D2  0878               	movf	??_fputc+4,w
  2015     02D3  00FA               	movwf	??_fputc+6
  2016     02D4  0879               	movf	??_fputc+5,w
  2017     02D5  0084               	movwf	4
  2018     02D6  1783               	bsf	3,7
  2019     02D7  1C7A               	btfss	??_fputc+6,0
  2020     02D8  1383               	bcf	3,7
  2021     02D9  0870               	movf	fputc@c,w
  2022     02DA  0080               	movwf	0
  2023     02DB  0872               	movf	fputc@fp,w
  2024     02DC  3E02               	addlw	2
  2025     02DD  00F4               	movwf	??_fputc
  2026     02DE  0873               	movf	fputc@fp+1,w
  2027     02DF  1803               	skipnc
  2028     02E0  3E01               	addlw	1
  2029     02E1  3E00               	addlw	0
  2030     02E2  00F5               	movwf	??_fputc+1
  2031     02E3  0874               	movf	??_fputc,w
  2032     02E4  0084               	movwf	4
  2033     02E5  1783               	bsf	3,7
  2034     02E6  1C75               	btfss	??_fputc+1,0
  2035     02E7  1383               	bcf	3,7
  2036     02E8  3001               	movlw	1
  2037     02E9  0780               	addwf	0,f
  2038     02EA  0A84               	incf	4,f
  2039     02EB  1803               	skipnc
  2040     02EC  0A80               	incf	0,f
  2041     02ED                     l795:
  2042     02ED  0008               	return
  2043     02EE                     __end_of_fputc:
  2044                           
  2045                           	psect	text5
  2046     0D78                     __ptext5:	
  2047 ;; *************** function _putch *****************
  2048 ;; Defined at:
  2049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  c               1    wreg     unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  c               1    0[COMMON] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_fputc
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     0D78                     _putch:	
  2077                           ;psect for function _putch
  2078                           
  2079     0D78                     l806:	
  2080                           ;incstack = 0
  2081                           ; Regs used in _putch: [wreg]
  2082                           
  2083     0D78  0008               	return
  2084     0D79                     __end_of_putch:
  2085                           
  2086                           	psect	text6
  2087     0DA8                     __ptext6:	
  2088 ;; *************** function _abs *****************
  2089 ;; Defined at:
  2090 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  a               2    6[COMMON] int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  2    6[COMMON] int 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2104 ;;      Params:         2       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0
  2106 ;;      Temps:          2       0       0       0       0
  2107 ;;      Totals:         4       0       0       0       0
  2108 ;;Total ram usage:        4 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_vfpfcnvrt
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     0DA8                     _abs:	
  2118                           ;psect for function _abs
  2119                           
  2120     0DA8                     l1474:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _abs: [wreg+status,2+status,0]
  2123                           
  2124     0DA8  1BF7               	btfsc	abs@a+1,7
  2125     0DA9  2DAB               	goto	u1271
  2126     0DAA  2DAC               	goto	u1270
  2127     0DAB                     u1271:
  2128     0DAB  2DAD               	goto	l1478
  2129     0DAC                     u1270:
  2130     0DAC                     l1476:
  2131     0DAC  2DB8               	goto	l783
  2132     0DAD                     l1478:
  2133     0DAD  0976               	comf	abs@a,w
  2134     0DAE  00F8               	movwf	??_abs
  2135     0DAF  0977               	comf	abs@a+1,w
  2136     0DB0  00F9               	movwf	??_abs+1
  2137     0DB1  0AF8               	incf	??_abs,f
  2138     0DB2  1903               	skipnz
  2139     0DB3  0AF9               	incf	??_abs+1,f
  2140     0DB4  0878               	movf	??_abs,w
  2141     0DB5  00F6               	movwf	?_abs
  2142     0DB6  0879               	movf	??_abs+1,w
  2143     0DB7  00F7               	movwf	?_abs+1
  2144     0DB8                     l783:
  2145     0DB8  0008               	return
  2146     0DB9                     __end_of_abs:
  2147                           
  2148                           	psect	text7
  2149     00C3                     __ptext7:	
  2150 ;; *************** function ___awmod *****************
  2151 ;; Defined at:
  2152 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  divisor         2    0[COMMON] int 
  2155 ;;  dividend        2    2[COMMON] int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  sign            1    5[COMMON] unsigned char 
  2158 ;;  counter         1    4[COMMON] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2    0[COMMON] int 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         4       0       0       0       0
  2169 ;;      Locals:         2       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0
  2171 ;;      Totals:         6       0       0       0       0
  2172 ;;Total ram usage:        6 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_vfpfcnvrt
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181     00C3                     ___awmod:	
  2182                           ;psect for function ___awmod
  2183                           
  2184     00C3                     l1422:	
  2185                           ;incstack = 0
  2186                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2187                           
  2188     00C3  01F5               	clrf	___awmod@sign
  2189     00C4                     l1424:
  2190     00C4  1FF3               	btfss	___awmod@dividend+1,7
  2191     00C5  28C7               	goto	u1131
  2192     00C6  28C8               	goto	u1130
  2193     00C7                     u1131:
  2194     00C7  28CF               	goto	l1430
  2195     00C8                     u1130:
  2196     00C8                     l1426:
  2197     00C8  09F2               	comf	___awmod@dividend,f
  2198     00C9  09F3               	comf	___awmod@dividend+1,f
  2199     00CA  0AF2               	incf	___awmod@dividend,f
  2200     00CB  1903               	skipnz
  2201     00CC  0AF3               	incf	___awmod@dividend+1,f
  2202     00CD                     l1428:
  2203     00CD  3001               	movlw	1
  2204     00CE  00F5               	movwf	___awmod@sign
  2205     00CF                     l1430:
  2206     00CF  1FF1               	btfss	___awmod@divisor+1,7
  2207     00D0  28D2               	goto	u1141
  2208     00D1  28D3               	goto	u1140
  2209     00D2                     u1141:
  2210     00D2  28D8               	goto	l1434
  2211     00D3                     u1140:
  2212     00D3                     l1432:
  2213     00D3  09F0               	comf	___awmod@divisor,f
  2214     00D4  09F1               	comf	___awmod@divisor+1,f
  2215     00D5  0AF0               	incf	___awmod@divisor,f
  2216     00D6  1903               	skipnz
  2217     00D7  0AF1               	incf	___awmod@divisor+1,f
  2218     00D8                     l1434:
  2219     00D8  0870               	movf	___awmod@divisor,w
  2220     00D9  0471               	iorwf	___awmod@divisor+1,w
  2221     00DA  1903               	btfsc	3,2
  2222     00DB  28DD               	goto	u1151
  2223     00DC  28DE               	goto	u1150
  2224     00DD                     u1151:
  2225     00DD  290B               	goto	l1452
  2226     00DE                     u1150:
  2227     00DE                     l1436:
  2228     00DE  3001               	movlw	1
  2229     00DF  00F4               	movwf	___awmod@counter
  2230     00E0  28EA               	goto	l1442
  2231     00E1                     l1438:
  2232     00E1  3001               	movlw	1
  2233     00E2                     u1165:
  2234     00E2  1003               	clrc
  2235     00E3  0DF0               	rlf	___awmod@divisor,f
  2236     00E4  0DF1               	rlf	___awmod@divisor+1,f
  2237     00E5  3EFF               	addlw	-1
  2238     00E6  1D03               	skipz
  2239     00E7  28E2               	goto	u1165
  2240     00E8                     l1440:
  2241     00E8  3001               	movlw	1
  2242     00E9  07F4               	addwf	___awmod@counter,f
  2243     00EA                     l1442:
  2244     00EA  1FF1               	btfss	___awmod@divisor+1,7
  2245     00EB  28ED               	goto	u1171
  2246     00EC  28EE               	goto	u1170
  2247     00ED                     u1171:
  2248     00ED  28E1               	goto	l1438
  2249     00EE                     u1170:
  2250     00EE                     l1444:
  2251     00EE  0871               	movf	___awmod@divisor+1,w
  2252     00EF  0273               	subwf	___awmod@dividend+1,w
  2253     00F0  1D03               	skipz
  2254     00F1  28F4               	goto	u1185
  2255     00F2  0870               	movf	___awmod@divisor,w
  2256     00F3  0272               	subwf	___awmod@dividend,w
  2257     00F4                     u1185:
  2258     00F4  1C03               	skipc
  2259     00F5  28F7               	goto	u1181
  2260     00F6  28F8               	goto	u1180
  2261     00F7                     u1181:
  2262     00F7  28FE               	goto	l1448
  2263     00F8                     u1180:
  2264     00F8                     l1446:
  2265     00F8  0870               	movf	___awmod@divisor,w
  2266     00F9  02F2               	subwf	___awmod@dividend,f
  2267     00FA  0871               	movf	___awmod@divisor+1,w
  2268     00FB  1C03               	skipc
  2269     00FC  03F3               	decf	___awmod@dividend+1,f
  2270     00FD  02F3               	subwf	___awmod@dividend+1,f
  2271     00FE                     l1448:
  2272     00FE  3001               	movlw	1
  2273     00FF                     u1195:
  2274     00FF  1003               	clrc
  2275     0100  0CF1               	rrf	___awmod@divisor+1,f
  2276     0101  0CF0               	rrf	___awmod@divisor,f
  2277     0102  3EFF               	addlw	-1
  2278     0103  1D03               	skipz
  2279     0104  28FF               	goto	u1195
  2280     0105                     l1450:
  2281     0105  3001               	movlw	1
  2282     0106  02F4               	subwf	___awmod@counter,f
  2283     0107  1D03               	btfss	3,2
  2284     0108  290A               	goto	u1201
  2285     0109  290B               	goto	u1200
  2286     010A                     u1201:
  2287     010A  28EE               	goto	l1444
  2288     010B                     u1200:
  2289     010B                     l1452:
  2290     010B  0875               	movf	___awmod@sign,w
  2291     010C  1903               	btfsc	3,2
  2292     010D  290F               	goto	u1211
  2293     010E  2910               	goto	u1210
  2294     010F                     u1211:
  2295     010F  2915               	goto	l1456
  2296     0110                     u1210:
  2297     0110                     l1454:
  2298     0110  09F2               	comf	___awmod@dividend,f
  2299     0111  09F3               	comf	___awmod@dividend+1,f
  2300     0112  0AF2               	incf	___awmod@dividend,f
  2301     0113  1903               	skipnz
  2302     0114  0AF3               	incf	___awmod@dividend+1,f
  2303     0115                     l1456:
  2304     0115  0873               	movf	___awmod@dividend+1,w
  2305     0116  00F1               	movwf	?___awmod+1
  2306     0117  0872               	movf	___awmod@dividend,w
  2307     0118  00F0               	movwf	?___awmod
  2308     0119                     l413:
  2309     0119  0008               	return
  2310     011A                     __end_of___awmod:
  2311                           
  2312                           	psect	text8
  2313     03DC                     __ptext8:	
  2314 ;; *************** function _postfix_cal *****************
  2315 ;; Defined at:
  2316 ;;		line 83 in file "newmain.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  postfix         1   11[BANK0 ] PTR const unsigned char 
  2319 ;;		 -> main@postfix(32), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  b               2   29[BANK0 ] int 
  2322 ;;  a               2   27[BANK0 ] int 
  2323 ;;  result          2   23[BANK0 ] int 
  2324 ;;  s              42   31[BANK0 ] struct .
  2325 ;;  token          10   13[BANK0 ] unsigned char [10]
  2326 ;;  i               2   73[BANK0 ] int 
  2327 ;;  token_index     2   25[BANK0 ] int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2   11[BANK0 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       2       0       0       0
  2338 ;;      Locals:         0      62       0       0       0
  2339 ;;      Temps:          1       0       0       0       0
  2340 ;;      Totals:         1      64       0       0       0
  2341 ;;Total ram usage:       65 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 2
  2344 ;; This function calls:
  2345 ;;		___awdiv
  2346 ;;		___wmul
  2347 ;;		_atoi
  2348 ;;		_int_stack_init
  2349 ;;		_int_stack_pop
  2350 ;;		_int_stack_push
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     03DC                     _postfix_cal:	
  2357                           ;psect for function _postfix_cal
  2358                           
  2359     03DC                     l1734:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _postfix_cal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2362                           
  2363                           
  2364                           ;newmain.c: 84:             int result = 0;;newmain.c: 85:             switch(postfix[i]
      +                          ) {
  2365     03DC  303F               	movlw	low postfix_cal@s
  2366     03DD  00F0               	movwf	int_stack_init@s
  2367     03DE  3000               	movlw	high postfix_cal@s
  2368     03DF  00F1               	movwf	int_stack_init@s+1
  2369     03E0  120A  158A  25CC  120A  118A  	fcall	_int_stack_init
  2370     03E5                     l1736:
  2371                           
  2372                           ;newmain.c: 86:                 case '+': result = a + b; break;
  2373     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2374     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2375     03E7  01E9               	clrf	postfix_cal@i
  2376     03E8  01EA               	clrf	postfix_cal@i+1
  2377     03E9                     l1738:
  2378                           
  2379                           ;newmain.c: 90:             }
  2380     03E9  2D08               	goto	l1792
  2381     03EA                     l1740:
  2382                           
  2383                           ;newmain.c: 91:             int_stack_push(&s, result);
  2384     03EA  0869               	movf	postfix_cal@i,w
  2385     03EB  072B               	addwf	postfix_cal@postfix,w
  2386     03EC  00FD               	movwf	??_postfix_cal
  2387     03ED  087D               	movf	??_postfix_cal,w
  2388     03EE  0084               	movwf	4
  2389     03EF  3030               	movlw	48
  2390     03F0  0200               	subwf	0,w
  2391     03F1  1C03               	skipc
  2392     03F2  2BF4               	goto	u1781
  2393     03F3  2BF5               	goto	u1780
  2394     03F4                     u1781:
  2395     03F4  2C4F               	goto	l1760
  2396     03F5                     u1780:
  2397     03F5                     l1742:
  2398     03F5  0869               	movf	postfix_cal@i,w
  2399     03F6  072B               	addwf	postfix_cal@postfix,w
  2400     03F7  00FD               	movwf	??_postfix_cal
  2401     03F8  087D               	movf	??_postfix_cal,w
  2402     03F9  0084               	movwf	4
  2403     03FA  303A               	movlw	58
  2404     03FB  0200               	subwf	0,w
  2405     03FC  1803               	skipnc
  2406     03FD  2BFF               	goto	u1791
  2407     03FE  2C00               	goto	u1790
  2408     03FF                     u1791:
  2409     03FF  2C4F               	goto	l1760
  2410     0400                     u1790:
  2411     0400                     l1744:
  2412                           
  2413                           ;newmain.c: 92:         }
  2414     0400  01B9               	clrf	postfix_cal@token_index
  2415     0401  01BA               	clrf	postfix_cal@token_index+1
  2416                           
  2417                           ;newmain.c: 93:         i++;
  2418     0402  2C1C               	goto	l1752
  2419     0403                     l1746:
  2420                           
  2421                           ;newmain.c: 94:     }
  2422     0403  0869               	movf	postfix_cal@i,w
  2423     0404  072B               	addwf	postfix_cal@postfix,w
  2424     0405  00FD               	movwf	??_postfix_cal
  2425     0406  087D               	movf	??_postfix_cal,w
  2426     0407  0084               	movwf	4
  2427     0408  0800               	movf	0,w
  2428     0409  00FF               	movwf	btemp+1
  2429     040A  0839               	movf	postfix_cal@token_index,w
  2430     040B  3E2D               	addlw	(low (postfix_cal@token| 0))& (0+255)
  2431     040C  0084               	movwf	4
  2432     040D  087F               	movf	btemp+1,w
  2433     040E  1383               	bcf	3,7	;select IRP bank0
  2434     040F  0080               	movwf	0
  2435     0410                     l1748:
  2436     0410  3001               	movlw	1
  2437     0411  07E9               	addwf	postfix_cal@i,f
  2438     0412  1803               	skipnc
  2439     0413  0AEA               	incf	postfix_cal@i+1,f
  2440     0414  3000               	movlw	0
  2441     0415  07EA               	addwf	postfix_cal@i+1,f
  2442     0416                     l1750:
  2443     0416  3001               	movlw	1
  2444     0417  07B9               	addwf	postfix_cal@token_index,f
  2445     0418  1803               	skipnc
  2446     0419  0ABA               	incf	postfix_cal@token_index+1,f
  2447     041A  3000               	movlw	0
  2448     041B  07BA               	addwf	postfix_cal@token_index+1,f
  2449     041C                     l1752:
  2450                           
  2451                           ;newmain.c: 93:         i++;
  2452     041C  0869               	movf	postfix_cal@i,w
  2453     041D  072B               	addwf	postfix_cal@postfix,w
  2454     041E  00FD               	movwf	??_postfix_cal
  2455     041F  087D               	movf	??_postfix_cal,w
  2456     0420  0084               	movwf	4
  2457     0421  3030               	movlw	48
  2458     0422  1783               	bsf	3,7	;select IRP bank2
  2459     0423  0200               	subwf	0,w
  2460     0424  1C03               	skipc
  2461     0425  2C27               	goto	u1801
  2462     0426  2C28               	goto	u1800
  2463     0427                     u1801:
  2464     0427  2C33               	goto	l1756
  2465     0428                     u1800:
  2466     0428                     l1754:
  2467     0428  0869               	movf	postfix_cal@i,w
  2468     0429  072B               	addwf	postfix_cal@postfix,w
  2469     042A  00FD               	movwf	??_postfix_cal
  2470     042B  087D               	movf	??_postfix_cal,w
  2471     042C  0084               	movwf	4
  2472     042D  303A               	movlw	58
  2473     042E  0200               	subwf	0,w
  2474     042F  1C03               	skipc
  2475     0430  2C32               	goto	u1811
  2476     0431  2C33               	goto	u1810
  2477     0432                     u1811:
  2478     0432  2C03               	goto	l1746
  2479     0433                     u1810:
  2480     0433                     l1756:
  2481                           
  2482                           ;newmain.c: 96:     return int_stack_pop(&s);
  2483     0433  0839               	movf	postfix_cal@token_index,w
  2484     0434  3E2D               	addlw	(low (postfix_cal@token| 0))& (0+255)
  2485     0435  0084               	movwf	4
  2486     0436  1383               	bcf	3,7	;select IRP bank0
  2487     0437  0180               	clrf	0
  2488     0438                     l1758:
  2489                           
  2490                           ;newmain.c: 97: }
  2491     0438  303F               	movlw	low postfix_cal@s
  2492     0439  00A0               	movwf	int_stack_push@s
  2493     043A  3000               	movlw	high postfix_cal@s
  2494     043B  00A1               	movwf	int_stack_push@s+1
  2495     043C  302D               	movlw	(low (postfix_cal@token| 0))& (0+255)
  2496     043D  00F6               	movwf	atoi@s
  2497     043E  120A  118A  21E3  120A  118A  	fcall	_atoi
  2498     0443  0877               	movf	?_atoi+1,w
  2499     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2500     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2501     0446  00A3               	movwf	int_stack_push@val+1
  2502     0447  0876               	movf	?_atoi,w
  2503     0448  00A2               	movwf	int_stack_push@val
  2504     0449  120A  118A  2074  120A  118A  	fcall	_int_stack_push
  2505                           
  2506                           ;newmain.c: 98: 
  2507     044E  2D00               	goto	l1790
  2508     044F                     l1760:
  2509     044F  0869               	movf	postfix_cal@i,w
  2510     0450  072B               	addwf	postfix_cal@postfix,w
  2511     0451  00FD               	movwf	??_postfix_cal
  2512     0452  087D               	movf	??_postfix_cal,w
  2513     0453  0084               	movwf	4
  2514     0454  302B               	movlw	43
  2515     0455  0600               	xorwf	0,w
  2516     0456  1903               	btfsc	3,2
  2517     0457  2C59               	goto	u1821
  2518     0458  2C5A               	goto	u1820
  2519     0459                     u1821:
  2520     0459  2C7B               	goto	l1768
  2521     045A                     u1820:
  2522     045A                     l1762:
  2523     045A  0869               	movf	postfix_cal@i,w
  2524     045B  072B               	addwf	postfix_cal@postfix,w
  2525     045C  00FD               	movwf	??_postfix_cal
  2526     045D  087D               	movf	??_postfix_cal,w
  2527     045E  0084               	movwf	4
  2528     045F  302D               	movlw	45
  2529     0460  0600               	xorwf	0,w
  2530     0461  1903               	btfsc	3,2
  2531     0462  2C64               	goto	u1831
  2532     0463  2C65               	goto	u1830
  2533     0464                     u1831:
  2534     0464  2C7B               	goto	l1768
  2535     0465                     u1830:
  2536     0465                     l1764:
  2537     0465  0869               	movf	postfix_cal@i,w
  2538     0466  072B               	addwf	postfix_cal@postfix,w
  2539     0467  00FD               	movwf	??_postfix_cal
  2540     0468  087D               	movf	??_postfix_cal,w
  2541     0469  0084               	movwf	4
  2542     046A  302A               	movlw	42
  2543     046B  0600               	xorwf	0,w
  2544     046C  1903               	btfsc	3,2
  2545     046D  2C6F               	goto	u1841
  2546     046E  2C70               	goto	u1840
  2547     046F                     u1841:
  2548     046F  2C7B               	goto	l1768
  2549     0470                     u1840:
  2550     0470                     l1766:
  2551     0470  0869               	movf	postfix_cal@i,w
  2552     0471  072B               	addwf	postfix_cal@postfix,w
  2553     0472  00FD               	movwf	??_postfix_cal
  2554     0473  087D               	movf	??_postfix_cal,w
  2555     0474  0084               	movwf	4
  2556     0475  302F               	movlw	47
  2557     0476  0600               	xorwf	0,w
  2558     0477  1D03               	btfss	3,2
  2559     0478  2C7A               	goto	u1851
  2560     0479  2C7B               	goto	u1850
  2561     047A                     u1851:
  2562     047A  2D00               	goto	l1790
  2563     047B                     u1850:
  2564     047B                     l1768:
  2565                           
  2566                           ;newmain.c: 99: 
  2567     047B  303F               	movlw	low postfix_cal@s
  2568     047C  00F8               	movwf	int_stack_pop@s
  2569     047D  3000               	movlw	high postfix_cal@s
  2570     047E  00F9               	movwf	int_stack_pop@s+1
  2571     047F  120A  158A  273D  120A  118A  	fcall	_int_stack_pop
  2572     0484  0879               	movf	?_int_stack_pop+1,w
  2573     0485  1283               	bcf	3,5	;RP0=0, select bank0
  2574     0486  1303               	bcf	3,6	;RP1=0, select bank0
  2575     0487  00BE               	movwf	postfix_cal@b+1
  2576     0488  0878               	movf	?_int_stack_pop,w
  2577     0489  00BD               	movwf	postfix_cal@b
  2578                           
  2579                           ;newmain.c: 100: void lcd_nibble(unsigned char nibble) {
  2580     048A  303F               	movlw	low postfix_cal@s
  2581     048B  00F8               	movwf	int_stack_pop@s
  2582     048C  3000               	movlw	high postfix_cal@s
  2583     048D  00F9               	movwf	int_stack_pop@s+1
  2584     048E  120A  158A  273D  120A  118A  	fcall	_int_stack_pop
  2585     0493  0879               	movf	?_int_stack_pop+1,w
  2586     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2588     0496  00BC               	movwf	postfix_cal@a+1
  2589     0497  0878               	movf	?_int_stack_pop,w
  2590     0498  00BB               	movwf	postfix_cal@a
  2591     0499                     l1770:
  2592                           
  2593                           ;newmain.c: 101:     PORTBbits.RB4 = (nibble >> 0) & 1;
  2594     0499  01B7               	clrf	postfix_cal@result
  2595     049A  01B8               	clrf	postfix_cal@result+1
  2596                           
  2597                           ;newmain.c: 102:     PORTBbits.RB5 = (nibble >> 1) & 1;
  2598     049B  2CDF               	goto	l1786
  2599     049C                     l1772:
  2600     049C  083D               	movf	postfix_cal@b,w
  2601     049D  073B               	addwf	postfix_cal@a,w
  2602     049E  00B7               	movwf	postfix_cal@result
  2603     049F  083E               	movf	postfix_cal@b+1,w
  2604     04A0  1803               	skipnc
  2605     04A1  0A3E               	incf	postfix_cal@b+1,w
  2606     04A2  073C               	addwf	postfix_cal@a+1,w
  2607     04A3  00B8               	movwf	postfix_cal@result+1
  2608     04A4  2CF3               	goto	l1788
  2609     04A5                     l1774:
  2610     04A5  083D               	movf	postfix_cal@b,w
  2611     04A6  023B               	subwf	postfix_cal@a,w
  2612     04A7  00B7               	movwf	postfix_cal@result
  2613     04A8  083E               	movf	postfix_cal@b+1,w
  2614     04A9  1C03               	skipc
  2615     04AA  0A3E               	incf	postfix_cal@b+1,w
  2616     04AB  023C               	subwf	postfix_cal@a+1,w
  2617     04AC  00B8               	movwf	postfix_cal@result+1
  2618     04AD  2CF3               	goto	l1788
  2619     04AE                     l1776:
  2620     04AE  083C               	movf	postfix_cal@a+1,w
  2621     04AF  00F1               	movwf	___wmul@multiplier+1
  2622     04B0  083B               	movf	postfix_cal@a,w
  2623     04B1  00F0               	movwf	___wmul@multiplier
  2624     04B2  083E               	movf	postfix_cal@b+1,w
  2625     04B3  00F3               	movwf	___wmul@multiplicand+1
  2626     04B4  083D               	movf	postfix_cal@b,w
  2627     04B5  00F2               	movwf	___wmul@multiplicand
  2628     04B6  120A  158A  26A3  120A  118A  	fcall	___wmul
  2629     04BB  0871               	movf	?___wmul+1,w
  2630     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2631     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2632     04BE  00B8               	movwf	postfix_cal@result+1
  2633     04BF  0870               	movf	?___wmul,w
  2634     04C0  00B7               	movwf	postfix_cal@result
  2635     04C1  2CF3               	goto	l1788
  2636     04C2                     l1778:
  2637     04C2  083D               	movf	postfix_cal@b,w
  2638     04C3  043E               	iorwf	postfix_cal@b+1,w
  2639     04C4  1D03               	btfss	3,2
  2640     04C5  2CC7               	goto	u1861
  2641     04C6  2CC8               	goto	u1860
  2642     04C7                     u1861:
  2643     04C7  2CCB               	goto	l1782
  2644     04C8                     u1860:
  2645     04C8                     l1780:
  2646     04C8  01B7               	clrf	postfix_cal@result
  2647     04C9  01B8               	clrf	postfix_cal@result+1
  2648     04CA  2CF3               	goto	l1788
  2649     04CB                     l1782:
  2650     04CB  083E               	movf	postfix_cal@b+1,w
  2651     04CC  00F1               	movwf	___awdiv@divisor+1
  2652     04CD  083D               	movf	postfix_cal@b,w
  2653     04CE  00F0               	movwf	___awdiv@divisor
  2654     04CF  083C               	movf	postfix_cal@a+1,w
  2655     04D0  00F3               	movwf	___awdiv@dividend+1
  2656     04D1  083B               	movf	postfix_cal@a,w
  2657     04D2  00F2               	movwf	___awdiv@dividend
  2658     04D3  120A  118A  211A  120A  118A  	fcall	___awdiv
  2659     04D8  0871               	movf	?___awdiv+1,w
  2660     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2661     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2662     04DB  00B8               	movwf	postfix_cal@result+1
  2663     04DC  0870               	movf	?___awdiv,w
  2664     04DD  00B7               	movwf	postfix_cal@result
  2665     04DE  2CF3               	goto	l1788
  2666     04DF                     l1786:
  2667     04DF  0869               	movf	postfix_cal@i,w
  2668     04E0  072B               	addwf	postfix_cal@postfix,w
  2669     04E1  00FD               	movwf	??_postfix_cal
  2670     04E2  087D               	movf	??_postfix_cal,w
  2671     04E3  0084               	movwf	4
  2672     04E4  1783               	bsf	3,7	;select IRP bank2
  2673     04E5  0800               	movf	0,w
  2674                           
  2675                           ; Switch size 1, requested type "simple"
  2676                           ; Number of cases is 4, Range of values is 42 to 47
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte           13     7 (average)
  2680                           ; direct_byte           29    11 (fixed)
  2681                           ; jumptable            263     9 (fixed)
  2682                           ;	Chosen strategy is simple_byte
  2683     04E6  3A2A               	xorlw	42	; case 42
  2684     04E7  1903               	skipnz
  2685     04E8  2CAE               	goto	l1776
  2686     04E9  3A01               	xorlw	1	; case 43
  2687     04EA  1903               	skipnz
  2688     04EB  2C9C               	goto	l1772
  2689     04EC  3A06               	xorlw	6	; case 45
  2690     04ED  1903               	skipnz
  2691     04EE  2CA5               	goto	l1774
  2692     04EF  3A02               	xorlw	2	; case 47
  2693     04F0  1903               	skipnz
  2694     04F1  2CC2               	goto	l1778
  2695     04F2  2CF3               	goto	l1788
  2696     04F3                     l1788:
  2697                           
  2698                           ;newmain.c: 108:     PORTBbits.RB2 = 1;
  2699     04F3  303F               	movlw	low postfix_cal@s
  2700     04F4  00A0               	movwf	int_stack_push@s
  2701     04F5  3000               	movlw	high postfix_cal@s
  2702     04F6  00A1               	movwf	int_stack_push@s+1
  2703     04F7  0838               	movf	postfix_cal@result+1,w
  2704     04F8  00A3               	movwf	int_stack_push@val+1
  2705     04F9  0837               	movf	postfix_cal@result,w
  2706     04FA  00A2               	movwf	int_stack_push@val
  2707     04FB  120A  118A  2074  120A  118A  	fcall	_int_stack_push
  2708     0500                     l1790:
  2709                           
  2710                           ;newmain.c: 110:     PORTBbits.RB2 = 0;
  2711     0500  3001               	movlw	1
  2712     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2713     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2714     0503  07E9               	addwf	postfix_cal@i,f
  2715     0504  1803               	skipnc
  2716     0505  0AEA               	incf	postfix_cal@i+1,f
  2717     0506  3000               	movlw	0
  2718     0507  07EA               	addwf	postfix_cal@i+1,f
  2719     0508                     l1792:
  2720                           
  2721                           ;newmain.c: 90:             }
  2722     0508  0869               	movf	postfix_cal@i,w
  2723     0509  072B               	addwf	postfix_cal@postfix,w
  2724     050A  00FD               	movwf	??_postfix_cal
  2725     050B  087D               	movf	??_postfix_cal,w
  2726     050C  0084               	movwf	4
  2727     050D  1783               	bsf	3,7	;select IRP bank2
  2728     050E  0800               	movf	0,w
  2729     050F  1D03               	btfss	3,2
  2730     0510  2D12               	goto	u1871
  2731     0511  2D13               	goto	u1870
  2732     0512                     u1871:
  2733     0512  2BEA               	goto	l1740
  2734     0513                     u1870:
  2735     0513                     l1794:
  2736                           
  2737                           ;newmain.c: 113: 
  2738     0513  303F               	movlw	low postfix_cal@s
  2739     0514  00F8               	movwf	int_stack_pop@s
  2740     0515  3000               	movlw	high postfix_cal@s
  2741     0516  00F9               	movwf	int_stack_pop@s+1
  2742     0517  120A  158A  273D  120A  118A  	fcall	_int_stack_pop
  2743     051C  0879               	movf	?_int_stack_pop+1,w
  2744     051D  1283               	bcf	3,5	;RP0=0, select bank0
  2745     051E  1303               	bcf	3,6	;RP1=0, select bank0
  2746     051F  00AC               	movwf	?_postfix_cal+1
  2747     0520  0878               	movf	?_int_stack_pop,w
  2748     0521  00AB               	movwf	?_postfix_cal
  2749     0522                     l118:
  2750     0522  0008               	return
  2751     0523                     __end_of_postfix_cal:
  2752                           
  2753                           	psect	text9
  2754     0074                     __ptext9:	
  2755 ;; *************** function _int_stack_push *****************
  2756 ;; Defined at:
  2757 ;;		line 37 in file "newmain.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  s               2    0[BANK0 ] PTR struct .
  2760 ;;		 -> postfix_cal@s(42), 
  2761 ;;  val             2    2[BANK0 ] int 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       4       0       0       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       7       0       0       0
  2776 ;;      Totals:         0      11       0       0       0
  2777 ;;Total ram usage:       11 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_postfix_cal
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786     0074                     _int_stack_push:	
  2787                           ;psect for function _int_stack_push
  2788                           
  2789     0074                     l1608:	
  2790                           ;incstack = 0
  2791                           ; Regs used in _int_stack_push: [wreg-fsr0h+status,2+status,0+btemp+1]
  2792                           
  2793     0074  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0075  1303               	bcf	3,6	;RP1=0, select bank0
  2795     0076  0820               	movf	int_stack_push@s,w
  2796     0077  3E28               	addlw	40
  2797     0078  00A4               	movwf	??_int_stack_push
  2798     0079  0821               	movf	int_stack_push@s+1,w
  2799     007A  1803               	skipnc
  2800     007B  3E01               	addlw	1
  2801     007C  3E00               	addlw	0
  2802     007D  00A5               	movwf	??_int_stack_push+1
  2803     007E  0824               	movf	??_int_stack_push,w
  2804     007F  0084               	movwf	4
  2805     0080  1783               	bsf	3,7
  2806     0081  1C25               	btfss	??_int_stack_push+1,0
  2807     0082  1383               	bcf	3,7
  2808     0083  0800               	movf	0,w
  2809     0084  00A6               	movwf	??_int_stack_push+2
  2810     0085  0A84               	incf	4,f
  2811     0086  0800               	movf	0,w
  2812     0087  00A7               	movwf	??_int_stack_push+3
  2813     0088  0827               	movf	??_int_stack_push+3,w
  2814     0089  3A80               	xorlw	128
  2815     008A  00FF               	movwf	btemp+1
  2816     008B  3080               	movlw	128
  2817     008C  027F               	subwf	btemp+1,w
  2818     008D  1D03               	skipz
  2819     008E  2891               	goto	u1555
  2820     008F  3013               	movlw	19
  2821     0090  0226               	subwf	??_int_stack_push+2,w
  2822     0091                     u1555:
  2823     0091  1803               	skipnc
  2824     0092  2894               	goto	u1551
  2825     0093  2895               	goto	u1550
  2826     0094                     u1551:
  2827     0094  28C2               	goto	l48
  2828     0095                     u1550:
  2829     0095                     l1610:
  2830     0095  1283               	bcf	3,5	;RP0=0, select bank0
  2831     0096  1303               	bcf	3,6	;RP1=0, select bank0
  2832     0097  0820               	movf	int_stack_push@s,w
  2833     0098  3E28               	addlw	40
  2834     0099  00A4               	movwf	??_int_stack_push
  2835     009A  0821               	movf	int_stack_push@s+1,w
  2836     009B  1803               	skipnc
  2837     009C  3E01               	addlw	1
  2838     009D  3E00               	addlw	0
  2839     009E  00A5               	movwf	??_int_stack_push+1
  2840     009F  0824               	movf	??_int_stack_push,w
  2841     00A0  0084               	movwf	4
  2842     00A1  1783               	bsf	3,7
  2843     00A2  1C25               	btfss	??_int_stack_push+1,0
  2844     00A3  1383               	bcf	3,7
  2845     00A4  3001               	movlw	1
  2846     00A5  0780               	addwf	0,f
  2847     00A6  0A84               	incf	4,f
  2848     00A7  1803               	skipnc
  2849     00A8  0A80               	incf	0,f
  2850     00A9  0384               	decf	4,f
  2851     00AA  0800               	movf	0,w
  2852     00AB  00A6               	movwf	??_int_stack_push+2
  2853     00AC  0A84               	incf	4,f
  2854     00AD  0800               	movf	0,w
  2855     00AE  00A7               	movwf	??_int_stack_push+3
  2856     00AF  0826               	movf	??_int_stack_push+2,w
  2857     00B0  00A8               	movwf	??_int_stack_push+4
  2858     00B1  0728               	addwf	??_int_stack_push+4,w
  2859     00B2  0720               	addwf	int_stack_push@s,w
  2860     00B3  00A9               	movwf	??_int_stack_push+5
  2861     00B4  0821               	movf	int_stack_push@s+1,w
  2862     00B5  1803               	skipnc
  2863     00B6  3E01               	addlw	1
  2864     00B7  00AA               	movwf	??_int_stack_push+6
  2865     00B8  0829               	movf	??_int_stack_push+5,w
  2866     00B9  0084               	movwf	4
  2867     00BA  1783               	bsf	3,7
  2868     00BB  1C2A               	btfss	??_int_stack_push+6,0
  2869     00BC  1383               	bcf	3,7
  2870     00BD  0822               	movf	int_stack_push@val,w
  2871     00BE  0080               	movwf	0
  2872     00BF  0A84               	incf	4,f
  2873     00C0  0823               	movf	int_stack_push@val+1,w
  2874     00C1  0080               	movwf	0
  2875     00C2                     l48:
  2876     00C2  0008               	return
  2877     00C3                     __end_of_int_stack_push:
  2878                           
  2879                           	psect	text10
  2880     0F3D                     __ptext10:	
  2881 ;; *************** function _int_stack_pop *****************
  2882 ;; Defined at:
  2883 ;;		line 38 in file "newmain.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  s               2    8[COMMON] PTR struct .
  2886 ;;		 -> postfix_cal@s(42), 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  2    8[COMMON] int 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         2       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0
  2900 ;;      Temps:          0       7       0       0       0
  2901 ;;      Totals:         2       7       0       0       0
  2902 ;;Total ram usage:        9 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 1
  2905 ;; This function calls:
  2906 ;;		_int_stack_empty
  2907 ;; This function is called by:
  2908 ;;		_postfix_cal
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912     0F3D                     _int_stack_pop:	
  2913                           ;psect for function _int_stack_pop
  2914                           
  2915     0F3D                     l1612:	
  2916                           ;incstack = 0
  2917                           ; Regs used in _int_stack_pop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2918                           
  2919     0F3D  0878               	movf	int_stack_pop@s,w
  2920     0F3E  00F0               	movwf	int_stack_empty@s
  2921     0F3F  0879               	movf	int_stack_pop@s+1,w
  2922     0F40  00F1               	movwf	int_stack_empty@s+1
  2923     0F41  120A  158A  265D  120A  158A  	fcall	_int_stack_empty
  2924     0F46  0870               	movf	?_int_stack_empty,w
  2925     0F47  0471               	iorwf	?_int_stack_empty+1,w
  2926     0F48  1D03               	btfss	3,2
  2927     0F49  2F4B               	goto	u1561
  2928     0F4A  2F4C               	goto	u1560
  2929     0F4B                     u1561:
  2930     0F4B  2F78               	goto	l1616
  2931     0F4C                     u1560:
  2932     0F4C                     l1614:
  2933     0F4C  0878               	movf	int_stack_pop@s,w
  2934     0F4D  3E28               	addlw	40
  2935     0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  2936     0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  2937     0F50  00A0               	movwf	??_int_stack_pop
  2938     0F51  0879               	movf	int_stack_pop@s+1,w
  2939     0F52  1803               	skipnc
  2940     0F53  3E01               	addlw	1
  2941     0F54  3E00               	addlw	0
  2942     0F55  00A1               	movwf	??_int_stack_pop+1
  2943     0F56  0820               	movf	??_int_stack_pop,w
  2944     0F57  0084               	movwf	4
  2945     0F58  1783               	bsf	3,7
  2946     0F59  1C21               	btfss	??_int_stack_pop+1,0
  2947     0F5A  1383               	bcf	3,7
  2948     0F5B  0380               	decf	0,f
  2949     0F5C  0A00               	incf	0,w
  2950     0F5D  00A2               	movwf	??_int_stack_pop+2
  2951     0F5E  0F84               	incfsz	4,f
  2952     0F5F  0800               	movf	0,w
  2953     0F60  00A3               	movwf	??_int_stack_pop+3
  2954     0F61  0822               	movf	??_int_stack_pop+2,w
  2955     0F62  1903               	skipnz
  2956     0F63  0380               	decf	0,f
  2957     0F64  0822               	movf	??_int_stack_pop+2,w
  2958     0F65  00A4               	movwf	??_int_stack_pop+4
  2959     0F66  0724               	addwf	??_int_stack_pop+4,w
  2960     0F67  0778               	addwf	int_stack_pop@s,w
  2961     0F68  00A5               	movwf	??_int_stack_pop+5
  2962     0F69  0879               	movf	int_stack_pop@s+1,w
  2963     0F6A  1803               	skipnc
  2964     0F6B  3E01               	addlw	1
  2965     0F6C  00A6               	movwf	??_int_stack_pop+6
  2966     0F6D  0825               	movf	??_int_stack_pop+5,w
  2967     0F6E  0084               	movwf	4
  2968     0F6F  1783               	bsf	3,7
  2969     0F70  1C26               	btfss	??_int_stack_pop+6,0
  2970     0F71  1383               	bcf	3,7
  2971     0F72  0800               	movf	0,w
  2972     0F73  00F8               	movwf	?_int_stack_pop
  2973     0F74  0A84               	incf	4,f
  2974     0F75  0800               	movf	0,w
  2975     0F76  00F9               	movwf	?_int_stack_pop+1
  2976     0F77  2F7A               	goto	l55
  2977     0F78                     l1616:
  2978     0F78  01F8               	clrf	?_int_stack_pop
  2979     0F79  01F9               	clrf	?_int_stack_pop+1
  2980     0F7A                     l55:
  2981     0F7A  0008               	return
  2982     0F7B                     __end_of_int_stack_pop:
  2983                           
  2984                           	psect	text11
  2985     0E5D                     __ptext11:	
  2986 ;; *************** function _int_stack_empty *****************
  2987 ;; Defined at:
  2988 ;;		line 36 in file "newmain.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  s               2    0[COMMON] PTR struct .
  2991 ;;		 -> postfix_cal@s(42), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2    0[COMMON] int 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         2       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          6       0       0       0       0
  3006 ;;      Totals:         8       0       0       0       0
  3007 ;;Total ram usage:        8 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_int_stack_pop
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016     0E5D                     _int_stack_empty:	
  3017                           ;psect for function _int_stack_empty
  3018                           
  3019     0E5D                     l1486:	
  3020                           ;incstack = 0
  3021                           ; Regs used in _int_stack_empty: [wreg-fsr0h+status,2+status,0]
  3022                           
  3023     0E5D  0870               	movf	int_stack_empty@s,w
  3024     0E5E  3E28               	addlw	40
  3025     0E5F  00F2               	movwf	??_int_stack_empty
  3026     0E60  0871               	movf	int_stack_empty@s+1,w
  3027     0E61  1803               	skipnc
  3028     0E62  3E01               	addlw	1
  3029     0E63  3E00               	addlw	0
  3030     0E64  00F3               	movwf	??_int_stack_empty+1
  3031     0E65  0872               	movf	??_int_stack_empty,w
  3032     0E66  0084               	movwf	4
  3033     0E67  1783               	bsf	3,7
  3034     0E68  1C73               	btfss	??_int_stack_empty+1,0
  3035     0E69  1383               	bcf	3,7
  3036     0E6A  0800               	movf	0,w
  3037     0E6B  00F4               	movwf	??_int_stack_empty+2
  3038     0E6C  0A84               	incf	4,f
  3039     0E6D  0800               	movf	0,w
  3040     0E6E  00F5               	movwf	??_int_stack_empty+3
  3041     0E6F  0A74               	incf	??_int_stack_empty+2,w
  3042     0E70  1D03               	skipz
  3043     0E71  2E78               	goto	u1300
  3044     0E72  0A75               	incf	??_int_stack_empty+3,w
  3045     0E73  1903               	btfsc	3,2
  3046     0E74  2E76               	goto	u1301
  3047     0E75  2E78               	goto	u1300
  3048     0E76                     u1301:
  3049     0E76  3001               	movlw	1
  3050     0E77  2E79               	goto	u1310
  3051     0E78                     u1300:
  3052     0E78  3000               	movlw	0
  3053     0E79                     u1310:
  3054     0E79  00F6               	movwf	??_int_stack_empty+4
  3055     0E7A  01F7               	clrf	??_int_stack_empty+5
  3056     0E7B  0876               	movf	??_int_stack_empty+4,w
  3057     0E7C  00F0               	movwf	?_int_stack_empty
  3058     0E7D  0877               	movf	??_int_stack_empty+5,w
  3059     0E7E  00F1               	movwf	?_int_stack_empty+1
  3060     0E7F                     l44:
  3061     0E7F  0008               	return
  3062     0E80                     __end_of_int_stack_empty:
  3063                           
  3064                           	psect	text12
  3065     0DCC                     __ptext12:	
  3066 ;; *************** function _int_stack_init *****************
  3067 ;; Defined at:
  3068 ;;		line 35 in file "newmain.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  s               2    0[COMMON] PTR struct .
  3071 ;;		 -> postfix_cal@s(42), 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         2       0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0
  3085 ;;      Temps:          2       0       0       0       0
  3086 ;;      Totals:         4       0       0       0       0
  3087 ;;Total ram usage:        4 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_postfix_cal
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096     0DCC                     _int_stack_init:	
  3097                           ;psect for function _int_stack_init
  3098                           
  3099     0DCC                     l1606:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _int_stack_init: [wreg-fsr0h+status,2+status,0]
  3102                           
  3103     0DCC  0870               	movf	int_stack_init@s,w
  3104     0DCD  3E28               	addlw	40
  3105     0DCE  00F2               	movwf	??_int_stack_init
  3106     0DCF  0871               	movf	int_stack_init@s+1,w
  3107     0DD0  1803               	skipnc
  3108     0DD1  3E01               	addlw	1
  3109     0DD2  3E00               	addlw	0
  3110     0DD3  00F3               	movwf	??_int_stack_init+1
  3111     0DD4  0872               	movf	??_int_stack_init,w
  3112     0DD5  0084               	movwf	4
  3113     0DD6  1783               	bsf	3,7
  3114     0DD7  1C73               	btfss	??_int_stack_init+1,0
  3115     0DD8  1383               	bcf	3,7
  3116     0DD9  30FF               	movlw	255
  3117     0DDA  0080               	movwf	0
  3118     0DDB  0A84               	incf	4,f
  3119     0DDC  30FF               	movlw	255
  3120     0DDD  0080               	movwf	0
  3121     0DDE                     l41:
  3122     0DDE  0008               	return
  3123     0DDF                     __end_of_int_stack_init:
  3124                           
  3125                           	psect	text13
  3126     01E3                     __ptext13:	
  3127 ;; *************** function _atoi *****************
  3128 ;; Defined at:
  3129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  s               1    6[COMMON] PTR const unsigned char 
  3132 ;;		 -> postfix_cal@token(10), 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  n               2   11[COMMON] int 
  3135 ;;  neg             1   10[COMMON] _Bool 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    6[COMMON] int 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         2       0       0       0       0
  3146 ;;      Locals:         3       0       0       0       0
  3147 ;;      Temps:          2       0       0       0       0
  3148 ;;      Totals:         7       0       0       0       0
  3149 ;;Total ram usage:        7 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 1
  3152 ;; This function calls:
  3153 ;;		___wmul
  3154 ;; This function is called by:
  3155 ;;		_postfix_cal
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159     01E3                     _atoi:	
  3160                           ;psect for function _atoi
  3161                           
  3162     01E3                     l1624:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3165                           
  3166     01E3  01FB               	clrf	atoi@n
  3167     01E4  01FC               	clrf	atoi@n+1
  3168     01E5  01FA               	clrf	atoi@neg
  3169     01E6  29E9               	goto	l1628
  3170     01E7                     l1626:
  3171     01E7  3001               	movlw	1
  3172     01E8  07F6               	addwf	atoi@s,f
  3173     01E9                     l1628:
  3174     01E9  0876               	movf	atoi@s,w
  3175     01EA  0084               	movwf	4
  3176     01EB  3020               	movlw	32
  3177     01EC  1383               	bcf	3,7	;select IRP bank0
  3178     01ED  0600               	xorwf	0,w
  3179     01EE  1903               	btfsc	3,2
  3180     01EF  29F1               	goto	u1591
  3181     01F0  29F2               	goto	u1590
  3182     01F1                     u1591:
  3183     01F1  29E7               	goto	l1626
  3184     01F2                     u1590:
  3185     01F2                     l1630:
  3186     01F2  0876               	movf	atoi@s,w
  3187     01F3  0084               	movwf	4
  3188     01F4  30F7               	movlw	247
  3189     01F5  0700               	addwf	0,w
  3190     01F6  00F8               	movwf	??_atoi
  3191     01F7  3005               	movlw	5
  3192     01F8  0278               	subwf	??_atoi,w
  3193     01F9  1C03               	skipc
  3194     01FA  29FC               	goto	u1601
  3195     01FB  29FD               	goto	u1600
  3196     01FC                     u1601:
  3197     01FC  29E7               	goto	l1626
  3198     01FD                     u1600:
  3199     01FD                     l1632:
  3200     01FD  0876               	movf	atoi@s,w
  3201     01FE  0084               	movwf	4
  3202     01FF  302D               	movlw	45
  3203     0200  0600               	xorwf	0,w
  3204     0201  1D03               	btfss	3,2
  3205     0202  2A04               	goto	u1611
  3206     0203  2A05               	goto	u1610
  3207     0204                     u1611:
  3208     0204  2A0A               	goto	l1638
  3209     0205                     u1610:
  3210     0205                     l1634:
  3211     0205  3001               	movlw	1
  3212     0206  00FA               	movwf	atoi@neg
  3213     0207                     l1636:
  3214     0207  3001               	movlw	1
  3215     0208  07F6               	addwf	atoi@s,f
  3216     0209  2A33               	goto	l1646
  3217     020A                     l1638:
  3218     020A  0876               	movf	atoi@s,w
  3219     020B  0084               	movwf	4
  3220     020C  302B               	movlw	43
  3221     020D  0600               	xorwf	0,w
  3222     020E  1D03               	btfss	3,2
  3223     020F  2A11               	goto	u1621
  3224     0210  2A12               	goto	u1620
  3225     0211                     u1621:
  3226     0211  2A33               	goto	l1646
  3227     0212                     u1620:
  3228     0212  2A07               	goto	l1636
  3229     0213                     l1642:
  3230     0213  0876               	movf	atoi@s,w
  3231     0214  0084               	movwf	4
  3232     0215  087C               	movf	atoi@n+1,w
  3233     0216  00F1               	movwf	___wmul@multiplier+1
  3234     0217  087B               	movf	atoi@n,w
  3235     0218  00F0               	movwf	___wmul@multiplier
  3236     0219  300A               	movlw	10
  3237     021A  00F2               	movwf	___wmul@multiplicand
  3238     021B  3000               	movlw	0
  3239     021C  00F3               	movwf	___wmul@multiplicand+1
  3240     021D  120A  158A  26A3  120A  118A  	fcall	___wmul
  3241     0222  0871               	movf	?___wmul+1,w
  3242     0223  00F9               	movwf	??_atoi+1
  3243     0224  1383               	bcf	3,7	;select IRP bank0
  3244     0225  0800               	movf	0,w
  3245     0226  0270               	subwf	?___wmul,w
  3246     0227  00F8               	movwf	??_atoi
  3247     0228  1C03               	skipc
  3248     0229  03F9               	decf	??_atoi+1,f
  3249     022A  0878               	movf	??_atoi,w
  3250     022B  3E30               	addlw	48
  3251     022C  00FB               	movwf	atoi@n
  3252     022D  0879               	movf	??_atoi+1,w
  3253     022E  1803               	skipnc
  3254     022F  3E01               	addlw	1
  3255     0230  3E00               	addlw	0
  3256     0231  00FC               	movwf	atoi@n+1
  3257     0232  2A07               	goto	l1636
  3258     0233                     l1646:
  3259     0233  0876               	movf	atoi@s,w
  3260     0234  0084               	movwf	4
  3261     0235  30D0               	movlw	208
  3262     0236  0700               	addwf	0,w
  3263     0237  00F8               	movwf	??_atoi
  3264     0238  300A               	movlw	10
  3265     0239  0278               	subwf	??_atoi,w
  3266     023A  1C03               	skipc
  3267     023B  2A3D               	goto	u1631
  3268     023C  2A3E               	goto	u1630
  3269     023D                     u1631:
  3270     023D  2A13               	goto	l1642
  3271     023E                     u1630:
  3272     023E                     l1648:
  3273     023E  087A               	movf	atoi@neg,w
  3274     023F  1D03               	btfss	3,2
  3275     0240  2A42               	goto	u1641
  3276     0241  2A43               	goto	u1640
  3277     0242                     u1641:
  3278     0242  2A4F               	goto	l1652
  3279     0243                     u1640:
  3280     0243                     l1650:
  3281     0243  097B               	comf	atoi@n,w
  3282     0244  00F8               	movwf	??_atoi
  3283     0245  097C               	comf	atoi@n+1,w
  3284     0246  00F9               	movwf	??_atoi+1
  3285     0247  0AF8               	incf	??_atoi,f
  3286     0248  1903               	skipnz
  3287     0249  0AF9               	incf	??_atoi+1,f
  3288     024A  0878               	movf	??_atoi,w
  3289     024B  00F6               	movwf	?_atoi
  3290     024C  0879               	movf	??_atoi+1,w
  3291     024D  00F7               	movwf	?_atoi+1
  3292     024E  2A53               	goto	l719
  3293     024F                     l1652:
  3294     024F  087C               	movf	atoi@n+1,w
  3295     0250  00F7               	movwf	?_atoi+1
  3296     0251  087B               	movf	atoi@n,w
  3297     0252  00F6               	movwf	?_atoi
  3298     0253                     l719:
  3299     0253  0008               	return
  3300     0254                     __end_of_atoi:
  3301                           
  3302                           	psect	text14
  3303     0EA3                     __ptext14:	
  3304 ;; *************** function ___wmul *****************
  3305 ;; Defined at:
  3306 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  multiplier      2    0[COMMON] unsigned int 
  3309 ;;  multiplicand    2    2[COMMON] unsigned int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  product         2    4[COMMON] unsigned int 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  2    0[COMMON] unsigned int 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         4       0       0       0       0
  3322 ;;      Locals:         2       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0
  3324 ;;      Totals:         6       0       0       0       0
  3325 ;;Total ram usage:        6 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_postfix_cal
  3331 ;;		_atoi
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335     0EA3                     ___wmul:	
  3336                           ;psect for function ___wmul
  3337                           
  3338     0EA3                     l1520:	
  3339                           ;incstack = 0
  3340                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3341                           
  3342     0EA3  01F4               	clrf	___wmul@product
  3343     0EA4  01F5               	clrf	___wmul@product+1
  3344     0EA5                     l1522:
  3345     0EA5  1C70               	btfss	___wmul@multiplier,0
  3346     0EA6  2EA8               	goto	u1371
  3347     0EA7  2EA9               	goto	u1370
  3348     0EA8                     u1371:
  3349     0EA8  2EAF               	goto	l247
  3350     0EA9                     u1370:
  3351     0EA9                     l1524:
  3352     0EA9  0872               	movf	___wmul@multiplicand,w
  3353     0EAA  07F4               	addwf	___wmul@product,f
  3354     0EAB  1803               	skipnc
  3355     0EAC  0AF5               	incf	___wmul@product+1,f
  3356     0EAD  0873               	movf	___wmul@multiplicand+1,w
  3357     0EAE  07F5               	addwf	___wmul@product+1,f
  3358     0EAF                     l247:
  3359     0EAF  3001               	movlw	1
  3360     0EB0                     u1385:
  3361     0EB0  1003               	clrc
  3362     0EB1  0DF2               	rlf	___wmul@multiplicand,f
  3363     0EB2  0DF3               	rlf	___wmul@multiplicand+1,f
  3364     0EB3  3EFF               	addlw	-1
  3365     0EB4  1D03               	skipz
  3366     0EB5  2EB0               	goto	u1385
  3367     0EB6                     l1526:
  3368     0EB6  3001               	movlw	1
  3369     0EB7                     u1395:
  3370     0EB7  1003               	clrc
  3371     0EB8  0CF1               	rrf	___wmul@multiplier+1,f
  3372     0EB9  0CF0               	rrf	___wmul@multiplier,f
  3373     0EBA  3EFF               	addlw	-1
  3374     0EBB  1D03               	skipz
  3375     0EBC  2EB7               	goto	u1395
  3376     0EBD                     l1528:
  3377     0EBD  0870               	movf	___wmul@multiplier,w
  3378     0EBE  0471               	iorwf	___wmul@multiplier+1,w
  3379     0EBF  1D03               	btfss	3,2
  3380     0EC0  2EC2               	goto	u1401
  3381     0EC1  2EC3               	goto	u1400
  3382     0EC2                     u1401:
  3383     0EC2  2EA5               	goto	l1522
  3384     0EC3                     u1400:
  3385     0EC3                     l1530:
  3386     0EC3  0875               	movf	___wmul@product+1,w
  3387     0EC4  00F1               	movwf	?___wmul+1
  3388     0EC5  0874               	movf	___wmul@product,w
  3389     0EC6  00F0               	movwf	?___wmul
  3390     0EC7                     l249:
  3391     0EC7  0008               	return
  3392     0EC8                     __end_of___wmul:
  3393                           
  3394                           	psect	text15
  3395     011A                     __ptext15:	
  3396 ;; *************** function ___awdiv *****************
  3397 ;; Defined at:
  3398 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  divisor         2    0[COMMON] int 
  3401 ;;  dividend        2    2[COMMON] int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  quotient        2    6[COMMON] int 
  3404 ;;  sign            1    5[COMMON] unsigned char 
  3405 ;;  counter         1    4[COMMON] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    0[COMMON] int 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         4       0       0       0       0
  3416 ;;      Locals:         4       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         8       0       0       0       0
  3419 ;;Total ram usage:        8 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_postfix_cal
  3425 ;;		_vfpfcnvrt
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429     011A                     ___awdiv:	
  3430                           ;psect for function ___awdiv
  3431                           
  3432     011A                     l1378:	
  3433                           ;incstack = 0
  3434                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3435                           
  3436     011A  01F5               	clrf	___awdiv@sign
  3437     011B                     l1380:
  3438     011B  1FF1               	btfss	___awdiv@divisor+1,7
  3439     011C  291E               	goto	u1031
  3440     011D  291F               	goto	u1030
  3441     011E                     u1031:
  3442     011E  2926               	goto	l1386
  3443     011F                     u1030:
  3444     011F                     l1382:
  3445     011F  09F0               	comf	___awdiv@divisor,f
  3446     0120  09F1               	comf	___awdiv@divisor+1,f
  3447     0121  0AF0               	incf	___awdiv@divisor,f
  3448     0122  1903               	skipnz
  3449     0123  0AF1               	incf	___awdiv@divisor+1,f
  3450     0124                     l1384:
  3451     0124  3001               	movlw	1
  3452     0125  00F5               	movwf	___awdiv@sign
  3453     0126                     l1386:
  3454     0126  1FF3               	btfss	___awdiv@dividend+1,7
  3455     0127  2929               	goto	u1041
  3456     0128  292A               	goto	u1040
  3457     0129                     u1041:
  3458     0129  2931               	goto	l1392
  3459     012A                     u1040:
  3460     012A                     l1388:
  3461     012A  09F2               	comf	___awdiv@dividend,f
  3462     012B  09F3               	comf	___awdiv@dividend+1,f
  3463     012C  0AF2               	incf	___awdiv@dividend,f
  3464     012D  1903               	skipnz
  3465     012E  0AF3               	incf	___awdiv@dividend+1,f
  3466     012F                     l1390:
  3467     012F  3001               	movlw	1
  3468     0130  06F5               	xorwf	___awdiv@sign,f
  3469     0131                     l1392:
  3470     0131  01F6               	clrf	___awdiv@quotient
  3471     0132  01F7               	clrf	___awdiv@quotient+1
  3472     0133                     l1394:
  3473     0133  0870               	movf	___awdiv@divisor,w
  3474     0134  0471               	iorwf	___awdiv@divisor+1,w
  3475     0135  1903               	btfsc	3,2
  3476     0136  2938               	goto	u1051
  3477     0137  2939               	goto	u1050
  3478     0138                     u1051:
  3479     0138  296E               	goto	l1414
  3480     0139                     u1050:
  3481     0139                     l1396:
  3482     0139  3001               	movlw	1
  3483     013A  00F4               	movwf	___awdiv@counter
  3484     013B  2945               	goto	l1402
  3485     013C                     l1398:
  3486     013C  3001               	movlw	1
  3487     013D                     u1065:
  3488     013D  1003               	clrc
  3489     013E  0DF0               	rlf	___awdiv@divisor,f
  3490     013F  0DF1               	rlf	___awdiv@divisor+1,f
  3491     0140  3EFF               	addlw	-1
  3492     0141  1D03               	skipz
  3493     0142  293D               	goto	u1065
  3494     0143                     l1400:
  3495     0143  3001               	movlw	1
  3496     0144  07F4               	addwf	___awdiv@counter,f
  3497     0145                     l1402:
  3498     0145  1FF1               	btfss	___awdiv@divisor+1,7
  3499     0146  2948               	goto	u1071
  3500     0147  2949               	goto	u1070
  3501     0148                     u1071:
  3502     0148  293C               	goto	l1398
  3503     0149                     u1070:
  3504     0149                     l1404:
  3505     0149  3001               	movlw	1
  3506     014A                     u1085:
  3507     014A  1003               	clrc
  3508     014B  0DF6               	rlf	___awdiv@quotient,f
  3509     014C  0DF7               	rlf	___awdiv@quotient+1,f
  3510     014D  3EFF               	addlw	-1
  3511     014E  1D03               	skipz
  3512     014F  294A               	goto	u1085
  3513     0150  0871               	movf	___awdiv@divisor+1,w
  3514     0151  0273               	subwf	___awdiv@dividend+1,w
  3515     0152  1D03               	skipz
  3516     0153  2956               	goto	u1095
  3517     0154  0870               	movf	___awdiv@divisor,w
  3518     0155  0272               	subwf	___awdiv@dividend,w
  3519     0156                     u1095:
  3520     0156  1C03               	skipc
  3521     0157  2959               	goto	u1091
  3522     0158  295A               	goto	u1090
  3523     0159                     u1091:
  3524     0159  2961               	goto	l1410
  3525     015A                     u1090:
  3526     015A                     l1406:
  3527     015A  0870               	movf	___awdiv@divisor,w
  3528     015B  02F2               	subwf	___awdiv@dividend,f
  3529     015C  0871               	movf	___awdiv@divisor+1,w
  3530     015D  1C03               	skipc
  3531     015E  03F3               	decf	___awdiv@dividend+1,f
  3532     015F  02F3               	subwf	___awdiv@dividend+1,f
  3533     0160                     l1408:
  3534     0160  1476               	bsf	___awdiv@quotient,0
  3535     0161                     l1410:
  3536     0161  3001               	movlw	1
  3537     0162                     u1105:
  3538     0162  1003               	clrc
  3539     0163  0CF1               	rrf	___awdiv@divisor+1,f
  3540     0164  0CF0               	rrf	___awdiv@divisor,f
  3541     0165  3EFF               	addlw	-1
  3542     0166  1D03               	skipz
  3543     0167  2962               	goto	u1105
  3544     0168                     l1412:
  3545     0168  3001               	movlw	1
  3546     0169  02F4               	subwf	___awdiv@counter,f
  3547     016A  1D03               	btfss	3,2
  3548     016B  296D               	goto	u1111
  3549     016C  296E               	goto	u1110
  3550     016D                     u1111:
  3551     016D  2949               	goto	l1404
  3552     016E                     u1110:
  3553     016E                     l1414:
  3554     016E  0875               	movf	___awdiv@sign,w
  3555     016F  1903               	btfsc	3,2
  3556     0170  2972               	goto	u1121
  3557     0171  2973               	goto	u1120
  3558     0172                     u1121:
  3559     0172  2978               	goto	l1418
  3560     0173                     u1120:
  3561     0173                     l1416:
  3562     0173  09F6               	comf	___awdiv@quotient,f
  3563     0174  09F7               	comf	___awdiv@quotient+1,f
  3564     0175  0AF6               	incf	___awdiv@quotient,f
  3565     0176  1903               	skipnz
  3566     0177  0AF7               	incf	___awdiv@quotient+1,f
  3567     0178                     l1418:
  3568     0178  0877               	movf	___awdiv@quotient+1,w
  3569     0179  00F1               	movwf	?___awdiv+1
  3570     017A  0876               	movf	___awdiv@quotient,w
  3571     017B  00F0               	movwf	?___awdiv
  3572     017C                     l400:
  3573     017C  0008               	return
  3574     017D                     __end_of___awdiv:
  3575                           
  3576                           	psect	text16
  3577     0E06                     __ptext16:	
  3578 ;; *************** function _memset *****************
  3579 ;; Defined at:
  3580 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  dest            1    0[COMMON] PTR void 
  3583 ;;		 -> main@mem(32), 
  3584 ;;  c               2    1[COMMON] int 
  3585 ;;  n               2    3[COMMON] unsigned int 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  p               1    5[COMMON] PTR unsigned char 
  3588 ;;		 -> main@mem(32), 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    0[COMMON] PTR void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         5       0       0       0       0
  3599 ;;      Locals:         1       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         6       0       0       0       0
  3602 ;;Total ram usage:        6 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611     0E06                     _memset:	
  3612                           ;psect for function _memset
  3613                           
  3614     0E06                     l1852:	
  3615                           ;incstack = 0
  3616                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3617                           
  3618     0E06  0870               	movf	memset@dest,w
  3619     0E07  00F5               	movwf	memset@p
  3620     0E08  2E10               	goto	l1858
  3621     0E09                     l1854:
  3622     0E09  0875               	movf	memset@p,w
  3623     0E0A  0084               	movwf	4
  3624     0E0B  0871               	movf	memset@c,w
  3625     0E0C  1783               	bsf	3,7	;select IRP bank2
  3626     0E0D  0080               	movwf	0
  3627     0E0E                     l1856:
  3628     0E0E  3001               	movlw	1
  3629     0E0F  07F5               	addwf	memset@p,f
  3630     0E10                     l1858:
  3631     0E10  3001               	movlw	1
  3632     0E11  02F3               	subwf	memset@n,f
  3633     0E12  3000               	movlw	0
  3634     0E13  1C03               	skipc
  3635     0E14  03F4               	decf	memset@n+1,f
  3636     0E15  02F4               	subwf	memset@n+1,f
  3637     0E16  0A73               	incf	memset@n,w
  3638     0E17  1D03               	skipz
  3639     0E18  2E1D               	goto	u1891
  3640     0E19  0A74               	incf	memset@n+1,w
  3641     0E1A  1D03               	btfss	3,2
  3642     0E1B  2E1D               	goto	u1891
  3643     0E1C  2E1E               	goto	u1890
  3644     0E1D                     u1891:
  3645     0E1D  2E09               	goto	l1854
  3646     0E1E                     u1890:
  3647     0E1E                     l725:
  3648     0E1E  0008               	return
  3649     0E1F                     __end_of_memset:
  3650                           
  3651                           	psect	text17
  3652     0DF2                     __ptext17:	
  3653 ;; *************** function _lcd_write_string *****************
  3654 ;; Defined at:
  3655 ;;		line 153 in file "newmain.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  s               1    7[COMMON] PTR const unsigned char 
  3658 ;;		 -> main@result_str(10), 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         1       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         1       0       0       0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 3
  3677 ;; This function calls:
  3678 ;;		_lcd_write_char
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684     0DF2                     _lcd_write_string:	
  3685                           ;psect for function _lcd_write_string
  3686                           
  3687     0DF2                     l1830:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3690                           
  3691     0DF2  2DFD               	goto	l1836
  3692     0DF3                     l1832:
  3693     0DF3  0877               	movf	lcd_write_string@s,w
  3694     0DF4  0084               	movwf	4
  3695     0DF5  0800               	movf	0,w
  3696     0DF6  120A  158A  2581  120A  158A  	fcall	_lcd_write_char
  3697     0DFB                     l1834:
  3698     0DFB  3001               	movlw	1
  3699     0DFC  07F7               	addwf	lcd_write_string@s,f
  3700     0DFD                     l1836:
  3701     0DFD  0877               	movf	lcd_write_string@s,w
  3702     0DFE  0084               	movwf	4
  3703     0DFF  1783               	bsf	3,7	;select IRP bank2
  3704     0E00  0800               	movf	0,w
  3705     0E01  1D03               	btfss	3,2
  3706     0E02  2E04               	goto	u1881
  3707     0E03  2E05               	goto	u1880
  3708     0E04                     u1881:
  3709     0E04  2DF3               	goto	l1832
  3710     0E05                     u1880:
  3711     0E05                     l139:
  3712     0E05  0008               	return
  3713     0E06                     __end_of_lcd_write_string:
  3714                           
  3715                           	psect	text18
  3716     0D81                     __ptext18:	
  3717 ;; *************** function _lcd_write_char *****************
  3718 ;; Defined at:
  3719 ;;		line 152 in file "newmain.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  c               1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  c               1    6[COMMON] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0
  3736 ;;      Totals:         1       0       0       0       0
  3737 ;;Total ram usage:        1 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 2
  3740 ;; This function calls:
  3741 ;;		_lcd_byte
  3742 ;; This function is called by:
  3743 ;;		_lcd_write_string
  3744 ;;		_main
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748     0D81                     _lcd_write_char:	
  3749                           ;psect for function _lcd_write_char
  3750                           
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  3754                           ;lcd_write_char@c stored from wreg
  3755     0D81  00F6               	movwf	lcd_write_char@c
  3756     0D82                     l1656:
  3757     0D82  01F3               	clrf	lcd_byte@mode
  3758     0D83  0AF3               	incf	lcd_byte@mode,f
  3759     0D84  0876               	movf	lcd_write_char@c,w
  3760     0D85  120A  158A  2715  120A  158A  	fcall	_lcd_byte
  3761     0D8A                     l133:
  3762     0D8A  0008               	return
  3763     0D8B                     __end_of_lcd_write_char:
  3764                           
  3765                           	psect	text19
  3766     017D                     __ptext19:	
  3767 ;; *************** function _lcd_init *****************
  3768 ;; Defined at:
  3769 ;;		line 139 in file "newmain.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0
  3785 ;;      Temps:          2       0       0       0       0
  3786 ;;      Totals:         2       0       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 2
  3790 ;; This function calls:
  3791 ;;		_lcd_byte
  3792 ;;		_lcd_nibble
  3793 ;;		_lcd_pulse
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799     017D                     _lcd_init:	
  3800                           ;psect for function _lcd_init
  3801                           
  3802     017D                     l1798:	
  3803                           ;incstack = 0
  3804                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3805                           
  3806                           
  3807                           ;newmain.c: 140:     {'7','8','9','/'},
  3808     017D  1283               	bcf	3,5	;RP0=0, select bank0
  3809     017E  1303               	bcf	3,6	;RP1=0, select bank0
  3810     017F  0186               	clrf	6	;volatile
  3811     0180                     l1800:
  3812                           
  3813                           ;newmain.c: 141:     {'4','5','6','*'},
  3814     0180  3003               	movlw	3
  3815     0181  120A  158A  277B  120A  118A  	fcall	_lcd_nibble
  3816     0186                     l1802:
  3817     0186  120A  158A  258B  120A  118A  	fcall	_lcd_pulse
  3818     018B                     l1804:
  3819     018B  3027               	movlw	39
  3820     018C  00F7               	movwf	??_lcd_init+1
  3821     018D  30F5               	movlw	245
  3822     018E  00F6               	movwf	??_lcd_init
  3823     018F                     u2047:
  3824     018F  0BF6               	decfsz	??_lcd_init,f
  3825     0190  298F               	goto	u2047
  3826     0191  0BF7               	decfsz	??_lcd_init+1,f
  3827     0192  298F               	goto	u2047
  3828     0193                     l1806:
  3829                           
  3830                           ;newmain.c: 142:     {'1','2','3','-'},
  3831     0193  3003               	movlw	3
  3832     0194  120A  158A  277B  120A  118A  	fcall	_lcd_nibble
  3833     0199                     l1808:
  3834     0199  120A  158A  258B  120A  118A  	fcall	_lcd_pulse
  3835     019E                     l1810:
  3836     019E  300D               	movlw	13
  3837     019F  00F7               	movwf	??_lcd_init+1
  3838     01A0  30FB               	movlw	251
  3839     01A1  00F6               	movwf	??_lcd_init
  3840     01A2                     u2057:
  3841     01A2  0BF6               	decfsz	??_lcd_init,f
  3842     01A3  29A2               	goto	u2057
  3843     01A4  0BF7               	decfsz	??_lcd_init+1,f
  3844     01A5  29A2               	goto	u2057
  3845     01A6  29A7               	nop2
  3846     01A7                     l1812:
  3847                           
  3848                           ;newmain.c: 143:     {'C','0','=','+'}
  3849     01A7  3003               	movlw	3
  3850     01A8  120A  158A  277B  120A  118A  	fcall	_lcd_nibble
  3851     01AD                     l1814:
  3852     01AD  120A  158A  258B  120A  118A  	fcall	_lcd_pulse
  3853     01B2                     l1816:
  3854                           
  3855                           ;newmain.c: 144: };
  3856     01B2  3002               	movlw	2
  3857     01B3  120A  158A  277B  120A  118A  	fcall	_lcd_nibble
  3858     01B8                     l1818:
  3859     01B8  120A  158A  258B  120A  118A  	fcall	_lcd_pulse
  3860     01BD                     l1820:
  3861                           
  3862                           ;newmain.c: 145: 
  3863     01BD  01F3               	clrf	lcd_byte@mode
  3864     01BE  3028               	movlw	40
  3865     01BF  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  3866     01C4                     l1822:
  3867                           
  3868                           ;newmain.c: 146: 
  3869     01C4  01F3               	clrf	lcd_byte@mode
  3870     01C5  300C               	movlw	12
  3871     01C6  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  3872     01CB                     l1824:
  3873                           
  3874                           ;newmain.c: 147: void main() {
  3875     01CB  01F3               	clrf	lcd_byte@mode
  3876     01CC  3001               	movlw	1
  3877     01CD  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  3878     01D2                     l1826:
  3879                           
  3880                           ;newmain.c: 148: 
  3881     01D2  3006               	movlw	6
  3882     01D3  00F7               	movwf	??_lcd_init+1
  3883     01D4  3030               	movlw	48
  3884     01D5  00F6               	movwf	??_lcd_init
  3885     01D6                     u2067:
  3886     01D6  0BF6               	decfsz	??_lcd_init,f
  3887     01D7  29D6               	goto	u2067
  3888     01D8  0BF7               	decfsz	??_lcd_init+1,f
  3889     01D9  29D6               	goto	u2067
  3890     01DA  0000               	nop
  3891     01DB                     l1828:
  3892                           
  3893                           ;newmain.c: 149:     TRISB = 0x00;
  3894     01DB  01F3               	clrf	lcd_byte@mode
  3895     01DC  3006               	movlw	6
  3896     01DD  120A  158A  2715  120A  118A  	fcall	_lcd_byte
  3897     01E2                     l130:
  3898     01E2  0008               	return
  3899     01E3                     __end_of_lcd_init:
  3900                           
  3901                           	psect	text20
  3902     0F15                     __ptext20:	
  3903 ;; *************** function _lcd_byte *****************
  3904 ;; Defined at:
  3905 ;;		line 131 in file "newmain.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  byte            1    wreg     unsigned char 
  3908 ;;  mode            1    3[COMMON] unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  byte            1    5[COMMON] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, pclath, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         1       0       0       0       0
  3921 ;;      Locals:         1       0       0       0       0
  3922 ;;      Temps:          1       0       0       0       0
  3923 ;;      Totals:         3       0       0       0       0
  3924 ;;Total ram usage:        3 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 1
  3927 ;; This function calls:
  3928 ;;		_lcd_nibble
  3929 ;;		_lcd_pulse
  3930 ;; This function is called by:
  3931 ;;		_lcd_init
  3932 ;;		_lcd_write_char
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937     0F15                     _lcd_byte:	
  3938                           ;psect for function _lcd_byte
  3939                           
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _lcd_byte: [wreg+status,2+status,0+pclath+cstack]
  3943                           ;lcd_byte@byte stored from wreg
  3944     0F15  00F5               	movwf	lcd_byte@byte
  3945     0F16                     l1510:
  3946                           
  3947                           ;newmain.c: 132:     lcd_byte(0x06, 0);
  3948     0F16  0C73               	rrf	lcd_byte@mode,w
  3949     0F17  1283               	bcf	3,5	;RP0=0, select bank0
  3950     0F18  1303               	bcf	3,6	;RP1=0, select bank0
  3951     0F19  1C03               	skipc
  3952     0F1A  1006               	bcf	6,0	;volatile
  3953     0F1B  1803               	skipnc
  3954     0F1C  1406               	bsf	6,0	;volatile
  3955     0F1D                     l1512:
  3956                           
  3957                           ;newmain.c: 133: }
  3958     0F1D  0875               	movf	lcd_byte@byte,w
  3959     0F1E  00F4               	movwf	??_lcd_byte
  3960     0F1F  3004               	movlw	4
  3961     0F20                     u1365:
  3962     0F20  1003               	clrc
  3963     0F21  0CF4               	rrf	??_lcd_byte,f
  3964     0F22  3EFF               	addlw	-1
  3965     0F23  1D03               	skipz
  3966     0F24  2F20               	goto	u1365
  3967     0F25  0874               	movf	??_lcd_byte,w
  3968     0F26  120A  158A  277B  120A  158A  	fcall	_lcd_nibble
  3969     0F2B                     l1514:
  3970                           
  3971                           ;newmain.c: 134: 
  3972     0F2B  120A  158A  258B  120A  158A  	fcall	_lcd_pulse
  3973     0F30                     l1516:
  3974                           
  3975                           ;newmain.c: 135: void lcd_write_char(char c) { lcd_byte(c, 1); }
  3976     0F30  0875               	movf	lcd_byte@byte,w
  3977     0F31  390F               	andlw	15
  3978     0F32  120A  158A  277B  120A  158A  	fcall	_lcd_nibble
  3979     0F37                     l1518:
  3980                           
  3981                           ;newmain.c: 136: void lcd_write_string(const char* s) { while(*s) lcd_write_char(*s++); 
      +                          }
  3982     0F37  120A  158A  258B  120A  158A  	fcall	_lcd_pulse
  3983     0F3C                     l127:
  3984     0F3C  0008               	return
  3985     0F3D                     __end_of_lcd_byte:
  3986                           
  3987                           	psect	text21
  3988     0D8B                     __ptext21:	
  3989 ;; *************** function _lcd_pulse *****************
  3990 ;; Defined at:
  3991 ;;		line 124 in file "newmain.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          1       0       0       0       0
  4008 ;;      Totals:         1       0       0       0       0
  4009 ;;Total ram usage:        1 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_lcd_byte
  4015 ;;		_lcd_init
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019     0D8B                     _lcd_pulse:	
  4020                           ;psect for function _lcd_pulse
  4021                           
  4022     0D8B                     l1374:	
  4023                           ;incstack = 0
  4024                           ; Regs used in _lcd_pulse: [wreg]
  4025                           
  4026                           
  4027                           ;newmain.c: 125:     lcd_nibble(0x03); lcd_pulse(); _delay((unsigned long)((5)*(8000000/
      +                          4000.0)));
  4028     0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  4029     0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  4030     0D8D  1506               	bsf	6,2	;volatile
  4031                           
  4032                           ;newmain.c: 126:     lcd_nibble(0x03); lcd_pulse();
  4033     0D8E  2D8F               	nop2	;2 cycle nop
  4034                           
  4035                           ;newmain.c: 127:     lcd_nibble(0x02); lcd_pulse();
  4036     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0D91  1106               	bcf	6,2	;volatile
  4039     0D92                     l1376:
  4040                           
  4041                           ;newmain.c: 128:     lcd_byte(0x28, 0);
  4042     0D92  3042               	movlw	66
  4043     0D93  00F0               	movwf	??_lcd_pulse
  4044     0D94                     u2077:
  4045     0D94  0BF0               	decfsz	??_lcd_pulse,f
  4046     0D95  2D94               	goto	u2077
  4047     0D96  0000               	nop
  4048     0D97                     l124:
  4049     0D97  0008               	return
  4050     0D98                     __end_of_lcd_pulse:
  4051                           
  4052                           	psect	text22
  4053     0F7B                     __ptext22:	
  4054 ;; *************** function _lcd_nibble *****************
  4055 ;; Defined at:
  4056 ;;		line 117 in file "newmain.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  nibble          1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  nibble          1    2[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0
  4072 ;;      Temps:          2       0       0       0       0
  4073 ;;      Totals:         3       0       0       0       0
  4074 ;;Total ram usage:        3 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_lcd_byte
  4080 ;;		_lcd_init
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084     0F7B                     _lcd_nibble:	
  4085                           ;psect for function _lcd_nibble
  4086                           
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _lcd_nibble: [wreg+status,2+status,0]
  4090                           ;lcd_nibble@nibble stored from wreg
  4091     0F7B  00F2               	movwf	lcd_nibble@nibble
  4092     0F7C                     l1372:
  4093                           
  4094                           ;newmain.c: 118:     lcd_nibble(byte & 0x0F);
  4095     0F7C  0872               	movf	lcd_nibble@nibble,w
  4096     0F7D  3901               	andlw	1
  4097     0F7E  00F0               	movwf	??_lcd_nibble
  4098     0F7F  0EF0               	swapf	??_lcd_nibble,f
  4099     0F80  1283               	bcf	3,5	;RP0=0, select bank0
  4100     0F81  1303               	bcf	3,6	;RP1=0, select bank0
  4101     0F82  0806               	movf	6,w	;volatile
  4102     0F83  0670               	xorwf	??_lcd_nibble,w
  4103     0F84  39EF               	andlw	-17
  4104     0F85  0670               	xorwf	??_lcd_nibble,w
  4105     0F86  0086               	movwf	6	;volatile
  4106                           
  4107                           ;newmain.c: 119:     lcd_pulse();
  4108     0F87  0872               	movf	lcd_nibble@nibble,w
  4109     0F88  00F0               	movwf	??_lcd_nibble
  4110     0F89  1003               	clrc
  4111     0F8A  0C70               	rrf	??_lcd_nibble,w
  4112     0F8B  3901               	andlw	1
  4113     0F8C  00F1               	movwf	??_lcd_nibble+1
  4114     0F8D  0EF1               	swapf	??_lcd_nibble+1,f
  4115     0F8E  0DF1               	rlf	??_lcd_nibble+1,f
  4116     0F8F  0806               	movf	6,w	;volatile
  4117     0F90  0671               	xorwf	??_lcd_nibble+1,w
  4118     0F91  39DF               	andlw	-33
  4119     0F92  0671               	xorwf	??_lcd_nibble+1,w
  4120     0F93  0086               	movwf	6	;volatile
  4121                           
  4122                           ;newmain.c: 120: }
  4123     0F94  0872               	movf	lcd_nibble@nibble,w
  4124     0F95  00F0               	movwf	??_lcd_nibble
  4125     0F96  3002               	movlw	2
  4126     0F97                     u1015:
  4127     0F97  1003               	clrc
  4128     0F98  0CF0               	rrf	??_lcd_nibble,f
  4129     0F99  3EFF               	addlw	-1
  4130     0F9A  1D03               	skipz
  4131     0F9B  2F97               	goto	u1015
  4132     0F9C  0870               	movf	??_lcd_nibble,w
  4133     0F9D  3901               	andlw	1
  4134     0F9E  00F1               	movwf	??_lcd_nibble+1
  4135     0F9F  0EF1               	swapf	??_lcd_nibble+1,f
  4136     0FA0  0DF1               	rlf	??_lcd_nibble+1,f
  4137     0FA1  0DF1               	rlf	??_lcd_nibble+1,f
  4138     0FA2  0806               	movf	6,w	;volatile
  4139     0FA3  0671               	xorwf	??_lcd_nibble+1,w
  4140     0FA4  39BF               	andlw	-65
  4141     0FA5  0671               	xorwf	??_lcd_nibble+1,w
  4142     0FA6  0086               	movwf	6	;volatile
  4143                           
  4144                           ;newmain.c: 121: 
  4145     0FA7  0872               	movf	lcd_nibble@nibble,w
  4146     0FA8  00F0               	movwf	??_lcd_nibble
  4147     0FA9  3003               	movlw	3
  4148     0FAA                     u1025:
  4149     0FAA  1003               	clrc
  4150     0FAB  0CF0               	rrf	??_lcd_nibble,f
  4151     0FAC  3EFF               	addlw	-1
  4152     0FAD  1D03               	skipz
  4153     0FAE  2FAA               	goto	u1025
  4154     0FAF  0870               	movf	??_lcd_nibble,w
  4155     0FB0  3901               	andlw	1
  4156     0FB1  00F1               	movwf	??_lcd_nibble+1
  4157     0FB2  0CF1               	rrf	??_lcd_nibble+1,f
  4158     0FB3  0CF1               	rrf	??_lcd_nibble+1,f
  4159     0FB4  0806               	movf	6,w	;volatile
  4160     0FB5  0671               	xorwf	??_lcd_nibble+1,w
  4161     0FB6  397F               	andlw	-129
  4162     0FB7  0671               	xorwf	??_lcd_nibble+1,w
  4163     0FB8  0086               	movwf	6	;volatile
  4164     0FB9                     l121:
  4165     0FB9  0008               	return
  4166     0FBA                     __end_of_lcd_nibble:
  4167                           
  4168                           	psect	text23
  4169     0523                     __ptext23:	
  4170 ;; *************** function _infix_to_postfix *****************
  4171 ;; Defined at:
  4172 ;;		line 51 in file "newmain.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  infix           1    9[BANK0 ] PTR const unsigned char 
  4175 ;;		 -> main@mem(32), 
  4176 ;;  postfix         1   10[BANK0 ] PTR unsigned char 
  4177 ;;		 -> main@postfix(32), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  s              22   15[BANK0 ] struct .
  4180 ;;  i               2   37[BANK0 ] int 
  4181 ;;  j               2   13[BANK0 ] int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         0       2       0       0       0
  4192 ;;      Locals:         0      26       0       0       0
  4193 ;;      Temps:          0       2       0       0       0
  4194 ;;      Totals:         0      30       0       0       0
  4195 ;;Total ram usage:       30 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 2
  4198 ;; This function calls:
  4199 ;;		_infix_compare
  4200 ;;		_stack_empty
  4201 ;;		_stack_init
  4202 ;;		_stack_peek
  4203 ;;		_stack_pop
  4204 ;;		_stack_push
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     0523                     _infix_to_postfix:	
  4211                           ;psect for function _infix_to_postfix
  4212                           
  4213     0523                     l1668:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _infix_to_postfix: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4216                           
  4217                           
  4218                           ;newmain.c: 52:         } else {;newmain.c: 53:             i++;
  4219     0523  302F               	movlw	low infix_to_postfix@s
  4220     0524  00F0               	movwf	stack_init@s
  4221     0525  3000               	movlw	high infix_to_postfix@s
  4222     0526  00F1               	movwf	stack_init@s+1
  4223     0527  120A  158A  25B9  120A  118A  	fcall	_stack_init
  4224     052C                     l1670:
  4225                           
  4226                           ;newmain.c: 54:         }
  4227     052C  1283               	bcf	3,5	;RP0=0, select bank0
  4228     052D  1303               	bcf	3,6	;RP1=0, select bank0
  4229     052E  01C5               	clrf	infix_to_postfix@i
  4230     052F  01C6               	clrf	infix_to_postfix@i+1
  4231     0530                     l1672:
  4232     0530  01AD               	clrf	infix_to_postfix@j
  4233     0531  01AE               	clrf	infix_to_postfix@j+1
  4234                           
  4235                           ;newmain.c: 56: 
  4236     0532  2E24               	goto	l1720
  4237     0533                     l1674:
  4238                           
  4239                           ;newmain.c: 57:     while (!stack_empty(&s)) {
  4240     0533  0845               	movf	infix_to_postfix@i,w
  4241     0534  0729               	addwf	infix_to_postfix@infix,w
  4242     0535  00AB               	movwf	??_infix_to_postfix
  4243     0536  082B               	movf	??_infix_to_postfix,w
  4244     0537  0084               	movwf	4
  4245     0538  3030               	movlw	48
  4246     0539  0200               	subwf	0,w
  4247     053A  1C03               	skipc
  4248     053B  2D3D               	goto	u1661
  4249     053C  2D3E               	goto	u1660
  4250     053D                     u1661:
  4251     053D  2D88               	goto	l1694
  4252     053E                     u1660:
  4253     053E                     l1676:
  4254     053E  0845               	movf	infix_to_postfix@i,w
  4255     053F  0729               	addwf	infix_to_postfix@infix,w
  4256     0540  00AB               	movwf	??_infix_to_postfix
  4257     0541  082B               	movf	??_infix_to_postfix,w
  4258     0542  0084               	movwf	4
  4259     0543  303A               	movlw	58
  4260     0544  0200               	subwf	0,w
  4261     0545  1803               	skipnc
  4262     0546  2D48               	goto	u1671
  4263     0547  2D49               	goto	u1670
  4264     0548                     u1671:
  4265     0548  2D88               	goto	l1694
  4266     0549                     u1670:
  4267     0549  2D64               	goto	l1686
  4268     054A                     l1680:
  4269                           
  4270                           ;newmain.c: 59:         postfix[j++] = ' ';
  4271     054A  0845               	movf	infix_to_postfix@i,w
  4272     054B  0729               	addwf	infix_to_postfix@infix,w
  4273     054C  00AB               	movwf	??_infix_to_postfix
  4274     054D  082B               	movf	??_infix_to_postfix,w
  4275     054E  0084               	movwf	4
  4276     054F  0800               	movf	0,w
  4277     0550  00FF               	movwf	btemp+1
  4278     0551  082D               	movf	infix_to_postfix@j,w
  4279     0552  072A               	addwf	infix_to_postfix@postfix,w
  4280     0553  00AC               	movwf	??_infix_to_postfix+1
  4281     0554  082C               	movf	??_infix_to_postfix+1,w
  4282     0555  0084               	movwf	4
  4283     0556  087F               	movf	btemp+1,w
  4284     0557  0080               	movwf	0
  4285     0558                     l1682:
  4286     0558  3001               	movlw	1
  4287     0559  07C5               	addwf	infix_to_postfix@i,f
  4288     055A  1803               	skipnc
  4289     055B  0AC6               	incf	infix_to_postfix@i+1,f
  4290     055C  3000               	movlw	0
  4291     055D  07C6               	addwf	infix_to_postfix@i+1,f
  4292     055E                     l1684:
  4293     055E  3001               	movlw	1
  4294     055F  07AD               	addwf	infix_to_postfix@j,f
  4295     0560  1803               	skipnc
  4296     0561  0AAE               	incf	infix_to_postfix@j+1,f
  4297     0562  3000               	movlw	0
  4298     0563  07AE               	addwf	infix_to_postfix@j+1,f
  4299     0564                     l1686:
  4300                           
  4301                           ;newmain.c: 58:         postfix[j++] = stack_pop(&s);
  4302     0564  0845               	movf	infix_to_postfix@i,w
  4303     0565  0729               	addwf	infix_to_postfix@infix,w
  4304     0566  00AB               	movwf	??_infix_to_postfix
  4305     0567  082B               	movf	??_infix_to_postfix,w
  4306     0568  0084               	movwf	4
  4307     0569  3030               	movlw	48
  4308     056A  0200               	subwf	0,w
  4309     056B  1C03               	skipc
  4310     056C  2D6E               	goto	u1681
  4311     056D  2D6F               	goto	u1680
  4312     056E                     u1681:
  4313     056E  2D7A               	goto	l1690
  4314     056F                     u1680:
  4315     056F                     l1688:
  4316     056F  0845               	movf	infix_to_postfix@i,w
  4317     0570  0729               	addwf	infix_to_postfix@infix,w
  4318     0571  00AB               	movwf	??_infix_to_postfix
  4319     0572  082B               	movf	??_infix_to_postfix,w
  4320     0573  0084               	movwf	4
  4321     0574  303A               	movlw	58
  4322     0575  0200               	subwf	0,w
  4323     0576  1C03               	skipc
  4324     0577  2D79               	goto	u1691
  4325     0578  2D7A               	goto	u1690
  4326     0579                     u1691:
  4327     0579  2D4A               	goto	l1680
  4328     057A                     u1690:
  4329     057A                     l1690:
  4330                           
  4331                           ;newmain.c: 61: 
  4332     057A  082D               	movf	infix_to_postfix@j,w
  4333     057B  072A               	addwf	infix_to_postfix@postfix,w
  4334     057C  00AB               	movwf	??_infix_to_postfix
  4335     057D  082B               	movf	??_infix_to_postfix,w
  4336     057E  0084               	movwf	4
  4337     057F  3020               	movlw	32
  4338     0580  0080               	movwf	0
  4339     0581                     l1692:
  4340     0581  3001               	movlw	1
  4341     0582  07AD               	addwf	infix_to_postfix@j,f
  4342     0583  1803               	skipnc
  4343     0584  0AAE               	incf	infix_to_postfix@j+1,f
  4344     0585  3000               	movlw	0
  4345     0586  07AE               	addwf	infix_to_postfix@j+1,f
  4346                           
  4347                           ;newmain.c: 62:     postfix[j] = '\0';
  4348     0587  2E24               	goto	l1720
  4349     0588                     l1694:
  4350     0588  0845               	movf	infix_to_postfix@i,w
  4351     0589  0729               	addwf	infix_to_postfix@infix,w
  4352     058A  00AB               	movwf	??_infix_to_postfix
  4353     058B  082B               	movf	??_infix_to_postfix,w
  4354     058C  0084               	movwf	4
  4355     058D  302B               	movlw	43
  4356     058E  0600               	xorwf	0,w
  4357     058F  1903               	btfsc	3,2
  4358     0590  2D92               	goto	u1701
  4359     0591  2D93               	goto	u1700
  4360     0592                     u1701:
  4361     0592  2DDC               	goto	l1710
  4362     0593                     u1700:
  4363     0593                     l1696:
  4364     0593  0845               	movf	infix_to_postfix@i,w
  4365     0594  0729               	addwf	infix_to_postfix@infix,w
  4366     0595  00AB               	movwf	??_infix_to_postfix
  4367     0596  082B               	movf	??_infix_to_postfix,w
  4368     0597  0084               	movwf	4
  4369     0598  302D               	movlw	45
  4370     0599  0600               	xorwf	0,w
  4371     059A  1903               	btfsc	3,2
  4372     059B  2D9D               	goto	u1711
  4373     059C  2D9E               	goto	u1710
  4374     059D                     u1711:
  4375     059D  2DDC               	goto	l1710
  4376     059E                     u1710:
  4377     059E                     l1698:
  4378     059E  0845               	movf	infix_to_postfix@i,w
  4379     059F  0729               	addwf	infix_to_postfix@infix,w
  4380     05A0  00AB               	movwf	??_infix_to_postfix
  4381     05A1  082B               	movf	??_infix_to_postfix,w
  4382     05A2  0084               	movwf	4
  4383     05A3  302A               	movlw	42
  4384     05A4  0600               	xorwf	0,w
  4385     05A5  1903               	btfsc	3,2
  4386     05A6  2DA8               	goto	u1721
  4387     05A7  2DA9               	goto	u1720
  4388     05A8                     u1721:
  4389     05A8  2DDC               	goto	l1710
  4390     05A9                     u1720:
  4391     05A9                     l1700:
  4392     05A9  0845               	movf	infix_to_postfix@i,w
  4393     05AA  0729               	addwf	infix_to_postfix@infix,w
  4394     05AB  00AB               	movwf	??_infix_to_postfix
  4395     05AC  082B               	movf	??_infix_to_postfix,w
  4396     05AD  0084               	movwf	4
  4397     05AE  302F               	movlw	47
  4398     05AF  0600               	xorwf	0,w
  4399     05B0  1D03               	btfss	3,2
  4400     05B1  2DB3               	goto	u1731
  4401     05B2  2DB4               	goto	u1730
  4402     05B3                     u1731:
  4403     05B3  2E1C               	goto	l1716
  4404     05B4                     u1730:
  4405     05B4  2DDC               	goto	l1710
  4406     05B5                     l1702:
  4407                           
  4408                           ;newmain.c: 64: 
  4409     05B5  302F               	movlw	low infix_to_postfix@s
  4410     05B6  00F8               	movwf	stack_pop@s
  4411     05B7  3000               	movlw	high infix_to_postfix@s
  4412     05B8  00F9               	movwf	stack_pop@s+1
  4413     05B9  120A  158A  27BA  120A  118A  	fcall	_stack_pop
  4414     05BE  00FF               	movwf	btemp+1
  4415     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  4416     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  4417     05C1  082D               	movf	infix_to_postfix@j,w
  4418     05C2  072A               	addwf	infix_to_postfix@postfix,w
  4419     05C3  00AB               	movwf	??_infix_to_postfix
  4420     05C4  082B               	movf	??_infix_to_postfix,w
  4421     05C5  0084               	movwf	4
  4422     05C6  087F               	movf	btemp+1,w
  4423     05C7  1783               	bsf	3,7	;select IRP bank2
  4424     05C8  0080               	movwf	0
  4425     05C9                     l1704:
  4426     05C9  3001               	movlw	1
  4427     05CA  07AD               	addwf	infix_to_postfix@j,f
  4428     05CB  1803               	skipnc
  4429     05CC  0AAE               	incf	infix_to_postfix@j+1,f
  4430     05CD  3000               	movlw	0
  4431     05CE  07AE               	addwf	infix_to_postfix@j+1,f
  4432     05CF                     l1706:
  4433                           
  4434                           ;newmain.c: 65: 
  4435     05CF  082D               	movf	infix_to_postfix@j,w
  4436     05D0  072A               	addwf	infix_to_postfix@postfix,w
  4437     05D1  00AB               	movwf	??_infix_to_postfix
  4438     05D2  082B               	movf	??_infix_to_postfix,w
  4439     05D3  0084               	movwf	4
  4440     05D4  3020               	movlw	32
  4441     05D5  0080               	movwf	0
  4442     05D6                     l1708:
  4443     05D6  3001               	movlw	1
  4444     05D7  07AD               	addwf	infix_to_postfix@j,f
  4445     05D8  1803               	skipnc
  4446     05D9  0AAE               	incf	infix_to_postfix@j+1,f
  4447     05DA  3000               	movlw	0
  4448     05DB  07AE               	addwf	infix_to_postfix@j+1,f
  4449     05DC                     l1710:
  4450                           
  4451                           ;newmain.c: 63: }
  4452     05DC  302F               	movlw	low infix_to_postfix@s
  4453     05DD  00F0               	movwf	stack_empty@s
  4454     05DE  3000               	movlw	high infix_to_postfix@s
  4455     05DF  00F1               	movwf	stack_empty@s+1
  4456     05E0  120A  158A  263A  120A  118A  	fcall	_stack_empty
  4457     05E5  0870               	movf	?_stack_empty,w
  4458     05E6  0471               	iorwf	?_stack_empty+1,w
  4459     05E7  1D03               	btfss	3,2
  4460     05E8  2DEA               	goto	u1741
  4461     05E9  2DEB               	goto	u1740
  4462     05EA                     u1741:
  4463     05EA  2E09               	goto	l1714
  4464     05EB                     u1740:
  4465     05EB                     l1712:
  4466     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  4467     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  4468     05ED  0845               	movf	infix_to_postfix@i,w
  4469     05EE  0729               	addwf	infix_to_postfix@infix,w
  4470     05EF  00AB               	movwf	??_infix_to_postfix
  4471     05F0  082B               	movf	??_infix_to_postfix,w
  4472     05F1  0084               	movwf	4
  4473     05F2  1783               	bsf	3,7	;select IRP bank2
  4474     05F3  0800               	movf	0,w
  4475     05F4  00F6               	movwf	infix_compare@c2
  4476     05F5  302F               	movlw	low infix_to_postfix@s
  4477     05F6  00F0               	movwf	stack_peek@s
  4478     05F7  3000               	movlw	high infix_to_postfix@s
  4479     05F8  00F1               	movwf	stack_peek@s+1
  4480     05F9  120A  158A  261F  120A  118A  	fcall	_stack_peek
  4481     05FE  120A  158A  26ED  120A  118A  	fcall	_infix_compare
  4482     0603  0876               	movf	?_infix_compare,w
  4483     0604  0477               	iorwf	?_infix_compare+1,w
  4484     0605  1D03               	btfss	3,2
  4485     0606  2E08               	goto	u1751
  4486     0607  2E09               	goto	u1750
  4487     0608                     u1751:
  4488     0608  2DB5               	goto	l1702
  4489     0609                     u1750:
  4490     0609                     l1714:
  4491                           
  4492                           ;newmain.c: 67:     IntStack s;
  4493     0609  302F               	movlw	low infix_to_postfix@s
  4494     060A  00F0               	movwf	stack_push@s
  4495     060B  3000               	movlw	high infix_to_postfix@s
  4496     060C  00F1               	movwf	stack_push@s+1
  4497     060D  1283               	bcf	3,5	;RP0=0, select bank0
  4498     060E  1303               	bcf	3,6	;RP1=0, select bank0
  4499     060F  0845               	movf	infix_to_postfix@i,w
  4500     0610  0729               	addwf	infix_to_postfix@infix,w
  4501     0611  00AB               	movwf	??_infix_to_postfix
  4502     0612  082B               	movf	??_infix_to_postfix,w
  4503     0613  0084               	movwf	4
  4504     0614  1783               	bsf	3,7	;select IRP bank2
  4505     0615  0800               	movf	0,w
  4506     0616  00F2               	movwf	stack_push@c
  4507     0617  120A  118A  2029  120A  118A  	fcall	_stack_push
  4508     061C                     l1716:
  4509                           
  4510                           ;newmain.c: 68:     int_stack_init(&s);
  4511     061C  3001               	movlw	1
  4512     061D  1283               	bcf	3,5	;RP0=0, select bank0
  4513     061E  1303               	bcf	3,6	;RP1=0, select bank0
  4514     061F  07C5               	addwf	infix_to_postfix@i,f
  4515     0620  1803               	skipnc
  4516     0621  0AC6               	incf	infix_to_postfix@i+1,f
  4517     0622  3000               	movlw	0
  4518     0623  07C6               	addwf	infix_to_postfix@i+1,f
  4519     0624                     l1720:	
  4520                           ;newmain.c: 69:     int i = 0;
  4521                           
  4522                           
  4523                           ;newmain.c: 56: 
  4524     0624  0845               	movf	infix_to_postfix@i,w
  4525     0625  0729               	addwf	infix_to_postfix@infix,w
  4526     0626  00AB               	movwf	??_infix_to_postfix
  4527     0627  082B               	movf	??_infix_to_postfix,w
  4528     0628  0084               	movwf	4
  4529     0629  1783               	bsf	3,7	;select IRP bank2
  4530     062A  0800               	movf	0,w
  4531     062B  1D03               	btfss	3,2
  4532     062C  2E2E               	goto	u1761
  4533     062D  2E2F               	goto	u1760
  4534     062E                     u1761:
  4535     062E  2D33               	goto	l1674
  4536     062F                     u1760:
  4537     062F  2E57               	goto	l1730
  4538     0630                     l1722:
  4539                           
  4540                           ;newmain.c: 75:             token_index = 0;
  4541     0630  302F               	movlw	low infix_to_postfix@s
  4542     0631  00F8               	movwf	stack_pop@s
  4543     0632  3000               	movlw	high infix_to_postfix@s
  4544     0633  00F9               	movwf	stack_pop@s+1
  4545     0634  120A  158A  27BA  120A  118A  	fcall	_stack_pop
  4546     0639  00FF               	movwf	btemp+1
  4547     063A  1283               	bcf	3,5	;RP0=0, select bank0
  4548     063B  1303               	bcf	3,6	;RP1=0, select bank0
  4549     063C  082D               	movf	infix_to_postfix@j,w
  4550     063D  072A               	addwf	infix_to_postfix@postfix,w
  4551     063E  00AB               	movwf	??_infix_to_postfix
  4552     063F  082B               	movf	??_infix_to_postfix,w
  4553     0640  0084               	movwf	4
  4554     0641  087F               	movf	btemp+1,w
  4555     0642  1783               	bsf	3,7	;select IRP bank2
  4556     0643  0080               	movwf	0
  4557     0644                     l1724:
  4558     0644  3001               	movlw	1
  4559     0645  07AD               	addwf	infix_to_postfix@j,f
  4560     0646  1803               	skipnc
  4561     0647  0AAE               	incf	infix_to_postfix@j+1,f
  4562     0648  3000               	movlw	0
  4563     0649  07AE               	addwf	infix_to_postfix@j+1,f
  4564     064A                     l1726:
  4565                           
  4566                           ;newmain.c: 76:             while (postfix[i] >= '0' && postfix[i] <= '9') {
  4567     064A  082D               	movf	infix_to_postfix@j,w
  4568     064B  072A               	addwf	infix_to_postfix@postfix,w
  4569     064C  00AB               	movwf	??_infix_to_postfix
  4570     064D  082B               	movf	??_infix_to_postfix,w
  4571     064E  0084               	movwf	4
  4572     064F  3020               	movlw	32
  4573     0650  0080               	movwf	0
  4574     0651                     l1728:
  4575     0651  3001               	movlw	1
  4576     0652  07AD               	addwf	infix_to_postfix@j,f
  4577     0653  1803               	skipnc
  4578     0654  0AAE               	incf	infix_to_postfix@j+1,f
  4579     0655  3000               	movlw	0
  4580     0656  07AE               	addwf	infix_to_postfix@j+1,f
  4581     0657                     l1730:
  4582                           
  4583                           ;newmain.c: 74:         if (postfix[i] >= '0' && postfix[i] <= '9') {
  4584     0657  302F               	movlw	low infix_to_postfix@s
  4585     0658  00F0               	movwf	stack_empty@s
  4586     0659  3000               	movlw	high infix_to_postfix@s
  4587     065A  00F1               	movwf	stack_empty@s+1
  4588     065B  120A  158A  263A  120A  118A  	fcall	_stack_empty
  4589     0660  0870               	movf	?_stack_empty,w
  4590     0661  0471               	iorwf	?_stack_empty+1,w
  4591     0662  1903               	btfsc	3,2
  4592     0663  2E65               	goto	u1771
  4593     0664  2E66               	goto	u1770
  4594     0665                     u1771:
  4595     0665  2E30               	goto	l1722
  4596     0666                     u1770:
  4597     0666                     l1732:
  4598                           
  4599                           ;newmain.c: 79:             token[token_index] = '\0';
  4600     0666  1283               	bcf	3,5	;RP0=0, select bank0
  4601     0667  1303               	bcf	3,6	;RP1=0, select bank0
  4602     0668  082D               	movf	infix_to_postfix@j,w
  4603     0669  072A               	addwf	infix_to_postfix@postfix,w
  4604     066A  00AB               	movwf	??_infix_to_postfix
  4605     066B  082B               	movf	??_infix_to_postfix,w
  4606     066C  0084               	movwf	4
  4607     066D  1783               	bsf	3,7	;select IRP bank2
  4608     066E  0180               	clrf	0
  4609     066F                     l92:
  4610     066F  0008               	return
  4611     0670                     __end_of_infix_to_postfix:
  4612                           
  4613                           	psect	text24
  4614     0029                     __ptext24:	
  4615 ;; *************** function _stack_push *****************
  4616 ;; Defined at:
  4617 ;;		line 25 in file "newmain.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  s               2    0[COMMON] PTR struct .
  4620 ;;		 -> infix_to_postfix@s(22), 
  4621 ;;  c               1    2[COMMON] unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         3       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0
  4635 ;;      Temps:          7       0       0       0       0
  4636 ;;      Totals:        10       0       0       0       0
  4637 ;;Total ram usage:       10 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_infix_to_postfix
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646     0029                     _stack_push:	
  4647                           ;psect for function _stack_push
  4648                           
  4649     0029                     l1588:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _stack_push: [wreg-fsr0h+status,2+status,0+btemp+1]
  4652                           
  4653     0029  0870               	movf	stack_push@s,w
  4654     002A  3E14               	addlw	20
  4655     002B  00F3               	movwf	??_stack_push
  4656     002C  0871               	movf	stack_push@s+1,w
  4657     002D  1803               	skipnc
  4658     002E  3E01               	addlw	1
  4659     002F  3E00               	addlw	0
  4660     0030  00F4               	movwf	??_stack_push+1
  4661     0031  0873               	movf	??_stack_push,w
  4662     0032  0084               	movwf	4
  4663     0033  1783               	bsf	3,7
  4664     0034  1C74               	btfss	??_stack_push+1,0
  4665     0035  1383               	bcf	3,7
  4666     0036  0800               	movf	0,w
  4667     0037  00F5               	movwf	??_stack_push+2
  4668     0038  0A84               	incf	4,f
  4669     0039  0800               	movf	0,w
  4670     003A  00F6               	movwf	??_stack_push+3
  4671     003B  0876               	movf	??_stack_push+3,w
  4672     003C  3A80               	xorlw	128
  4673     003D  00FF               	movwf	btemp+1
  4674     003E  3080               	movlw	128
  4675     003F  027F               	subwf	btemp+1,w
  4676     0040  1D03               	skipz
  4677     0041  2844               	goto	u1515
  4678     0042  3013               	movlw	19
  4679     0043  0275               	subwf	??_stack_push+2,w
  4680     0044                     u1515:
  4681     0044  1803               	skipnc
  4682     0045  2847               	goto	u1511
  4683     0046  2848               	goto	u1510
  4684     0047                     u1511:
  4685     0047  2873               	goto	l28
  4686     0048                     u1510:
  4687     0048                     l1590:
  4688     0048  0870               	movf	stack_push@s,w
  4689     0049  3E14               	addlw	20
  4690     004A  00F3               	movwf	??_stack_push
  4691     004B  0871               	movf	stack_push@s+1,w
  4692     004C  1803               	skipnc
  4693     004D  3E01               	addlw	1
  4694     004E  3E00               	addlw	0
  4695     004F  00F4               	movwf	??_stack_push+1
  4696     0050  0873               	movf	??_stack_push,w
  4697     0051  0084               	movwf	4
  4698     0052  1783               	bsf	3,7
  4699     0053  1C74               	btfss	??_stack_push+1,0
  4700     0054  1383               	bcf	3,7
  4701     0055  3001               	movlw	1
  4702     0056  0780               	addwf	0,f
  4703     0057  0A84               	incf	4,f
  4704     0058  1803               	skipnc
  4705     0059  0A80               	incf	0,f
  4706     005A  0384               	decf	4,f
  4707     005B  0800               	movf	0,w
  4708     005C  00F5               	movwf	??_stack_push+2
  4709     005D  0A84               	incf	4,f
  4710     005E  0800               	movf	0,w
  4711     005F  00F6               	movwf	??_stack_push+3
  4712     0060  0875               	movf	??_stack_push+2,w
  4713     0061  0770               	addwf	stack_push@s,w
  4714     0062  00F8               	movwf	??_stack_push+5
  4715     0063  0871               	movf	stack_push@s+1,w
  4716     0064  00F7               	movwf	??_stack_push+4
  4717     0065  1803               	skipnc
  4718     0066  0AF7               	incf	??_stack_push+4,f
  4719     0067  1FF5               	btfss	??_stack_push+2,7
  4720     0068  286A               	goto	u1520
  4721     0069  03F7               	decf	??_stack_push+4,f
  4722     006A                     u1520:
  4723     006A  0877               	movf	??_stack_push+4,w
  4724     006B  00F9               	movwf	??_stack_push+6
  4725     006C  0878               	movf	??_stack_push+5,w
  4726     006D  0084               	movwf	4
  4727     006E  1783               	bsf	3,7
  4728     006F  1C79               	btfss	??_stack_push+6,0
  4729     0070  1383               	bcf	3,7
  4730     0071  0872               	movf	stack_push@c,w
  4731     0072  0080               	movwf	0
  4732     0073                     l28:
  4733     0073  0008               	return
  4734     0074                     __end_of_stack_push:
  4735                           
  4736                           	psect	text25
  4737     0FBA                     __ptext25:	
  4738 ;; *************** function _stack_pop *****************
  4739 ;; Defined at:
  4740 ;;		line 26 in file "newmain.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  s               2    8[COMMON] PTR struct .
  4743 ;;		 -> infix_to_postfix@s(22), 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      unsigned char 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         2       0       0       0       0
  4756 ;;      Locals:         2       0       0       0       0
  4757 ;;      Temps:          0       9       0       0       0
  4758 ;;      Totals:         4       9       0       0       0
  4759 ;;Total ram usage:       13 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 1
  4762 ;; This function calls:
  4763 ;;		_stack_empty
  4764 ;; This function is called by:
  4765 ;;		_infix_to_postfix
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769     0FBA                     _stack_pop:	
  4770                           ;psect for function _stack_pop
  4771                           
  4772     0FBA                     l1592:	
  4773                           ;incstack = 0
  4774                           ; Regs used in _stack_pop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4775                           
  4776     0FBA  0878               	movf	stack_pop@s,w
  4777     0FBB  00F0               	movwf	stack_empty@s
  4778     0FBC  0879               	movf	stack_pop@s+1,w
  4779     0FBD  00F1               	movwf	stack_empty@s+1
  4780     0FBE  120A  158A  263A  120A  158A  	fcall	_stack_empty
  4781     0FC3  0870               	movf	?_stack_empty,w
  4782     0FC4  0471               	iorwf	?_stack_empty+1,w
  4783     0FC5  1D03               	btfss	3,2
  4784     0FC6  2FC8               	goto	u1531
  4785     0FC7  2FC9               	goto	u1530
  4786     0FC8                     u1531:
  4787     0FC8  2FFC               	goto	l1596
  4788     0FC9                     u1530:
  4789     0FC9                     l1594:
  4790     0FC9  0878               	movf	stack_pop@s,w
  4791     0FCA  3E14               	addlw	20
  4792     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  4793     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  4794     0FCD  00A0               	movwf	??_stack_pop
  4795     0FCE  0879               	movf	stack_pop@s+1,w
  4796     0FCF  1803               	skipnc
  4797     0FD0  3E01               	addlw	1
  4798     0FD1  3E00               	addlw	0
  4799     0FD2  00A1               	movwf	??_stack_pop+1
  4800     0FD3  0820               	movf	??_stack_pop,w
  4801     0FD4  0084               	movwf	4
  4802     0FD5  1783               	bsf	3,7
  4803     0FD6  1C21               	btfss	??_stack_pop+1,0
  4804     0FD7  1383               	bcf	3,7
  4805     0FD8  0380               	decf	0,f
  4806     0FD9  0A00               	incf	0,w
  4807     0FDA  00A2               	movwf	??_stack_pop+2
  4808     0FDB  0F84               	incfsz	4,f
  4809     0FDC  0800               	movf	0,w
  4810     0FDD  00A3               	movwf	??_stack_pop+3
  4811     0FDE  0822               	movf	??_stack_pop+2,w
  4812     0FDF  1903               	skipnz
  4813     0FE0  0380               	decf	0,f
  4814     0FE1  0822               	movf	??_stack_pop+2,w
  4815     0FE2  0778               	addwf	stack_pop@s,w
  4816     0FE3  00A5               	movwf	??_stack_pop+5
  4817     0FE4  0879               	movf	stack_pop@s+1,w
  4818     0FE5  00A4               	movwf	??_stack_pop+4
  4819     0FE6  1803               	skipnc
  4820     0FE7  0AA4               	incf	??_stack_pop+4,f
  4821     0FE8  1FA2               	btfss	??_stack_pop+2,7
  4822     0FE9  2FEB               	goto	u1540
  4823     0FEA  03A4               	decf	??_stack_pop+4,f
  4824     0FEB                     u1540:
  4825     0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  4826     0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  4827     0FED  0824               	movf	??_stack_pop+4,w
  4828     0FEE  00A6               	movwf	??_stack_pop+6
  4829     0FEF  0825               	movf	??_stack_pop+5,w
  4830     0FF0  0084               	movwf	4
  4831     0FF1  1783               	bsf	3,7
  4832     0FF2  1C26               	btfss	??_stack_pop+6,0
  4833     0FF3  1383               	bcf	3,7
  4834     0FF4  0800               	movf	0,w
  4835     0FF5  00A7               	movwf	??_stack_pop+7
  4836     0FF6  01A8               	clrf	??_stack_pop+8
  4837     0FF7  0827               	movf	??_stack_pop+7,w
  4838     0FF8  00FA               	movwf	_stack_pop$95
  4839     0FF9  0828               	movf	??_stack_pop+8,w
  4840     0FFA  00FB               	movwf	_stack_pop$95+1
  4841     0FFB  2FFE               	goto	l1598
  4842     0FFC                     l1596:
  4843     0FFC  01FA               	clrf	_stack_pop$95
  4844     0FFD  01FB               	clrf	_stack_pop$95+1
  4845     0FFE                     l1598:
  4846     0FFE  087A               	movf	_stack_pop$95,w
  4847     0FFF                     l35:
  4848     0FFF  0008               	return
  4849     1000                     __end_of_stack_pop:
  4850                           
  4851                           	psect	text26
  4852     0E3A                     __ptext26:	
  4853 ;; *************** function _stack_empty *****************
  4854 ;; Defined at:
  4855 ;;		line 24 in file "newmain.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  s               2    0[COMMON] PTR struct .
  4858 ;;		 -> infix_to_postfix@s(22), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    0[COMMON] int 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         2       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0
  4872 ;;      Temps:          6       0       0       0       0
  4873 ;;      Totals:         8       0       0       0       0
  4874 ;;Total ram usage:        8 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_stack_pop
  4880 ;;		_infix_to_postfix
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884     0E3A                     _stack_empty:	
  4885                           ;psect for function _stack_empty
  4886                           
  4887     0E3A                     l1482:	
  4888                           ;incstack = 0
  4889                           ; Regs used in _stack_empty: [wreg-fsr0h+status,2+status,0]
  4890                           
  4891     0E3A  0870               	movf	stack_empty@s,w
  4892     0E3B  3E14               	addlw	20
  4893     0E3C  00F2               	movwf	??_stack_empty
  4894     0E3D  0871               	movf	stack_empty@s+1,w
  4895     0E3E  1803               	skipnc
  4896     0E3F  3E01               	addlw	1
  4897     0E40  3E00               	addlw	0
  4898     0E41  00F3               	movwf	??_stack_empty+1
  4899     0E42  0872               	movf	??_stack_empty,w
  4900     0E43  0084               	movwf	4
  4901     0E44  1783               	bsf	3,7
  4902     0E45  1C73               	btfss	??_stack_empty+1,0
  4903     0E46  1383               	bcf	3,7
  4904     0E47  0800               	movf	0,w
  4905     0E48  00F4               	movwf	??_stack_empty+2
  4906     0E49  0A84               	incf	4,f
  4907     0E4A  0800               	movf	0,w
  4908     0E4B  00F5               	movwf	??_stack_empty+3
  4909     0E4C  0A74               	incf	??_stack_empty+2,w
  4910     0E4D  1D03               	skipz
  4911     0E4E  2E55               	goto	u1280
  4912     0E4F  0A75               	incf	??_stack_empty+3,w
  4913     0E50  1903               	btfsc	3,2
  4914     0E51  2E53               	goto	u1281
  4915     0E52  2E55               	goto	u1280
  4916     0E53                     u1281:
  4917     0E53  3001               	movlw	1
  4918     0E54  2E56               	goto	u1290
  4919     0E55                     u1280:
  4920     0E55  3000               	movlw	0
  4921     0E56                     u1290:
  4922     0E56  00F6               	movwf	??_stack_empty+4
  4923     0E57  01F7               	clrf	??_stack_empty+5
  4924     0E58  0876               	movf	??_stack_empty+4,w
  4925     0E59  00F0               	movwf	?_stack_empty
  4926     0E5A  0877               	movf	??_stack_empty+5,w
  4927     0E5B  00F1               	movwf	?_stack_empty+1
  4928     0E5C                     l24:
  4929     0E5C  0008               	return
  4930     0E5D                     __end_of_stack_empty:
  4931                           
  4932                           	psect	text27
  4933     0E1F                     __ptext27:	
  4934 ;; *************** function _stack_peek *****************
  4935 ;; Defined at:
  4936 ;;		line 27 in file "newmain.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  s               2    0[COMMON] PTR struct .
  4939 ;;		 -> infix_to_postfix@s(22), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4951 ;;      Params:         2       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0
  4953 ;;      Temps:          4       0       0       0       0
  4954 ;;      Totals:         6       0       0       0       0
  4955 ;;Total ram usage:        6 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_infix_to_postfix
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964     0E1F                     _stack_peek:	
  4965                           ;psect for function _stack_peek
  4966                           
  4967     0E1F                     l1602:	
  4968                           ;incstack = 0
  4969                           ; Regs used in _stack_peek: [wreg-fsr0h+status,2+status,0]
  4970                           
  4971     0E1F  0870               	movf	stack_peek@s,w
  4972     0E20  3E14               	addlw	20
  4973     0E21  00F2               	movwf	??_stack_peek
  4974     0E22  0871               	movf	stack_peek@s+1,w
  4975     0E23  1803               	skipnc
  4976     0E24  3E01               	addlw	1
  4977     0E25  3E00               	addlw	0
  4978     0E26  00F3               	movwf	??_stack_peek+1
  4979     0E27  0872               	movf	??_stack_peek,w
  4980     0E28  0084               	movwf	4
  4981     0E29  1783               	bsf	3,7
  4982     0E2A  1C73               	btfss	??_stack_peek+1,0
  4983     0E2B  1383               	bcf	3,7
  4984     0E2C  0800               	movf	0,w
  4985     0E2D  0770               	addwf	stack_peek@s,w
  4986     0E2E  00F4               	movwf	??_stack_peek+2
  4987     0E2F  0871               	movf	stack_peek@s+1,w
  4988     0E30  1803               	skipnc
  4989     0E31  3E01               	addlw	1
  4990     0E32  00F5               	movwf	??_stack_peek+3
  4991     0E33  0874               	movf	??_stack_peek+2,w
  4992     0E34  0084               	movwf	4
  4993     0E35  1783               	bsf	3,7
  4994     0E36  1C75               	btfss	??_stack_peek+3,0
  4995     0E37  1383               	bcf	3,7
  4996     0E38  0800               	movf	0,w
  4997     0E39                     l38:
  4998     0E39  0008               	return
  4999     0E3A                     __end_of_stack_peek:
  5000                           
  5001                           	psect	text28
  5002     0DB9                     __ptext28:	
  5003 ;; *************** function _stack_init *****************
  5004 ;; Defined at:
  5005 ;;		line 23 in file "newmain.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  s               2    0[COMMON] PTR struct .
  5008 ;;		 -> infix_to_postfix@s(22), 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         2       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          2       0       0       0       0
  5023 ;;      Totals:         4       0       0       0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_infix_to_postfix
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033     0DB9                     _stack_init:	
  5034                           ;psect for function _stack_init
  5035                           
  5036     0DB9                     l1586:	
  5037                           ;incstack = 0
  5038                           ; Regs used in _stack_init: [wreg-fsr0h+status,2+status,0]
  5039                           
  5040     0DB9  0870               	movf	stack_init@s,w
  5041     0DBA  3E14               	addlw	20
  5042     0DBB  00F2               	movwf	??_stack_init
  5043     0DBC  0871               	movf	stack_init@s+1,w
  5044     0DBD  1803               	skipnc
  5045     0DBE  3E01               	addlw	1
  5046     0DBF  3E00               	addlw	0
  5047     0DC0  00F3               	movwf	??_stack_init+1
  5048     0DC1  0872               	movf	??_stack_init,w
  5049     0DC2  0084               	movwf	4
  5050     0DC3  1783               	bsf	3,7
  5051     0DC4  1C73               	btfss	??_stack_init+1,0
  5052     0DC5  1383               	bcf	3,7
  5053     0DC6  30FF               	movlw	255
  5054     0DC7  0080               	movwf	0
  5055     0DC8  0A84               	incf	4,f
  5056     0DC9  30FF               	movlw	255
  5057     0DCA  0080               	movwf	0
  5058     0DCB                     l21:
  5059     0DCB  0008               	return
  5060     0DCC                     __end_of_stack_init:
  5061                           
  5062                           	psect	text29
  5063     0EED                     __ptext29:	
  5064 ;; *************** function _infix_compare *****************
  5065 ;; Defined at:
  5066 ;;		line 46 in file "newmain.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  c1              1    wreg     unsigned char 
  5069 ;;  c2              1    6[COMMON] unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  c1              1   13[COMMON] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2    6[COMMON] int 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         2       0       0       0       0
  5082 ;;      Locals:         1       0       0       0       0
  5083 ;;      Temps:          5       0       0       0       0
  5084 ;;      Totals:         8       0       0       0       0
  5085 ;;Total ram usage:        8 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 1
  5088 ;; This function calls:
  5089 ;;		_precedence
  5090 ;; This function is called by:
  5091 ;;		_infix_to_postfix
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095     0EED                     _infix_compare:	
  5096                           ;psect for function _infix_compare
  5097                           
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _infix_compare: [wreg+status,2+status,0+pclath+cstack]
  5101                           ;infix_compare@c1 stored from wreg
  5102     0EED  00FD               	movwf	infix_compare@c1
  5103     0EEE                     l1620:
  5104                           
  5105                           ;newmain.c: 47:                 postfix[j++] = stack_pop(&s);
  5106     0EEE  087D               	movf	infix_compare@c1,w
  5107     0EEF  120A  118A  2003  120A  158A  	fcall	_precedence
  5108     0EF4  0870               	movf	?_precedence,w
  5109     0EF5  00F8               	movwf	??_infix_compare
  5110     0EF6  0871               	movf	?_precedence+1,w
  5111     0EF7  00F9               	movwf	??_infix_compare+1
  5112     0EF8  0876               	movf	infix_compare@c2,w
  5113     0EF9  120A  118A  2003  120A  158A  	fcall	_precedence
  5114     0EFE  0879               	movf	??_infix_compare+1,w
  5115     0EFF  3A80               	xorlw	128
  5116     0F00  00FA               	movwf	??_infix_compare+2
  5117     0F01  0871               	movf	?_precedence+1,w
  5118     0F02  3A80               	xorlw	128
  5119     0F03  027A               	subwf	??_infix_compare+2,w
  5120     0F04  1D03               	skipz
  5121     0F05  2F08               	goto	u1575
  5122     0F06  0870               	movf	?_precedence,w
  5123     0F07  0278               	subwf	??_infix_compare,w
  5124     0F08                     u1575:
  5125     0F08  1803               	skipnc
  5126     0F09  2F0B               	goto	u1571
  5127     0F0A  2F0D               	goto	u1570
  5128     0F0B                     u1571:
  5129     0F0B  3001               	movlw	1
  5130     0F0C  2F0E               	goto	u1580
  5131     0F0D                     u1570:
  5132     0F0D  3000               	movlw	0
  5133     0F0E                     u1580:
  5134     0F0E  00FB               	movwf	??_infix_compare+3
  5135     0F0F  01FC               	clrf	??_infix_compare+4
  5136     0F10  087B               	movf	??_infix_compare+3,w
  5137     0F11  00F6               	movwf	?_infix_compare
  5138     0F12  087C               	movf	??_infix_compare+4,w
  5139     0F13  00F7               	movwf	?_infix_compare+1
  5140     0F14                     l67:
  5141     0F14  0008               	return
  5142     0F15                     __end_of_infix_compare:
  5143                           
  5144                           	psect	text30
  5145     0003                     __ptext30:	
  5146 ;; *************** function _precedence *****************
  5147 ;; Defined at:
  5148 ;;		line 41 in file "newmain.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  c               1    wreg     unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  c               1    2[COMMON] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2    0[COMMON] int 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5162 ;;      Params:         2       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0
  5165 ;;      Totals:         3       0       0       0       0
  5166 ;;Total ram usage:        3 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_infix_compare
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175     0003                     _precedence:	
  5176                           ;psect for function _precedence
  5177                           
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in _precedence: [wreg+status,2+status,0]
  5181                           ;precedence@c stored from wreg
  5182     0003  00F2               	movwf	precedence@c
  5183     0004                     l1490:
  5184                           
  5185                           ;newmain.c: 42:                 postfix[j++] = infix[i++];
  5186     0004  302B               	movlw	43
  5187     0005  0672               	xorwf	precedence@c,w
  5188     0006  1903               	btfsc	3,2
  5189     0007  2809               	goto	u1321
  5190     0008  280A               	goto	u1320
  5191     0009                     u1321:
  5192     0009  2810               	goto	l1494
  5193     000A                     u1320:
  5194     000A                     l1492:
  5195     000A  302D               	movlw	45
  5196     000B  0672               	xorwf	precedence@c,w
  5197     000C  1D03               	btfss	3,2
  5198     000D  280F               	goto	u1331
  5199     000E  2810               	goto	u1330
  5200     000F                     u1331:
  5201     000F  2815               	goto	l1498
  5202     0010                     u1330:
  5203     0010                     l1494:
  5204     0010  3001               	movlw	1
  5205     0011  00F0               	movwf	?_precedence
  5206     0012  3000               	movlw	0
  5207     0013  00F1               	movwf	?_precedence+1
  5208     0014  2828               	goto	l61
  5209     0015                     l1498:
  5210                           
  5211                           ;newmain.c: 43:             }
  5212     0015  302A               	movlw	42
  5213     0016  0672               	xorwf	precedence@c,w
  5214     0017  1903               	btfsc	3,2
  5215     0018  281A               	goto	u1341
  5216     0019  281B               	goto	u1340
  5217     001A                     u1341:
  5218     001A  2821               	goto	l1502
  5219     001B                     u1340:
  5220     001B                     l1500:
  5221     001B  302F               	movlw	47
  5222     001C  0672               	xorwf	precedence@c,w
  5223     001D  1D03               	btfss	3,2
  5224     001E  2820               	goto	u1351
  5225     001F  2821               	goto	u1350
  5226     0020                     u1351:
  5227     0020  2826               	goto	l1506
  5228     0021                     u1350:
  5229     0021                     l1502:
  5230     0021  3002               	movlw	2
  5231     0022  00F0               	movwf	?_precedence
  5232     0023  3000               	movlw	0
  5233     0024  00F1               	movwf	?_precedence+1
  5234     0025  2828               	goto	l61
  5235     0026                     l1506:
  5236                           
  5237                           ;newmain.c: 44:             postfix[j++] = ' ';
  5238     0026  01F0               	clrf	?_precedence
  5239     0027  01F1               	clrf	?_precedence+1
  5240     0028                     l61:
  5241     0028  0008               	return
  5242     0029                     __end_of_precedence:
  5243     0002                     ___latbits      equ	2
  5244     007E                     btemp           set	126	;btemp
  5245     007E                     wtemp0          set	126
  5246                           
  5247                           	psect	config
  5248                           
  5249                           ;Config register CONFIG @ 0x2007
  5250                           ;	Oscillator Selection bits
  5251                           ;	FOSC = HS, HS oscillator
  5252                           ;	Watchdog Timer Enable bit
  5253                           ;	WDTE = OFF, WDT disabled
  5254                           ;	Power-up Timer Enable bit
  5255                           ;	PWRTE = OFF, PWRT disabled
  5256                           ;	Brown-out Reset Enable bit
  5257                           ;	BOREN = OFF, BOR disabled
  5258                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5259                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5260                           ;	Data EEPROM Memory Code Protection bit
  5261                           ;	CPD = OFF, Data EEPROM code protection off
  5262                           ;	Flash Program Memory Write Enable bits
  5263                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5264                           ;	In-Circuit Debugger Mode bit
  5265                           ;	DEBUG = 0x1, unprogrammed default
  5266                           ;	Flash Program Memory Code Protection bit
  5267                           ;	CP = OFF, Code protection off
  5268     2007                     	org	8199
  5269     2007  3F3A               	dw	16186

Data Sizes:
    Strings     3
    Constant    0
    Data        16
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80      0      52
    BANK3            96     83      83
    BANK2            96      0      32

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> postfix_cal@token(BANK0[10]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result_str(BANK3[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result_str(BANK3[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    infix_to_postfix@infix	PTR const unsigned char  size(1) Largest target is 32
		 -> main@mem(BANK3[32]), 

    infix_to_postfix@postfix	PTR unsigned char  size(1) Largest target is 32
		 -> main@postfix(BANK3[32]), 

    int_stack_empty@s	PTR struct . size(2) Largest target is 42
		 -> postfix_cal@s(BANK0[42]), 

    int_stack_init@s	PTR struct . size(2) Largest target is 42
		 -> postfix_cal@s(BANK0[42]), 

    int_stack_pop@s	PTR struct . size(2) Largest target is 42
		 -> postfix_cal@s(BANK0[42]), 

    int_stack_push@s	PTR struct . size(2) Largest target is 42
		 -> postfix_cal@s(BANK0[42]), 

    lcd_write_string@s	PTR const unsigned char  size(1) Largest target is 10
		 -> main@result_str(BANK3[10]), 

    memset@dest	PTR void  size(1) Largest target is 32
		 -> main@mem(BANK3[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> main@mem(BANK3[32]), 

    postfix_cal@postfix	PTR const unsigned char  size(1) Largest target is 32
		 -> main@postfix(BANK3[32]), 

    S645$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result_str(BANK3[10]), 

    S645$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 32
		 -> main@mem(BANK3[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@result_str(BANK3[10]), 

    stack_empty@s	PTR struct . size(2) Largest target is 22
		 -> infix_to_postfix@s(BANK0[22]), 

    stack_init@s	PTR struct . size(2) Largest target is 22
		 -> infix_to_postfix@s(BANK0[22]), 

    stack_peek@s	PTR struct . size(2) Largest target is 22
		 -> infix_to_postfix@s(BANK0[22]), 

    stack_pop@s	PTR struct . size(2) Largest target is 22
		 -> infix_to_postfix@s(BANK0[22]), 

    stack_push@s	PTR struct . size(2) Largest target is 22
		 -> infix_to_postfix@s(BANK0[22]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_postfix_cal
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _postfix_cal->_atoi
    _int_stack_push->_atoi
    _int_stack_pop->_int_stack_empty
    _atoi->___wmul
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_byte
    _lcd_init->_lcd_byte
    _lcd_byte->_lcd_nibble
    _infix_to_postfix->_infix_compare
    _stack_pop->_stack_empty
    _infix_compare->_stack_peek

Critical Paths under _main in BANK0

    _main->_postfix_cal
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _postfix_cal->_int_stack_push
    _infix_to_postfix->_stack_pop

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                86    86      0    6910
                                             75 BANK0      3     3      0
                                              0 BANK3     83    83      0
                   _infix_to_postfix
                           _lcd_byte
                           _lcd_init
                     _lcd_write_char
                   _lcd_write_string
                             _memset
                        _postfix_cal
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    1766
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1561
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1436
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _postfix_cal                                         65    63      2    1914
                                             13 COMMON     1     1      0
                                             11 BANK0     64    62      2
                            ___awdiv
                             ___wmul
                               _atoi
                     _int_stack_init
                      _int_stack_pop
                     _int_stack_push
 ---------------------------------------------------------------------------------
 (2) _int_stack_push                                      11     7      4      92
                                              0 BANK0     11     7      4
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _int_stack_pop                                        9     7      2      92
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                    _int_stack_empty
 ---------------------------------------------------------------------------------
 (3) _int_stack_empty                                      8     6      2      23
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _int_stack_init                                       4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     325
                                              6 COMMON     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     304
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     1      5     102
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     1     0      1     278
                                              7 COMMON     1     0      1
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       1     1      0     232
                                              6 COMMON     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     319
                                              6 COMMON     2     2      0
                           _lcd_byte
                         _lcd_nibble
                          _lcd_pulse
 ---------------------------------------------------------------------------------
 (3) _lcd_byte                                             3     2      1     203
                                              3 COMMON     3     2      1
                         _lcd_nibble
                          _lcd_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_pulse                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _lcd_nibble                                           3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _infix_to_postfix                                    30    28      2    1485
                                              9 BANK0     30    28      2
                      _infix_compare
                        _stack_empty
                         _stack_init
                         _stack_peek
                          _stack_pop
                         _stack_push
 ---------------------------------------------------------------------------------
 (2) _stack_push                                          10     7      3      90
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (2) _stack_pop                                           13    11      2     117
                                              8 COMMON     4     2      2
                                              0 BANK0      9     9      0
                        _stack_empty
 ---------------------------------------------------------------------------------
 (3) _stack_empty                                          8     6      2      25
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _stack_peek                                           6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _stack_init                                           4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _infix_compare                                        8     6      2     168
                                              6 COMMON     8     6      2
                         _precedence
                         _stack_peek (ARG)
 ---------------------------------------------------------------------------------
 (3) _precedence                                           3     1      2     116
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _infix_to_postfix
     _infix_compare
       _precedence
       _stack_peek (ARG)
     _stack_empty
     _stack_init
     _stack_peek
     _stack_pop
       _stack_empty
     _stack_push
   _lcd_byte
     _lcd_nibble
     _lcd_pulse
   _lcd_init
     _lcd_byte
     _lcd_nibble
     _lcd_pulse
   _lcd_write_char
     _lcd_byte
   _lcd_write_string
     _lcd_write_char
   _memset
   _postfix_cal
     ___awdiv
     ___wmul
     _atoi
       ___wmul
     _int_stack_init
     _int_stack_pop
       _int_stack_empty
     _int_stack_push
       _atoi (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     83      83     86.5%
BITBANK3            96      0       0      0.0%
BANK2               96      0      32     33.3%
BITBANK2            96      0       0      0.0%
BANK1               80      0      52     65.0%
BITBANK1            80      0       0      0.0%
BANK0               80     78      79     98.8%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     260      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Jun 14 22:03:39 2025

             _postfix_cal 03DC                         pc 0002                        l21 0DCB  
                      l24 0E5C                        l41 0DDE                        l35 0FFF  
                      l28 0073                        l44 0E7F                        l61 0028  
                      l38 0E39                        l55 0F7A                        l48 00C2  
                      l67 0F14                        l92 066F              ___awdiv@sign 0075  
                      fsr 0004       ___wmul@multiplicand 0072                       l121 0FB9  
                     l130 01E2                       l124 0D97                       l133 0D8A  
                     l118 0522                       l127 0F3C                       l400 017C  
                     l153 07AD                       l139 0E05                       l413 0119  
                     l149 0691                       l247 0EAF                       l249 0EC7  
                     l732 0EA2                       l725 0E1E                       l806 0D78  
                     l719 0253                       l770 03DB                       l783 0DB8  
                     l776 0EEC                       l795 02ED           infix_compare@c1 007D  
         infix_compare@c2 0076                       _abs 0DA8                       fsr0 0004  
                     indf 0000              ___awmod@sign 0075                      ?_abs 0076  
                    l1400 0143                      l1410 0161                      l1402 0145  
                    l1500 001B                      l1412 0168                      l1404 0149  
                    l1502 0021                      l1510 0F16                      l1406 015A  
                    l1414 016E                      l1430 00CF                      l1422 00C3  
                    l1512 0F1D                      l1416 0173                      l1408 0160  
                    l1520 0EA3                      l1440 00E8                      l1432 00D3  
                    l1424 00C4                      l1506 0026                      l1602 0E1F  
                    l1514 0F2B                      l1418 0178                      l1530 0EC3  
                    l1522 0EA5                      l1610 0095                      l1450 0105  
                    l1442 00EA                      l1434 00D8                      l1426 00C8  
                    l1620 0EEE                      l1700 05A9                      l1372 0F7C  
                    l1516 0F30                      l1380 011B                      l1524 0EA9  
                    l1612 0F3D                      l1444 00EE                      l1436 00DE  
                    l1452 010B                      l1428 00CD                      l1460 0254  
                    l1540 030A                      l1702 05B5                      l1710 05DC  
                    l1374 0D8B                      l1518 0F37                      l1390 012F  
                    l1382 011F                      l1526 0EB6                      l1630 01F2  
                    l1606 0DCC                      l1614 0F4C                      l1454 0110  
                    l1446 00F8                      l1438 00E1                      l1470 02B1  
                    l1462 025A                      l1550 033C                      l1542 0310  
                    l1534 02EE                      l1712 05EB                      l1704 05C9  
                    l1720 0624                      l1376 0D92                      l1800 0180  
                    l1392 0131                      l1384 0124                      l1528 0EBD  
                    l1632 01FD                      l1624 01E3                      l1616 0F78  
                    l1608 0074                      l1456 0115                      l1448 00FE  
                    l1464 0260                      l1560 037E                      l1552 0341  
                    l1544 0316                      l1536 02FE                      l1490 0004  
                    l1482 0E3A                      l1722 0630                      l1730 0657  
                    l1714 0609                      l1706 05CF                      l1810 019E  
                    l1802 0186                      l1394 0133                      l1386 0126  
                    l1378 011A                      l1650 0243                      l1642 0213  
                    l1634 0205                      l1626 01E7                      l1474 0DA8  
                    l1466 0267                      l1570 039C                      l1562 0384  
                    l1554 0343                      l1546 0322                      l1538 0302  
                    l1492 000A                      l1732 0666                      l1724 0644  
                    l1708 05D6                      l1716 061C                      l1820 01BD  
                    l1812 01A7                      l1804 018B                      l1396 0139  
                    l1388 012A                      l1652 024F                      l1636 0207  
                    l1628 01E9                      l1740 03EA                      l1476 0DAC  
                    l1468 027F                      l1572 03B0                      l1564 0389  
                    l1556 034A                      l1548 032E                      l1580 03C2  
                    l1660 0ECD                      l1900 0701                      l1494 0010  
                    l1590 0048                      l1726 064A                      l1670 052C  
                    l1822 01C4                      l1814 01AD                      l1806 0193  
                    l1830 0DF2                      l1398 013C                      l1646 0233  
                    l1638 020A                      l1486 0E5D                      l1750 0416  
                    l1742 03F5                      l1734 03DC                      l1478 0DAD  
                    l1566 038E                      l1574 03B4                      l1558 0369  
                    l1662 0EDC                      l1910 0738                      l1902 0706  
                    l1592 0FBA                      l1728 0651                      l1680 054A  
                    l1672 0530                      l1824 01CB                      l1816 01B2  
                    l1808 0199                      l1656 0D82                      l1832 0DF3  
                    l1648 023E                      l1752 041C                      l1744 0400  
                    l1760 044F                      l1736 03E5                      l1568 0393  
                    l1576 03BB                      l1664 0EE8                      l1840 0E84  
                    l1920 0770                      l1912 074F                      l1904 0711  
                    l1498 0015                      l1586 0DB9                      l1594 0FC9  
                    l1690 057A                      l1682 0558                      l1674 0533  
                    l1826 01D2                      l1818 01B8                      l1834 0DFB  
                    l1770 0499                      l1762 045A                      l1754 0428  
                    l1746 0403                      l1738 03E9                      l1658 0EC8  
                    l1842 0E88                      l1930 07B5                      l1922 0777  
                    l1914 0756                      l1906 0726                      l1596 0FFC  
                    l1588 0029                      l1692 0581                      l1684 055E  
                    l1676 053E                      l1668 0523                      l1828 01DB  
                    l1836 0DFD                      l1852 0E06                      l1780 04C8  
                    l1772 049C                      l1764 0465                      l1756 0433  
                    l1748 0410                      l1844 0E8A                      l1932 07C2  
                    l1924 077B                      l1916 075A                      l1908 072D  
                    l1860 0670                      l1598 0FFE                      l1686 0564  
                    l1694 0588                      l1854 0E09                      l1782 04CB  
                    l1774 04A5                      l1766 0470                      l1790 0500  
                    l1758 0438                      l1846 0E8C                      l1838 0E80  
                    l1934 07CA                      l1926 0789                      l1918 0768  
                    l1870 0689                      l1862 0673                      l1696 0593  
                    l1688 056F                      l1856 0E0E                      l1776 04AE  
                    l1768 047B                      l1792 0508                      l1848 0E99  
                    l1928 079E                      l1880 06A7                      l1872 068D  
                    l1864 0678                      l1698 059E                      l1858 0E10  
                    l1794 0513                      l1778 04C2                      l1786 04DF  
                    l1890 06CA                      l1882 06B1                      l1866 067C  
                    l1788 04F3                      l1892 06E7                      l1868 0680  
                    l1798 017D                      l1894 06ED                      l1878 0695  
                    l1896 06F5                      l1888 06B5                      l1898 06FB  
                    STR_1 0806                      u1110 016E                      u1030 011F  
                    u1015 0F97                      u1111 016D                      u1031 011E  
                    u1120 0173                      u1040 012A                      u1200 010B  
                    u2000 07D7                      u1025 0FAA                      u1121 0172  
                    u1105 0162                      u1041 0129                      u1201 010A  
                    u2001 07D6                      u1050 0139                      u1210 0110  
                    u1130 00C8                      u1051 0138                      u1211 010F  
                    u1131 00C7                      u1300 0E78                      u1140 00D3  
                    u1220 025A                      u1301 0E76                      u1141 00D2  
                    u1221 0259                      u2005 07D3                      u1070 0149  
                    u1310 0E79                      u1150 00DE                      u1230 0260  
                    u1071 0148                      u1151 00DD                      u1231 025F  
                    u1320 000A                      u1400 0EC3                      u1240 027F  
                    u1321 0009                      u1065 013D                      u1401 0EC2  
                    u1241 027E                      u2017 06AD                      u1330 0010  
                    u1090 015A                      u1170 00EE                      u1250 02B1  
                    u1410 02FE                      u1331 000F                      u1091 0159  
                    u1171 00ED                      u1251 02B0                      u1411 02FD  
                    u2027 0733                      u1340 001B                      u1180 00F8  
                    u1260 02D2                      u1500 03BA                      u1420 0322  
                    u1341 001A                      u1085 014A                      u1181 00F7  
                    u1165 00E2                      u1501 03B9                      u1421 0321  
                    u2037 07A6                      u1350 0021                      u1510 0048  
                    u1270 0DAC                      u1430 032E                      u1351 0020  
                    u1511 0047                      u2047 018F                      u1095 0156  
                    u1271 0DAB                      u1255 02AD                      u1431 032D  
                    u1280 0E55                      u1520 006A                      u1600 01FD  
                    u1440 0348                      u1281 0E53                      u2057 01A2  
                    u1601 01FC                      u1185 00F4                      u1441 0346  
                    u1290 0E56                      u1530 0FC9                      u1370 0EA9  
                    u1610 0205                      u1450 0349                      u1531 0FC8  
                    u1515 0044                      u2067 01D6                      u1371 0EA8  
                    u1611 0204                      u1195 00FF                      u1540 0FEB  
                    u1700 0593                      u1620 0212                      u1460 0384  
                    u1701 0592                      u2077 0D94                      u1365 0F20  
                    u1621 0211                      u1461 0383                      u1710 059E  
                    u1630 023E                      u1550 0095                      u1470 0389  
                    u1711 059D                      u1631 023D                      u1551 0094  
                    u1471 0388                      u1720 05A9                      u1640 0243  
                    u1560 0F4C                      u1800 0428                      u1480 038E  
                    u1721 05A8                      u1385 0EB0                      u1641 0242  
                    u1561 0F4B                      u1801 0427                      u1481 038D  
                    u1570 0F0D                      u1730 05B4                      u1810 0433  
                    u1490 0393                      u1650 0EE8                      u1571 0F0B  
                    u1731 05B3                      u1395 0EB7                      u1555 0091  
                    u1811 0432                      u1491 0392                      u1651 0EE7  
                    u1580 0F0E                      u1740 05EB                      u1660 053E  
                    u1820 045A                      u1900 0684                      u1741 05EA  
                    u1661 053D                      u1821 0459                      u1750 0609  
                    u1670 0549                      u1590 01F2                      u1830 0465  
                    u1575 0F08                      u1751 0608                      u1671 0548  
                    u1591 01F1                      u1831 0464                      u1760 062F  
                    u1680 056F                      u1840 0470                      u1761 062E  
                    u1681 056E                      u1841 046F                      u1770 0666  
                    u1690 057A                      u1850 047B                      u1930 06CA  
                    u1914 06A1                      u1771 0665                      u1691 0579  
                    u1851 047A                      u1931 06C9                      u1915 069F  
                    u1860 04C8                      u1780 03F5                      u1924 06C1  
                    u1861 04C7                      u1781 03F4                      u1925 06BF  
                    u1870 0513                      u1790 0400                      u1950 0701  
                    u1871 0512                      u1791 03FF                      u1951 0700  
                    u1880 0E05                      u1960 0770                      u1881 0E04  
                    u1961 076F                      u1945 06D1                      u1890 0E1E  
                    u1891 0E1D                      u1980 079E                      u1981 079D  
                    u1990 07C2                      u1974 0795                      u1991 07C1  
                    u1975 0793                      u1995 07BE           lcd_write_char@c 0076  
  __end_of_lcd_write_char 0D8B                      abs@a 0076                      _dbuf 00A0  
                    _atoi 01E3                      _main 0670              lcd_byte@byte 0075  
            lcd_byte@mode 0073                      _prec 00C2                      btemp 007E  
             main@postfix 0190                      start 0000              stack_empty@s 0070  
        _infix_to_postfix 0523                     ??_abs 0078                     ?_atoi 0076  
                   ?_main 0070           __end_of___awdiv 017D           __end_of___awmod 011A  
         ___awdiv@divisor 0070           ___awdiv@counter 0074              vfpfcnvrt@fmt 0022  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _flags 006E                     _fputc 0254  
                   atoi@n 007B                     atoi@s 0076                     _width 00C0  
                   _putch 0D78                     pclath 000A           ?_lcd_write_char 0070  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0EA3  
         __initialization 07DB              __end_of_atoi 0254              __end_of_main 07DB  
            postfix_cal@a 003B              postfix_cal@b 003D              postfix_cal@i 0069  
                  ??_atoi 0078              postfix_cal@s 003F                    ??_main 006B  
                  ?_fputc 0070            int_stack_pop@s 0078          ___awdiv@dividend 0072  
                  ?_putch 0070             vfpfcnvrt@done 0026          ??_int_stack_init 0072  
        ??_int_stack_push 0024              vfprintf@cfmt 007D          __end_of_lcd_byte 0F3D  
        __end_of_lcd_init 01E3                    ___wmul 0EA3                 ??___awdiv 0074  
               ??___awmod 0074                    _keypad 00C4                    _memset 0E06  
        ___awdiv@quotient 0076           ___awmod@divisor 0070  __end_of_lcd_write_string 0E06  
         ___awmod@counter 0074                    fputc@c 0070                    putch@c 0070  
        __end_of_vfprintf 0EED                 ??_sprintf 0035             _infix_compare 0EED  
       lcd_write_string@s 0077              ?_stack_empty 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              ?_postfix_cal 002B              __pidataBANK1 0D98  
           __end_of_fputc 02EE             __end_of_putch 0D79  __end_of_infix_to_postfix 0670  
          ?_infix_compare 0076                   ??_fputc 0074                   ??_putch 0070  
              __pbssBANK0 006E                __pbssBANK1 00A0                __pbssBANK2 0110  
              __pmaintext 0670                   ?___wmul 0070           int_stack_init@s 0070  
                 ?_memset 0070           int_stack_push@s 0020                _lcd_nibble 0F7B  
        ??_lcd_write_char 0076                 ?_lcd_byte 0073                 ?_lcd_init 0070  
              __stringtab 0800         ??_int_stack_empty 0072         __end_of_lcd_pulse 0D98  
                 ___awdiv 011A                   ___awmod 00C3             _int_stack_pop 0F3D  
       int_stack_push@val 0022                 ?_vfprintf 002D                   __ptext1 0E80  
                 __ptext2 0EC8                   __ptext3 02EE                   __ptext4 0254  
                 __ptext5 0D78                   __ptext6 0DA8                   __ptext7 00C3  
                 __ptext8 03DC                   __ptext9 0074               precedence@c 0072  
        ___awmod@dividend 0072           ??_infix_compare 0078                   atoi@neg 007A  
                 main@col 01E1                   main@mem 01B0                   _sprintf 0E80  
                 main@key 01E0                   clrloop0 0D7A                ??_lcd_byte 0074  
              ??_lcd_init 0076                   main@row 01DE      end_of_initialization 07FC  
        postfix_cal@token 002D            main@result_str 01D0                   fputc@fp 0072  
                 memset@c 0071                   memset@n 0073                   memset@p 0075  
              _precedence 0003         __end_of_stack_pop 1000         __end_of_vfpfcnvrt 03DC  
          ?_int_stack_pop 0078          vfpfcnvrt@convarg 0028                ??_vfprintf 007D  
               _PORTBbits 0006         ?_lcd_write_string 0077                _stack_init 0DB9  
              _stack_peek 0E1F                _stack_push 0029        ??_lcd_write_string 0078  
             ?_lcd_nibble 0070                main@result 01DA               stack_init@s 0070  
             stack_peek@s 0070               stack_push@c 0072               stack_push@s 0070  
             vfpfcnvrt@ap 0023               vfpfcnvrt@cp 0027               vfpfcnvrt@fp 0020  
          __end_of___wmul 0EC8            __end_of_memset 0E1F       start_initialization 07DB  
             __end_of_abs 0DB9         ?_infix_to_postfix 0029        ??_infix_to_postfix 002B  
             ?_precedence 0070           ??_int_stack_pop 0020               vfprintf@fmt 002F  
                ??___wmul 0074         infix_to_postfix@i 0045         infix_to_postfix@j 002D  
       infix_to_postfix@s 002F                init_fetch0 0DDF               __pdataBANK1 00C4  
                ??_memset 0075                memset@dest 0070               ?_stack_init 0070  
             ?_stack_peek 0070               ?_stack_push 0070                 ___latbits 0002  
  postfix_cal@token_index 0039             __pcstackBANK0 0020             __pcstackBANK3 0190  
         _int_stack_empty 0E5D                  ?___awdiv 0070                  ?___awmod 0070  
               __pstrings 0800                 _lcd_pulse 0D8B          int_stack_empty@s 0070  
   infix_to_postfix@infix 0029                  ?_sprintf 0031            ___wmul@product 0074  
               clear_ram0 0D79                 main@F1556 0110                 _stack_pop 0FBA  
               _vfpfcnvrt 02EE   __end_of_int_stack_empty 0E80                ?_lcd_pulse 0070  
             __stringbase 0805         ___wmul@multiplier 0070                 main@index 01DC  
            ??_lcd_nibble 0070                stack_pop@s 0078     __end_of_infix_compare 0F15  
              vfpfcnvrt@c 002C             ??_stack_empty 0072        postfix_cal@postfix 002B  
              vfprintf@ap 0030                vfprintf@fp 002D             ??_postfix_cal 007D  
      __end_of_lcd_nibble 0FBA   infix_to_postfix@postfix 002A                ?_stack_pop 0078  
              ?_vfpfcnvrt 0020            _int_stack_init 0DCC            _int_stack_push 0074  
      __end_of__stringtab 0806                sprintf@fmt 0032                  __ptext10 0F3D  
                __ptext11 0E5D                  __ptext20 0F15                  __ptext12 0DCC  
                __ptext21 0D8B                  __ptext13 01E3                  __ptext30 0003  
                __ptext22 0F7B                  __ptext14 0EA3                  __ptext23 0523  
                __ptext15 011A                  __ptext24 0029                  __ptext16 0E06  
                __ptext25 0FBA                  __ptext17 0DF2                  __ptext26 0E3A  
                __ptext18 0D81                  __ptext27 0E1F                  __ptext19 017D  
                __ptext28 0DB9                  __ptext29 0EED                  _lcd_byte 0F15  
                _lcd_init 017D              ??_precedence 0072       __end_of_stack_empty 0E5D  
  __end_of_int_stack_init 0DDF    __end_of_int_stack_push 00C3                  _vfprintf 0EC8  
        ?_int_stack_empty 0070               ??_lcd_pulse 0070       __end_of_postfix_cal 0523  
            ??_stack_init 0072              ??_stack_peek 0072              ??_stack_push 0073  
       postfix_cal@result 0037                  init_ram0 0DE3        __end_of_precedence 0029  
               sprintf@ap 0036          lcd_nibble@nibble 0072                 stringcode 0800  
      __end_of_stack_init 0DCC        __end_of_stack_peek 0E3A        __end_of_stack_push 0074  
   __end_of_int_stack_pop 0F7B           ?_int_stack_init 0070           ?_int_stack_push 0020  
             ??_stack_pop 0020               ??_vfpfcnvrt 0024                  sprintf@f 0037  
                sprintf@s 0031                  stringdir 0800                  stringtab 0800  
            _stack_pop$95 007A          _lcd_write_string 0DF2               _stack_empty 0E3A  
          _lcd_write_char 0D81  
